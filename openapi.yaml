openapi: 3.0.0
info:
  contact:
    email: founders@openfort.xyz
    name: Openfort Team
    url: https://openfort.xyz
  description: "Complete Openfort API references and guides can be found at: https://openfort.xyz/docs"
  termsOfService: https://openfort.xyz
  title: Openfort API
  version: 1.0.0
servers:
- description: Openfort API Server
  url: https://api.openfort.xyz
paths:
  /iam/v1/auth/signup:
    post:
      description: "When using Openfort Auth, the endpoint creates a player based\
        \ on his email, and returns the jwt token for the player together with the\
        \ player id."
      operationId: Signup
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignupRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
          description: Success response
        "401":
          description: Api key is not valid
        "409":
          description: User already exists
      security:
      - pk: []
      summary: Sign up a player.
      tags:
      - Authentication
  /iam/v1/auth/login:
    post:
      description: "When using Openfort Auth, the endpoint authenticates the player\
        \ based on his email, and returns the jwt token for the player together with\
        \ the player id."
      operationId: Login
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
          description: Ok
        "401":
          description: ""
      security:
      - pk: []
      summary: Login a player.
      tags:
      - Authentication
  /iam/v1/auth/verify:
    get:
      description: "When using Openfort Auth, the endpoint verifies the token generated\
        \ by Openfort Auth and retrieves a corresponding player."
      operationId: VerifyAuthToken
      parameters:
      - description: Specifies the auth token.
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJwcm9qZWN0SWQiOiJwcm9qZWN0XzQ4ZWViYTU3LTJjZDUtNDE1OS1hMmNiLTA1N2EyM2EzNWU2NSIsInVzZXJJZCI6InVzZXJfNDhlZWI1Ny0yY2Q1LTQxNTktYTJjYi0wNTdhMjNhMzVlNjUiLCJpYXQiOjE2MjY0NjY0NzcsImV4cCI6MTYyN
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerResponse'
          description: Ok
        "401":
          description: ""
      security:
      - sk: []
      summary: Verify an auth token.
      tags:
      - Authentication
  /iam/v1/players:
    get:
      operationId: GetAuthenticatedPlayers
      parameters:
      - description: Specifies the maximum number of records to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: Specifies the offset for the first records to return.
        explode: true
        in: query
        name: skip
        required: false
        schema:
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: Specifies the order in which to sort the results.
        explode: true
        in: query
        name: order
        required: false
        schema:
          $ref: '#/components/schemas/SortOrder'
        style: form
      - description: Specifies the email address of the user.
        example: user@email.com
        explode: true
        in: query
        name: email
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    object: list
                    url: /iam/v1/players
                    start: 0
                    end: 1
                    total: 1
                    data:
                    - id: pla_ff54b031-a878-4ca2-9cf5-ae190f921e9b
                      object: player
                      player:
                        id: pla_ff54b031-a878-4ca2-9cf5-ae190f921e9b
                      provider: email
                      createdAt: 1691658234
                      updatedAt: 1691658234
                      email: jaume@openfort.xyz
              schema:
                $ref: '#/components/schemas/AuthPlayerListResponse'
          description: Successful response.
        "401":
          description: Error response.
      security:
      - sk: []
      - user_project: []
      summary: List authenticated players.
      tags:
      - PlayersAuthentication
  /iam/v1/players/register_key:
    post:
      operationId: RegisterKey
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterPlayerEncryptedKeyRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    player: pla_...
                    ownerAddress: 0x...
                    createdAt: 1691658234
                    updatedAt: 1691658234
              schema:
                $ref: '#/components/schemas/RegisterPlayerEncryptedKeyResponse'
          description: Successful response.
        "401":
          description: Error response.
      security:
      - pk_player: []
      summary: Register a key for the authenticated player.
      tags:
      - PlayersAuthentication
  /iam/v1/players/retrieve_key:
    get:
      operationId: RetrieveKey
      parameters: []
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    player: pla_...
                    ownerAddress: 0x...
                    salt: 0x...
                    pkCiphertext: 0x...
                    createdAt: 1691658234
                    updatedAt: 1691658234
              schema:
                $ref: '#/components/schemas/RetrievePlayerEncryptedKeyResponse'
          description: Successful response.
        "401":
          description: Error response.
      security:
      - pk_player: []
      summary: Retrieve the key for the authenticated player.
      tags:
      - PlayersAuthentication
  /iam/v1/oauth/google/signin_url:
    get:
      operationId: GetSigninUrl
      parameters: []
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSigninUrlResponse'
          description: Success response
        "401":
          description: Api key is not valid
      security:
      - pk: []
      summary: Get the google oauth signin url.
      tags:
      - GoogleAuthentication
  /iam/v1/oauth/google/token:
    get:
      operationId: GetToken
      parameters:
      - description: Specifies the oauth key.
        explode: true
        in: query
        name: key
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
          description: Ok
        "401":
          description: ""
      security:
      - pk: []
      summary: Get the google oauth token.
      tags:
      - GoogleAuthentication
  /iam/v1/oauth:
    get:
      description: The endpoint retrieves the list of oauth configurations for the
        current project environment.
      operationId: ListOAuthConfig
      parameters: []
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    data:
                    - enabled: true
                      baseUrl: https://mygame.dev.gamingservices.accelbyte.io/
                      clientId: 1234567890abcdef1234567890abcdef
                      clientSecret: abcdef1234567890abcdef1234567890
                      provider: accelbyte
              schema:
                $ref: '#/components/schemas/OAuthConfigListResponse'
          description: Returns the list of available oauth configurations for the
            current project environment.
        "401":
          description: ""
      security:
      - sk: []
      - user_project: []
      summary: List of oauth configurations.
      tags:
      - OAuth
    post:
      description: The endpoint creates oauth configuration for the current project
        environment.
      operationId: CreateOAuthConfig
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OAuthConfigRequest'
        description: Specifies the oauth provider specific configuration.
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    enabled: true
                    baseUrl: https://mygame.dev.gamingservices.accelbyte.io/
                    clientId: 1234567890abcdef1234567890abcdef
                    clientSecret: abcdef1234567890abcdef1234567890
                    provider: accelbyte
              schema:
                $ref: '#/components/schemas/OAuthConfigResponse'
          description: Successful response.
        "401":
          description: Error response.
      security:
      - sk: []
      - user_project: []
      summary: Create oauth configuration.
      tags:
      - OAuth
  /iam/v1/oauth/{provider}:
    delete:
      description: The endpoint deletes oauth configuration for specified provider
        for the current project environment.
      operationId: DeleteOAuthConfig
      parameters:
      - description: Specifies the oauth provider type.
        explode: false
        in: path
        name: provider
        required: true
        schema:
          $ref: '#/components/schemas/OAuthProvider'
        style: simple
      responses:
        "204":
          description: No content
        "401":
          description: ""
      security:
      - sk: []
      - user_project: []
      summary: Delete oauth configuration.
      tags:
      - OAuth
    get:
      description: The endpoint retrieves oauth configuration for specified provider
        for the current project environment.
      operationId: GetOAuthConfig
      parameters:
      - description: Specifies the oauth provider type.
        explode: false
        in: path
        name: provider
        required: true
        schema:
          $ref: '#/components/schemas/OAuthProvider'
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    enabled: true
                    baseUrl: https://mygame.dev.gamingservices.accelbyte.io/
                    clientId: 1234567890abcdef1234567890abcdef
                    clientSecret: abcdef1234567890abcdef1234567890
                    provider: accelbyte
              schema:
                $ref: '#/components/schemas/OAuthConfigResponse'
          description: Ok
        "401":
          description: ""
      security:
      - sk: []
      - user_project: []
      summary: Get oauth configuration.
      tags:
      - OAuth
  /iam/v1/oauth/{provider}/authorize:
    post:
      description: "The endpoint verifies the token generated by OAuth provider, creates\
        \ or retrieves a player based on his email, and returns the jwt token for\
        \ the player together with the player id."
      operationId: AuthorizeWithOAuthToken
      parameters:
      - description: OAuth provider
        explode: false
        in: path
        name: provider
        required: true
        schema:
          $ref: '#/components/schemas/OAuthProvider'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OAuthRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    playerId: pla_...
                    token: abcd....
              schema:
                $ref: '#/components/schemas/AuthorizeWithOAuthToken_200_response'
          description: Ok
        "401":
          description: ""
      security:
      - pk: []
      - sk: []
      summary: Authorize player with token.
      tags:
      - OAuth
  /iam/v1/oauth/{provider}/verify:
    post:
      description: The endpoint verifies the token generated by OAuth provider and
        retrieves a corresponding player.
      operationId: VerifyOAuthToken
      parameters:
      - description: OAuth provider
        explode: false
        in: path
        name: provider
        required: true
        schema:
          $ref: '#/components/schemas/OAuthProvider'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OAuthRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    id: pla_00000000-0000-0000-0000-000000000000
                    createdAt: 1689869074
                    object: player
                    description: John Smith
                    metadata:
                      firstName: John
                      lastName: Smith
                    name: My Player
                    accounts:
                    - id: acc_8888888888-8888-8888-8888-888888888888
                    transactionIntents:
                    - id: tin_AAAAAAAA-AAAA-AAAA-AAAA-AAAAAAAAAAAA
              schema:
                $ref: '#/components/schemas/PlayerResponse'
          description: Ok
        "401":
          description: ""
      security:
      - pk: []
      - sk: []
      summary: Retrieve player by token.
      tags:
      - OAuth
  /iam/v1/oauth/{provider}/user/{external_user_id}:
    get:
      description: Retrieves the player based on his id in the external provider system.
      operationId: GetPlayerByExternalId
      parameters:
      - description: OAuth provider
        explode: false
        in: path
        name: provider
        required: true
        schema:
          $ref: '#/components/schemas/OAuthProvider'
        style: simple
      - description: External user id
        example: "1234567890"
        explode: false
        in: path
        name: external_user_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    id: pla_00000000-0000-0000-0000-000000000000
                    createdAt: 1689869074
                    object: player
                    description: John Smith
                    metadata:
                      firstName: John
                      lastName: Smith
                    name: My Player
                    accounts:
                    - id: acc_8888888888-8888-8888-8888-888888888888
                    transactionIntents:
                    - id: tin_AAAAAAAA-AAAA-AAAA-AAAA-AAAAAAAAAAAA
              schema:
                $ref: '#/components/schemas/PlayerResponse'
          description: Ok
        "401":
          description: ""
      security:
      - sk: []
      summary: Retrieve player by external id.
      tags:
      - OAuth
  /v1/accounts:
    get:
      description: |-
        Returns a list of accounts for the given player.
        The accounts are returned sorted by creation date, with the most recently created accounts appearing first.
        By default, a maximum of ten accounts are shown per page.
      operationId: GetAccounts
      parameters:
      - description: Specifies the maximum number of records to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: Specifies the offset for the first records to return.
        explode: true
        in: query
        name: skip
        required: false
        schema:
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: Specifies the order in which to sort the results.
        explode: true
        in: query
        name: order
        required: false
        schema:
          $ref: '#/components/schemas/SortOrder'
        style: form
      - description: Specifies the fields to expand in the response.
        example:
        - transactionIntents
        explode: true
        in: query
        name: expand
        required: false
        schema:
          items:
            $ref: '#/components/schemas/AccountResponseExpandable'
          type: array
        style: form
      - description: Specifies the unique player ID (starts with pla_)
        example: pla_6f6c9067-89fa-4fc8-ac72-c242a268c584
        explode: true
        in: query
        name: player
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    object: list
                    url: /v1/accounts
                    start: 0
                    end: 1
                    total: 1
                    data:
                    - id: acc_c502d628-5bb3-42f2-b8d5-62ba46717f3a
                      createdAt: 1689869074
                      address: 0x8C5cedA46A26214A52A9D7BF036Ad2F6255BdBEa
                      chainId: 5
                      deployed: true
                      custodial: false
                      object: account
                      accountType: Upgradeable_v05
                      ownerAddress: 0x8C5cedA46A26214A52A9D7BF036Ad2F6255BdBEa
                      transactionIntents:
                      - id: tin_c502d628-5bb3-42f2-b8f5-62ba4d71df3a
              schema:
                $ref: '#/components/schemas/AccountListResponse'
          description: Successful response.
        "401":
          description: Error response.
      security:
      - sk: []
      - user_project: []
      summary: List accounts of a player.
      tags:
      - Accounts
    post:
      description: |-
        This endpoint allows you to add a new account to your Openfort player.
        Only one account can be active per chain per player.
      operationId: CreateAccount
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAccountRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    id: acc_c502d628-5bb3-42f2-b8d5-62ba46717f3a
                    createdAt: 1689869074
                    address: 0x8C5cedA46A26214A52A9D7BF036Ad2F6255BdBEa
                    chainId: 5
                    deployed: true
                    custodial: false
                    object: account
                    accountType: Upgradeable_v05
                    ownerAddress: 0x8C5cedA46A26214A52A9D7BF036Ad2F6255BdBEa
                    transactionIntents:
                    - id: tin_c502d628-5bb3-42f2-b8f5-62ba4d71df3a
              schema:
                $ref: '#/components/schemas/AccountResponse'
          description: Successful response.
        "401":
          description: Error response.
        "409":
          description: Error response.
      security:
      - sk: []
      - user_project: []
      summary: Create an account object.
      tags:
      - Accounts
  /v1/accounts/{id}:
    get:
      description: |-
        Retrieves the details of an existing account.
        Supply the unique account ID from either a account creation request or the account list, and Openfort will return the corresponding account information.
      operationId: GetAccount
      parameters:
      - description: Specifies the unique account ID (starts with acc_).
        example: acc_4194ad24-c818-4e5c-b003-9cc2aa7df53b
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: expand
        required: false
        schema:
          default: []
          items:
            $ref: '#/components/schemas/AccountResponseExpandable'
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    id: acc_c502d628-5bb3-42f2-b8d5-62ba46717f3a
                    createdAt: 1689869074
                    address: 0x8C5cedA46A26214A52A9D7BF036Ad2F6255BdBEa
                    chainId: 5
                    deployed: true
                    custodial: false
                    object: account
                    accountType: Upgradeable_v05
                    ownerAddress: 0x8C5cedA46A26214A52A9D7BF036Ad2F6255BdBEa
                    transactionIntents:
                    - id: tin_c502d628-5bb3-42f2-b8f5-62ba4d71df3a
              schema:
                $ref: '#/components/schemas/AccountResponse'
          description: Successful response.
        "401":
          description: Error response.
      security:
      - sk: []
      - user_project: []
      summary: Get existing account.
      tags:
      - Accounts
  /v1/accounts/{id}/request_transfer_ownership:
    post:
      description: |-
        This endpoint allows you to perform a request to change the owner of an account.
        To perform an update on the owner of an account, first you must provide a new owner address.
        Once requested, the owner must accept to take ownership by calling `acceptOwnership()` in the smart contract account.
      operationId: RequestTransferOwnership
      parameters:
      - description: Specifies the unique account ID.
        example: acc_4194ad24-c818-4e5c-b003-9cc2aa7df53b
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransferOwnershipRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    id: tin_c502d628-5bb3-42f2-b8f5-62ba4d71df3a
                    createdAt: 1689869074
                    object: transactionIntent
                    userOperationHash: 0x25d3...005c
                    userOperation:
                      sender: 0x63B7...484f
                      nonce: 0
                      initCode: 0x
                      callData: 0x940d...0000
                      callGasLimit:
                        type: BigNumber
                        hex: 0x0352db
                      verificationGasLimit:
                        type: BigNumber
                        hex: 0x0186a0
                      maxFeePerGas:
                        type: BigNumber
                        hex: 0x9cca659e7c
                      maxPriorityFeePerGas:
                        type: BigNumber
                        hex: 0x59682f00
                      paymasterAndData: 0x8076...931c
                      signature: 0xbdf8...e81b
                      preVerificationGas: {}
                    chainId: 5
                    updatedAt: 1689869074
                    policy:
                      id: pol_...
                    player:
                      id: pla_...
                    account:
                      id: acc_...
                    response:
                      createdAt: 1689869074
                      logs: []
                      blockNumber: 8789286
                      userOpHash: 0x25d3...005c
                      transactionHash: 0x25d3...005c
                      to: 0x0576...1B57
                      gasUsed: 336730
                      status: 1
                      error: null
                    interactions:
                    - functionName: mint
                      value: "100000000000000"
                      contract: 0x0576...1B57
                      functionArgs:
                      - 0x63B7...484f
              schema:
                $ref: '#/components/schemas/TransactionIntentResponse'
          description: Successful response.
        "401":
          description: Error response.
        "409":
          description: Error response.
      security:
      - sk: []
      summary: Request transfer ownership of account.
      tags:
      - Accounts
  /v1/accounts/{id}/cancel_transfer_ownership:
    post:
      description: This endpoint allows you to cancel a pending transfer of ownership.
      operationId: CancelTransferOwnership
      parameters:
      - description: Specifies the unique account ID.
        example: acc_4194ad24-c818-4e5c-b003-9cc2aa7df53b
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelTransferOwnershipRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    id: tin_c502d628-5bb3-42f2-b8f5-62ba4d71df3a
                    createdAt: 1689869074
                    object: transactionIntent
                    userOperationHash: 0x25d3...005c
                    userOperation:
                      sender: 0x63B7...484f
                      nonce: 0
                      initCode: 0x
                      callData: 0x940d...0000
                      callGasLimit:
                        type: BigNumber
                        hex: 0x0352db
                      verificationGasLimit:
                        type: BigNumber
                        hex: 0x0186a0
                      maxFeePerGas:
                        type: BigNumber
                        hex: 0x9cca659e7c
                      maxPriorityFeePerGas:
                        type: BigNumber
                        hex: 0x59682f00
                      paymasterAndData: 0x8076...931c
                      signature: 0xbdf8...e81b
                      preVerificationGas: {}
                    chainId: 5
                    updatedAt: 1689869074
                    policy:
                      id: pol_...
                    player:
                      id: pla_...
                    account:
                      id: acc_...
                    response:
                      createdAt: 1689869074
                      logs: []
                      blockNumber: 8789286
                      userOpHash: 0x25d3...005c
                      transactionHash: 0x25d3...005c
                      to: 0x0576...1B57
                      gasUsed: 336730
                      status: 1
                      error: null
                    interactions:
                    - functionName: mint
                      value: "100000000000000"
                      contract: 0x0576...1B57
                      functionArgs:
                      - 0x63B7...484f
              schema:
                $ref: '#/components/schemas/TransactionIntentResponse'
          description: Successful response.
        "401":
          description: Error response.
        "409":
          description: Error response.
      security:
      - sk: []
      summary: Cancel request to transfer ownership of an account.
      tags:
      - Accounts
  /v1/accounts/{id}/sign_payload:
    post:
      description: "Signs the typed data value with types data structure for domain\
        \ using the [EIP-712](https://eips.ethereum.org/EIPS/eip-712) specification."
      operationId: SignPayload
      parameters:
      - description: Specifies the unique account ID.
        example: acc_4194ad24-c818-4e5c-b003-9cc2aa7df53b
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignPayloadRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    account: acc_...
                    hash: 0x25d3...005c
                    object: signature
                    signature: 0x25d3...005c
                    address: 0x8C5cedA46A2...36Ad2F6255BdBEa
              schema:
                $ref: '#/components/schemas/SignPayloadResponse'
          description: Successful response.
        "401":
          description: Error response.
        "409":
          description: Error response.
      security:
      - sk: []
      summary: Sign a given payload
      tags:
      - Accounts
  /v1/accounts/{id}/sync:
    post:
      description: "This endpoint updates the account state with the blockchain. Specifically,\
        \ it updates the account owner and whether its deployed or not."
      operationId: SyncAccount
      parameters:
      - description: Specifies the unique account ID (starts with acc_).
        example: acc_4194ad24-c818-4e5c-b003-9cc2aa7df53b
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    id: acc_c502d628-5bb3-42f2-b8d5-62ba46717f3a
                    createdAt: 1689869074
                    address: 0x8C5cedA46A26214A52A9D7BF036Ad2F6255BdBEa
                    chainId: 5
                    deployed: true
                    custodial: false
                    object: account
                    accountType: Upgradeable_v05
                    ownerAddress: 0x8C5cedA46A26214A52A9D7BF036Ad2F6255BdBEa
                    transactionIntents:
                    - id: tin_c502d628-5bb3-42f2-b8f5-62ba4d71df3a
              schema:
                $ref: '#/components/schemas/AccountResponse'
          description: Successful response.
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "404":
          description: Account not found
      security:
      - sk: []
      summary: Sync account state with the blockchain
      tags:
      - Accounts
  /v1/accounts/{id}/deploy:
    post:
      description: This endpoint can be used to deploy an account that was counterfactually
        generated.
      operationId: DeployAccount
      parameters:
      - description: Specifies the unique account ID (starts with acc_).
        example: acc_4194ad24-c818-4e5c-b003-9cc2aa7df53b
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeployRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    id: acc_c502d628-5bb3-42f2-b8d5-62ba46717f3a
                    createdAt: 1689869074
                    address: 0x8C5cedA46A26214A52A9D7BF036Ad2F6255BdBEa
                    chainId: 5
                    deployed: true
                    custodial: false
                    object: account
                    accountType: Upgradeable_v05
                    ownerAddress: 0x8C5cedA46A26214A52A9D7BF036Ad2F6255BdBEa
                    transactionIntents:
                    - id: tin_c502d628-5bb3-42f2-b8f5-62ba4d71df3a
              schema:
                $ref: '#/components/schemas/AccountResponse'
          description: Successful response.
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "404":
          description: Account not found
      security:
      - sk: []
      - user_project: []
      summary: Deploy an account.
      tags:
      - Accounts
  /v1/accounts/{id}/start_recovery:
    post:
      operationId: StartRecovery
      parameters:
      - description: Specifies the unique account ID (starts with acc_).
        example: acc_4194ad24-c818-4e5c-b003-9cc2aa7df53b
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartRecoveryRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    id: tin_c502d628-5bb3-42f2-b8f5-62ba4d71df3a
                    createdAt: 1689869074
                    object: transactionIntent
                    userOperationHash: 0x25d3...005c
                    userOperation:
                      sender: 0x63B7...484f
                      nonce: 0
                      initCode: 0x
                      callData: 0x940d...0000
                      callGasLimit:
                        type: BigNumber
                        hex: 0x0352db
                      verificationGasLimit:
                        type: BigNumber
                        hex: 0x0186a0
                      maxFeePerGas:
                        type: BigNumber
                        hex: 0x9cca659e7c
                      maxPriorityFeePerGas:
                        type: BigNumber
                        hex: 0x59682f00
                      paymasterAndData: 0x8076...931c
                      signature: 0xbdf8...e81b
                      preVerificationGas: {}
                    chainId: 5
                    updatedAt: 1689869074
                    policy:
                      id: pol_...
                    player:
                      id: pla_...
                    account:
                      id: acc_...
                    response:
                      createdAt: 1689869074
                      logs: []
                      blockNumber: 8789286
                      userOpHash: 0x25d3...005c
                      transactionHash: 0x25d3...005c
                      to: 0x0576...1B57
                      gasUsed: 336730
                      status: 1
                      error: null
                    interactions:
                    - functionName: mint
                      value: "100000000000000"
                      contract: 0x0576...1B57
                      functionArgs:
                      - 0x63B7...484f
              schema:
                $ref: '#/components/schemas/TransactionIntentResponse'
          description: Successful response.
        "401":
          description: Error response.
        "409":
          description: Error response.
      security:
      - sk: []
      summary: Start a recovery process of a recoverable account.
      tags:
      - Accounts
  /v1/accounts/{id}/complete_recovery:
    post:
      operationId: CompleteRecovery
      parameters:
      - description: Specifies the unique account ID (starts with acc_).
        example: acc_4194ad24-c818-4e5c-b003-9cc2aa7df53b
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleteRecoveryRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    id: tin_c502d628-5bb3-42f2-b8f5-62ba4d71df3a
                    createdAt: 1689869074
                    object: transactionIntent
                    userOperationHash: 0x25d3...005c
                    userOperation:
                      sender: 0x63B7...484f
                      nonce: 0
                      initCode: 0x
                      callData: 0x940d...0000
                      callGasLimit:
                        type: BigNumber
                        hex: 0x0352db
                      verificationGasLimit:
                        type: BigNumber
                        hex: 0x0186a0
                      maxFeePerGas:
                        type: BigNumber
                        hex: 0x9cca659e7c
                      maxPriorityFeePerGas:
                        type: BigNumber
                        hex: 0x59682f00
                      paymasterAndData: 0x8076...931c
                      signature: 0xbdf8...e81b
                      preVerificationGas: {}
                    chainId: 5
                    updatedAt: 1689869074
                    policy:
                      id: pol_...
                    player:
                      id: pla_...
                    account:
                      id: acc_...
                    response:
                      createdAt: 1689869074
                      logs: []
                      blockNumber: 8789286
                      userOpHash: 0x25d3...005c
                      transactionHash: 0x25d3...005c
                      to: 0x0576...1B57
                      gasUsed: 336730
                      status: 1
                      error: null
                    interactions:
                    - functionName: mint
                      value: "100000000000000"
                      contract: 0x0576...1B57
                      functionArgs:
                      - 0x63B7...484f
              schema:
                $ref: '#/components/schemas/TransactionIntentResponse'
          description: Successful response.
        "401":
          description: Error response.
        "409":
          description: Error response.
      security:
      - sk: []
      summary: Complete a recovery process of a recoverable account.
      tags:
      - Accounts
  /v1/contracts:
    get:
      description: |-
        List of all contracts per project.
        By default, a maximum of ten contracts are shown.
      operationId: GetContracts
      parameters:
      - description: Specifies the maximum number of records to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: Specifies the offset for the first records to return.
        explode: true
        in: query
        name: skip
        required: false
        schema:
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: Specifies the order in which to sort the results.
        explode: true
        in: query
        name: order
        required: false
        schema:
          $ref: '#/components/schemas/SortOrder'
        style: form
      - description: Specifies the name of the contract.
        example: NFT Contract
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Specifies whether to include deleted contracts.
        example: false
        explode: true
        in: query
        name: deleted
        required: false
        schema:
          type: boolean
        style: form
      - description: The chain ID of the contract.
        example: 80001
        explode: true
        in: query
        name: chainId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Specifies the address of the contract.
        example: 0x742e6e61d760164d56f44801054bcf40fa821d97
        explode: true
        in: query
        name: address
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    object: list
                    url: /v1/contracts
                    start: 0
                    end: 1
                    total: 1
                    data:
                    - id: con_c502d628-5bb3-42f2-b8d5-62ba46717f3a
                      createdAt: 1689869074
                      object: contract
                      address: 0x8C5cedA46A26214A52A9D7BF036Ad2F6255BdBEa
                      chainId: 5
                      deleted: false
                      name: MyContract
                      publicVerification: true
                      abi:
                      - constant: false
                        inputs:
                        - name: addr
                          type: address
              schema:
                $ref: '#/components/schemas/ContractListResponse'
          description: Successful response.
        "401":
          description: Error response.
      security:
      - sk: []
      - user_project: []
      summary: List contracts.
      tags:
      - Contracts
    post:
      description: Add a new contract to your project in Openfort
      operationId: CreateContract
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateContractRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    id: con_c502d628-5bb3-42f2-b8d5-62ba46717f3a
                    createdAt: 1689869074
                    object: contract
                    address: 0x8C5cedA46A26214A52A9D7BF036Ad2F6255BdBEa
                    chainId: 5
                    deleted: false
                    name: MyContract
                    publicVerification: true
                    abi:
                    - constant: false
                      inputs:
                      - name: addr
                        type: address
              schema:
                $ref: '#/components/schemas/ContractResponse'
          description: Successful response.
        "401":
          description: Error response.
        "409":
          description: Error response.
      security:
      - sk: []
      - user_project: []
      summary: Create contract object.
      tags:
      - Contracts
  /v1/contracts/{id}:
    delete:
      description: Delete a contract from the project by providing its contract id.
      operationId: DeleteContract
      parameters:
      - description: Specifies the unique contract ID (starts with con_).
        example: con_0cddb398-1dc6-4e6f-8726-9ec7cea85f35
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    id: con_c502d628-5bb3-42f2-b8d5-62ba46717f3a
                    deleted: true
                    object: contract
              schema:
                $ref: '#/components/schemas/ContractDeleteResponse'
          description: Successful response.
        "401":
          description: Error response.
        "409":
          description: Error response.
      security:
      - sk: []
      - user_project: []
      summary: Deletes a contract object.
      tags:
      - Contracts
    get:
      description: Retrieve a contract by providing their contract id.
      operationId: GetContract
      parameters:
      - description: Specifies the unique contract ID (starts with con_).
        example: con_0cddb398-1dc6-4e6f-8726-9ec7cea85f35
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    id: con_c502d628-5bb3-42f2-b8d5-62ba46717f3a
                    createdAt: 1689869074
                    object: contract
                    address: 0x8C5cedA46A26214A52A9D7BF036Ad2F6255BdBEa
                    chainId: 5
                    deleted: false
                    name: MyContract
                    publicVerification: true
                    abi:
                    - constant: false
                      inputs:
                      - name: addr
                        type: address
              schema:
                $ref: '#/components/schemas/ContractResponse'
          description: Successful response.
        "401":
          description: Error response.
      security:
      - sk: []
      - user_project: []
      summary: Get a contract.
      tags:
      - Contracts
    post:
      operationId: UpdateContract
      parameters:
      - description: Specifies the unique contract ID (starts with con_).
        example: con_0cddb398-1dc6-4e6f-8726-9ec7cea85f35
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateContractRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    id: con_c502d628-5bb3-42f2-b8d5-62ba46717f3a
                    createdAt: 1689869074
                    object: contract
                    address: 0x8C5cedA46A26214A52A9D7BF036Ad2F6255BdBEa
                    chainId: 5
                    deleted: false
                    name: MyContract
                    publicVerification: true
                    abi:
                    - constant: false
                      inputs:
                      - name: addr
                        type: address
              schema:
                $ref: '#/components/schemas/ContractResponse'
          description: Successful response.
        "401":
          description: Error response.
        "409":
          description: Error response.
      security:
      - sk: []
      - user_project: []
      summary: Updates a contract object.
      tags:
      - Contracts
  /v1/contracts/{id}/read:
    get:
      description: |-
        Using this endpoint, you can get the data returned by any readable
        function listed in a contracts ABI. This could be things like querying
        the totalSupply of a currency contract, the number of owners of an items
        contract, and more.
      operationId: ReadContract
      parameters:
      - description: Specifies the unique contract ID (starts with con_).
        example: con_0cddb398-1dc6-4e6f-8726-9ec7cea85f35
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The function name of the contract.
        example: mint
        explode: true
        in: query
        name: functionName
        required: true
        schema:
          type: string
        style: form
      - description: "The function arguments of the contract, in string format. Accepts\
          \ pla_, con_ and acc_ IDs."
        example:
        - 0x662D24Bf7Ea2dD6a7D0935F680a6056b94fE934d
        explode: true
        in: query
        name: functionArgs
        required: false
        schema:
          items: {}
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    id: con_c502d628-5bb3-42f2-b8d5-62ba46717f3a
                    createdAt: 1689869074
                    object: readContract
                    functionName: balanceOf
                    result:
                      type: BigNumber
                      hex: 0x00
              schema:
                $ref: '#/components/schemas/ContractReadResponse'
          description: Successful response.
        "401":
          description: Error response.
        "409":
          description: Error response.
      security:
      - sk: []
      - user_project: []
      summary: Read on chain contract data.
      tags:
      - Contracts
  /v1/players/{id}/inventory:
    get:
      deprecated: true
      operationId: GetPlayerInventory
      parameters:
      - description: Specifies the unique player ID (starts with pla_).
        example: pla_48eeba57-2cd5-4159-a2cb-057a23a35e65
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Filter by chain id.
        example: 80001
        explode: true
        in: query
        name: chainId
        required: true
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    object: inventory
                    nativeAsset:
                      assetType: 1
                      amount: "1000000000000000000"
                      lastTransferredAt: 1689869074
                    nftAssets:
                    - assetType: 2
                      address: 0x8C5cedA46A26214A52A9D7BF036Ad2F6255BdBEa
                      tokenId: 1
                      lastTransferredAt: 1689869074
                    tokenAssets:
                    - assetType: 3
                      address: 0x8C5cedA46A26214A52A9D7BF036Ad2F6255BdBEa
                      tokenId: 1
                      amount: "1000000000000000000"
                      lastTransferredAt: 1689869074
              schema:
                $ref: '#/components/schemas/ObsoleteInventoryResponse'
          description: Successful response.
        "401":
          description: Error response.
      security:
      - sk: []
      - user_project: []
      summary: Get inventory of player.
      tags:
      - Inventories
  /v1/players/{id}/inventory/nft:
    get:
      operationId: GetPlayerNftInventory
      parameters:
      - description: Specifies the unique player ID (starts with pla_).
        example: pla_48eeba57-2cd5-4159-a2cb-057a23a35e65
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Specifies the maximum number of records to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: Specifies the offset for the first records to return.
        explode: true
        in: query
        name: skip
        required: false
        schema:
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: Specifies the order in which to sort the results.
        explode: true
        in: query
        name: order
        required: false
        schema:
          $ref: '#/components/schemas/SortOrder'
        style: form
      - description: Filter by contract ID (starts with con_).
        example: 0x1234567890abcdef1234567890abcdef12345678
        explode: true
        in: query
        name: contractId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Filter by chain id.
        example: 80001
        explode: true
        in: query
        name: chainId
        required: true
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    object: list
                    url: /v1/players/pla_.../inventory/nft
                    start: 0
                    end: 1
                    total: 1
                    data:
                    - assetType: ERC1155
                      amount: "1"
                      tokenId: 1
                      address: 0x8C5cedA46A26214A52A9D7BF036Ad2F6255BdBEa
                      lastTransferredAt: 1689869074
              schema:
                $ref: '#/components/schemas/InventoryListResponse'
          description: Successful response.
        "401":
          description: Error response.
      security:
      - sk: []
      - user_project: []
      summary: Get NFTs list of player.
      tags:
      - Inventories
  /v1/players/{id}/inventory/cryptocurrency:
    get:
      operationId: GetPlayerCryptoCurrencyInventory
      parameters:
      - description: Specifies the unique player ID (starts with pla_).
        example: pla_48eeba57-2cd5-4159-a2cb-057a23a35e65
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Specifies the maximum number of records to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: Specifies the offset for the first records to return.
        explode: true
        in: query
        name: skip
        required: false
        schema:
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: Specifies the order in which to sort the results.
        explode: true
        in: query
        name: order
        required: false
        schema:
          $ref: '#/components/schemas/SortOrder'
        style: form
      - description: Filter by contract ID (starts with con_).
        example: 0x1234567890abcdef1234567890abcdef12345678
        explode: true
        in: query
        name: contractId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Filter by chain id.
        example: 80001
        explode: true
        in: query
        name: chainId
        required: true
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    object: list
                    url: /v1/players/pla_.../inventory/cryptocurrency
                    start: 0
                    end: 1
                    total: 1
                    data:
                    - assetType: ERC20
                      amount: "1000000000000000000"
                      address: 0x8C5cedA46A26214A52A9D7BF036Ad2F6255BdBEa
                      lastTransferredAt: 1689869074
              schema:
                $ref: '#/components/schemas/InventoryListResponse'
          description: Successful response.
        "401":
          description: Error response.
      security:
      - sk: []
      - user_project: []
      summary: Get cryptocurrency list of player.
      tags:
      - Inventories
  /v1/players/{id}/inventory/native:
    get:
      operationId: GetPlayerNativeInventory
      parameters:
      - description: Specifies the unique player ID (starts with pla_).
        example: pla_48eeba57-2cd5-4159-a2cb-057a23a35e65
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Filter by chain id.
        example: 80001
        explode: true
        in: query
        name: chainId
        required: true
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    object: inventory
                    url: /v1/players/pla_.../inventory/native
                    data:
                      assetType: ETH
                      amount: "1000000000000000000"
                      lastTransferredAt: 1689869074
              schema:
                $ref: '#/components/schemas/InventoryResponse'
          description: Successful response.
        "401":
          description: Error response.
      security:
      - sk: []
      - user_project: []
      summary: Get native token list of player.
      tags:
      - Inventories
  /v1/accounts/{id}/inventory:
    get:
      deprecated: true
      operationId: GetAccountInventory
      parameters:
      - description: Specifies the unique account ID (starts with acc_).
        example: acc_4194ad24-c818-4e5c-b003-9cc2aa7df53b
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObsoleteInventoryResponse'
          description: Successful response.
        "401":
          description: Error response.
      security:
      - sk: []
      - user_project: []
      summary: Get inventory of account.
      tags:
      - Inventories
  /v1/accounts/{id}/inventory/nft:
    get:
      operationId: GetAccountNftInventory
      parameters:
      - description: Specifies the unique account ID.
        example: acc_4194ad24-c818-4e5c-b003-9cc2aa7df53b
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Specifies the maximum number of records to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: Specifies the offset for the first records to return.
        explode: true
        in: query
        name: skip
        required: false
        schema:
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: Specifies the order in which to sort the results.
        explode: true
        in: query
        name: order
        required: false
        schema:
          $ref: '#/components/schemas/SortOrder'
        style: form
      - explode: true
        in: query
        name: contractId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    object: list
                    url: /v1/accounts/acc_.../inventory/nft
                    start: 0
                    end: 1
                    total: 1
                    data:
                    - assetType: ERC1155
                      amount: "1"
                      tokenId: 1
                      address: 0x8C5cedA46A26214A52A9D7BF036Ad2F6255BdBEa
                      lastTransferredAt: 1689869074
              schema:
                $ref: '#/components/schemas/InventoryListResponse'
          description: Successful response.
        "401":
          description: Error response.
      security:
      - sk: []
      - user_project: []
      summary: Retrieves the NFT assets of an existing account.
      tags:
      - Inventories
  /v1/accounts/{id}/inventory/cryptocurrency:
    get:
      operationId: GetAccountCryptoCurrencyInventory
      parameters:
      - description: Specifies the unique account ID.
        example: acc_4194ad24-c818-4e5c-b003-9cc2aa7df53b
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Specifies the maximum number of records to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: Specifies the offset for the first records to return.
        explode: true
        in: query
        name: skip
        required: false
        schema:
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: Specifies the order in which to sort the results.
        explode: true
        in: query
        name: order
        required: false
        schema:
          $ref: '#/components/schemas/SortOrder'
        style: form
      - explode: true
        in: query
        name: contractId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    object: list
                    url: /v1/accounts/acc_.../inventory/cryptocurrency
                    start: 0
                    end: 1
                    total: 1
                    data:
                    - assetType: ERC20
                      amount: "1000000000000000000"
                      address: 0x8C5cedA46A26214A52A9D7BF036Ad2F6255BdBEa
                      lastTransferredAt: 1689869074
              schema:
                $ref: '#/components/schemas/InventoryListResponse'
          description: Successful response.
        "401":
          description: Error response.
      security:
      - sk: []
      - user_project: []
      summary: Retrieves the cryptocurrency assets of an existing account.
      tags:
      - Inventories
  /v1/accounts/{id}/inventory/native:
    get:
      operationId: GetAccountNativeInventory
      parameters:
      - description: Specifies the unique account ID.
        example: acc_4194ad24-c818-4e5c-b003-9cc2aa7df53b
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    object: inventory
                    url: /v1/accounts/acc_.../inventory/native
                    data:
                      assetType: ETH
                      amount: "1000000000000000000"
                      lastTransferredAt: 1689869074
              schema:
                $ref: '#/components/schemas/InventoryResponse'
          description: Successful response.
        "401":
          description: Error response.
      security:
      - sk: []
      - user_project: []
      summary: Retrieves the native asset of an existing account.
      tags:
      - Inventories
  /v1/players:
    get:
      description: "By default, a maximum of ten players are shown."
      operationId: GetPlayers
      parameters:
      - description: Specifies the maximum number of records to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: Specifies the offset for the first records to return.
        explode: true
        in: query
        name: skip
        required: false
        schema:
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: Specifies the order in which to sort the results.
        explode: true
        in: query
        name: order
        required: false
        schema:
          $ref: '#/components/schemas/SortOrder'
        style: form
      - description: Specifies the fields to expand in the response.
        explode: true
        in: query
        name: expand
        required: false
        schema:
          items:
            $ref: '#/components/schemas/PlayerResponseExpandable'
          type: array
        style: form
      - description: Filter by player name.
        example: John
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    object: list
                    url: /v1/players
                    start: 0
                    end: 1
                    total: 1
                    data:
                    - id: pla_00000000-0000-0000-0000-000000000000
                      createdAt: 1689869074
                      object: player
                      description: John Smith
                      metadata:
                        firstName: John
                        lastName: Smith
                      name: My Player
                      accounts:
                      - id: acc_8888888888-8888-8888-8888-888888888888
                      transactionIntents:
                      - id: tin_AAAAAAAA-AAAA-AAAA-AAAA-AAAAAAAAAAAA
              schema:
                $ref: '#/components/schemas/PlayerListResponse'
          description: Successful response.
        "401":
          description: Error response.
      security:
      - sk: []
      - user_project: []
      summary: List players.
      tags:
      - Players
    post:
      description: Add a new player to your player list in Openfort.
      operationId: CreatePlayer
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlayerCreateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    id: pla_00000000-0000-0000-0000-000000000000
                    createdAt: 1689869074
                    object: player
                    description: John Smith
                    metadata:
                      firstName: John
                      lastName: Smith
                    name: My Player
                    accounts:
                    - id: acc_8888888888-8888-8888-8888-888888888888
                    transactionIntents:
                    - id: tin_AAAAAAAA-AAAA-AAAA-AAAA-AAAAAAAAAAAA
              schema:
                $ref: '#/components/schemas/PlayerResponse'
          description: Successful response.
        "401":
          description: Error response.
        "409":
          description: Error response.
      security:
      - sk: []
      - user_project: []
      summary: Create a player object.
      tags:
      - Players
  /v1/players/{id}:
    delete:
      operationId: DeletePlayer
      parameters:
      - description: Specifies the unique player ID (starts with pla_).
        example: pla_48eeba57-2cd5-4159-a2cb-057a23a35e65
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    id: pla_00000000-0000-0000-0000-000000000000
                    object: player
                    deleted: true
              schema:
                $ref: '#/components/schemas/PlayerDeleteResponse'
          description: Successful response.
        "401":
          description: Error response.
        "409":
          description: Error response.
      security:
      - sk: []
      - user_project: []
      summary: Deletes a player object.
      tags:
      - Players
    get:
      operationId: GetPlayer
      parameters:
      - description: Specifies the unique player ID (starts with pla_).
        example: pla_48eeba57-2cd5-4159-a2cb-057a23a35e65
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Specifies the expandable fields.
        example:
        - accounts
        explode: true
        in: query
        name: expand
        required: false
        schema:
          default: []
          items:
            $ref: '#/components/schemas/PlayerResponseExpandable'
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    id: pla_00000000-0000-0000-0000-000000000000
                    createdAt: 1689869074
                    object: player
                    description: John Smith
                    metadata:
                      firstName: John
                      lastName: Smith
                    name: My Player
                    accounts:
                    - id: acc_8888888888-8888-8888-8888-888888888888
                    transactionIntents:
                    - id: tin_AAAAAAAA-AAAA-AAAA-AAAA-AAAAAAAAAAAA
              schema:
                $ref: '#/components/schemas/PlayerResponse'
          description: Successful response.
        "401":
          description: Error response.
      security:
      - sk: []
      - user_project: []
      summary: Retrieves the details of an existing player.
      tags:
      - Players
    post:
      operationId: UpdatePlayer
      parameters:
      - description: Specifies the unique player ID (starts with pla_).
        example: pla_48eeba57-2cd5-4159-a2cb-057a23a35e65
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlayerUpdateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    id: pla_00000000-0000-0000-0000-000000000000
                    createdAt: 1689869074
                    object: player
                    description: John Smith
                    metadata:
                      firstName: John
                      lastName: Smith
                    name: My Player
                    accounts:
                    - id: acc_8888888888-8888-8888-8888-888888888888
                    transactionIntents:
                    - id: tin_AAAAAAAA-AAAA-AAAA-AAAA-AAAAAAAAAAAA
              schema:
                $ref: '#/components/schemas/PlayerResponse'
          description: Successful response.
        "401":
          description: Error response.
        "409":
          description: Error response.
      security:
      - sk: []
      summary: Updates a player object.
      tags:
      - Players
  /v1/players/{id}/request_transfer_ownership:
    post:
      description: |-
        This endpoint allows you to perform a request to change the owner of an account.
        To perform an update on the owner of an account, first you must provide a new owner address.
        Once requested, the owner must accept to take ownership by calling `acceptOwnership()` in the smart contract account.
      operationId: RequestTransferAccountOwnership
      parameters:
      - description: Specifies the unique player ID (starts with pla_).
        example: pla_48eeba57-2cd5-4159-a2cb-057a23a35e65
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlayerTransferOwnershipRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    id: tin_c502d628-5bb3-42f2-b8f5-62ba4d71df3a
                    createdAt: 1689869074
                    object: transactionIntent
                    userOperationHash: 0x25d3...005c
                    userOperation:
                      sender: 0x63B7...484f
                      nonce: 0
                      initCode: 0x
                      callData: 0x940d...0000
                      callGasLimit:
                        type: BigNumber
                        hex: 0x0352db
                      verificationGasLimit:
                        type: BigNumber
                        hex: 0x0186a0
                      maxFeePerGas:
                        type: BigNumber
                        hex: 0x9cca659e7c
                      maxPriorityFeePerGas:
                        type: BigNumber
                        hex: 0x59682f00
                      paymasterAndData: 0x8076...931c
                      signature: 0xbdf8...e81b
                      preVerificationGas: {}
                    chainId: 5
                    updatedAt: 1689869074
                    policy:
                      id: pol_...
                    player:
                      id: pla_...
                    account:
                      id: acc_...
                    response:
                      createdAt: 1689869074
                      logs: []
                      blockNumber: 8789286
                      userOpHash: 0x25d3...005c
                      transactionHash: 0x25d3...005c
                      to: 0x0576...1B57
                      gasUsed: 336730
                      status: 1
                      error: null
                    interactions:
                    - functionName: mint
                      value: "100000000000000"
                      contract: 0x0576...1B57
                      functionArgs:
                      - 0x63B7...484f
              schema:
                $ref: '#/components/schemas/TransactionIntentResponse'
          description: Successful response.
        "401":
          description: Error response.
        "409":
          description: Error response.
      security:
      - sk: []
      summary: Request transfer ownership of a player.
      tags:
      - Players
  /v1/players/{id}/cancel_transfer_ownership:
    post:
      description: This endpoint allows you to cancel a pending transfer of ownership.
      operationId: CancelTransferAccountOwnership
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlayerCancelTransferOwnershipRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    id: tin_c502d628-5bb3-42f2-b8f5-62ba4d71df3a
                    createdAt: 1689869074
                    object: transactionIntent
                    userOperationHash: 0x25d3...005c
                    userOperation:
                      sender: 0x63B7...484f
                      nonce: 0
                      initCode: 0x
                      callData: 0x940d...0000
                      callGasLimit:
                        type: BigNumber
                        hex: 0x0352db
                      verificationGasLimit:
                        type: BigNumber
                        hex: 0x0186a0
                      maxFeePerGas:
                        type: BigNumber
                        hex: 0x9cca659e7c
                      maxPriorityFeePerGas:
                        type: BigNumber
                        hex: 0x59682f00
                      paymasterAndData: 0x8076...931c
                      signature: 0xbdf8...e81b
                      preVerificationGas: {}
                    chainId: 5
                    updatedAt: 1689869074
                    policy:
                      id: pol_...
                    player:
                      id: pla_...
                    account:
                      id: acc_...
                    response:
                      createdAt: 1689869074
                      logs: []
                      blockNumber: 8789286
                      userOpHash: 0x25d3...005c
                      transactionHash: 0x25d3...005c
                      to: 0x0576...1B57
                      gasUsed: 336730
                      status: 1
                      error: null
                    interactions:
                    - functionName: mint
                      value: "100000000000000"
                      contract: 0x0576...1B57
                      functionArgs:
                      - 0x63B7...484f
              schema:
                $ref: '#/components/schemas/TransactionIntentResponse'
          description: Successful response.
        "401":
          description: Error response.
        "409":
          description: Error response.
      security:
      - sk: []
      summary: Cancel request to transfer ownership of a player.
      tags:
      - Players
  /v1/players/{id}/sessions:
    post:
      deprecated: true
      operationId: CreatePlayerSession
      parameters:
      - description: Specifies the unique player ID (starts with pla_).
        example: pla_48eeba57-2cd5-4159-a2cb-057a23a35e65
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePlayerSessionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    id: ses_...
                    createdAt: 1689869074
                    address: 0x8C5cedA46A26214A52A9D7BF036Ad2F6255BdBEa
                    updatedAt: 1689869074
                    isActive: true
                    validAfter: "1650000000"
                    validUntil: "1700000000"
                    whitelist: []
                    limit: 100
                    nextAction:
                      type: sign_with_wallet
                      payload:
                        userOpHash: 0x...
                        userOp: {}
                    transactionIntents:
                    - id: tin_...
                    object: session
              schema:
                $ref: '#/components/schemas/SessionResponse'
          description: Successful response.
        "401":
          description: Error response.
      security:
      - sk: []
      summary: Create session object for a player.
      tags:
      - Players
  /v1/players/{id}/sessions/revoke:
    post:
      deprecated: true
      operationId: RevokePlayerSession
      parameters:
      - description: Specifies the unique player ID (starts with pla_).
        example: pla_48eeba57-2cd5-4159-a2cb-057a23a35e65
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RevokeSessionPlayerRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    id: ses_...
                    createdAt: 1689869074
                    address: 0x8C5cedA46A26214A52A9D7BF036Ad2F6255BdBEa
                    updatedAt: 1689869074
                    isActive: true
                    validAfter: "1650000000"
                    validUntil: "1700000000"
                    whitelist: []
                    limit: 100
                    nextAction:
                      type: sign_with_wallet
                      payload:
                        userOpHash: 0x...
                        userOp: {}
                    transactionIntents:
                    - id: tin_...
                    object: session
              schema:
                $ref: '#/components/schemas/SessionResponse'
          description: Successful response.
        "401":
          description: Error response.
      security:
      - sk: []
      summary: Revoke session object for a player.
      tags:
      - Players
  /v1/players/{id}/accounts:
    get:
      deprecated: true
      operationId: GetPlayerAccounts
      parameters:
      - description: Specifies the unique player ID (starts with pla_).
        example: pla_48eeba57-2cd5-4159-a2cb-057a23a35e65
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Specifies the expandable fields.
        example:
        - transactionIntents
        explode: true
        in: query
        name: expand
        required: false
        schema:
          default: []
          items:
            $ref: '#/components/schemas/AccountResponseExpandable'
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    object: list
                    url: /v1/accounts
                    start: 0
                    end: 1
                    total: 1
                    data:
                    - id: acc_c502d628-5bb3-42f2-b8d5-62ba46717f3a
                      createdAt: 1689869074
                      address: 0x8C5cedA46A26214A52A9D7BF036Ad2F6255BdBEa
                      chainId: 5
                      deployed: true
                      custodial: false
                      object: account
                      accountType: Upgradeable_v05
                      ownerAddress: 0x8C5cedA46A26214A52A9D7BF036Ad2F6255BdBEa
                      transactionIntents:
                      - id: tin_c502d628-5bb3-42f2-b8f5-62ba4d71df3a
              schema:
                $ref: '#/components/schemas/AccountListResponse'
          description: Successful response.
        "401":
          description: Error response.
      security:
      - sk: []
      - user_project: []
      summary: List of accounts of a player.
      tags:
      - Players
    post:
      deprecated: true
      operationId: CreatePlayerAccount
      parameters:
      - description: Specifies the unique player ID (starts with pla_).
        example: pla_48eeba57-2cd5-4159-a2cb-057a23a35e65
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePlayerAccountRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    id: acc_c502d628-5bb3-42f2-b8d5-62ba46717f3a
                    createdAt: 1689869074
                    address: 0x8C5cedA46A26214A52A9D7BF036Ad2F6255BdBEa
                    chainId: 5
                    deployed: true
                    custodial: false
                    object: account
                    accountType: Upgradeable_v05
                    ownerAddress: 0x8C5cedA46A26214A52A9D7BF036Ad2F6255BdBEa
                    transactionIntents:
                    - id: tin_c502d628-5bb3-42f2-b8f5-62ba4d71df3a
              schema:
                $ref: '#/components/schemas/AccountResponse'
          description: Successful response.
        "401":
          description: Error response.
        "409":
          description: Error response.
      security:
      - sk: []
      summary: Create account object for a player.
      tags:
      - Players
  /v1/policies:
    get:
      operationId: GetPolicies
      parameters:
      - description: Specifies the maximum number of records to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: Specifies the offset for the first records to return.
        explode: true
        in: query
        name: skip
        required: false
        schema:
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: Specifies the order in which to sort the results.
        explode: true
        in: query
        name: order
        required: false
        schema:
          $ref: '#/components/schemas/SortOrder'
        style: form
      - description: Specifies the fields to expand in the response.
        explode: true
        in: query
        name: expand
        required: false
        schema:
          items:
            $ref: '#/components/schemas/PolicyResponseExpandable'
          type: array
        style: form
      - description: Specifies the name of the policy.
        example: MyPolicy
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Specifies whether to include deleted contracts.
        example: true
        explode: true
        in: query
        name: deleted
        required: false
        schema:
          type: boolean
        style: form
      - description: The chain ID of the policy.
        example: 80001
        explode: true
        in: query
        name: chainId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Specifies whether to include enabled contracts.
        example: true
        explode: true
        in: query
        name: enabled
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    object: list
                    url: /v1/policies
                    start: 0
                    end: 1
                    total: 1
                    data:
                    - id: pol_...
                      createdAt: 1689869074
                      name: TEST
                      chainId: 5
                      strategy:
                        sponsorSchema: pay_for_user
                      deleted: false
                      enabled: true
                      object: policy
                      transactionIntents:
                      - id: tin_...
                      policyRules:
                      - createdAt: 1689869074
                        id: afu_...
                        functionName: mint
              schema:
                $ref: '#/components/schemas/PolicyListResponse'
          description: Successful response.
        "401":
          description: Error response.
      security:
      - sk: []
      - user_project: []
      summary: List policies.
      tags:
      - Policies
    post:
      operationId: CreatePolicy
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePolicyRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    id: pol_...
                    createdAt: 1689869074
                    name: TEST
                    chainId: 5
                    strategy:
                      sponsorSchema: pay_for_user
                    deleted: false
                    enabled: true
                    object: policy
                    transactionIntents:
                    - id: tin_...
                    policyRules:
                    - createdAt: 1689869074
                      id: afu_...
                      functionName: mint
              schema:
                $ref: '#/components/schemas/PolicyResponse'
          description: Successful response.
        "401":
          description: Error response.
        "409":
          description: Error response.
      security:
      - sk: []
      - user_project: []
      summary: Create a policy object.
      tags:
      - Policies
  /v1/policies/{id}:
    delete:
      operationId: DeletePolicy
      parameters:
      - description: Specifies the unique policy ID (starts with pol_).
        example: pol_48eeba57-2cd5-4159-a2cb-057a23a35e65
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    id: pol_...
                    deleted: true
                    object: policy
              schema:
                $ref: '#/components/schemas/PolicyDeleteResponse'
          description: Successful response.
        "401":
          description: Error response.
        "409":
          description: Error response.
      security:
      - sk: []
      - user_project: []
      summary: Delete a policy object.
      tags:
      - Policies
    get:
      operationId: GetPolicy
      parameters:
      - description: Specifies the unique policy ID (starts with pol_).
        example: pol_48eeba57-2cd5-4159-a2cb-057a23a35e65
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Specifies the fields to expand.
        example:
        - transactionIntents
        explode: true
        in: query
        name: expand
        required: false
        schema:
          default: []
          items:
            $ref: '#/components/schemas/PolicyResponseExpandable'
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    id: pol_...
                    createdAt: 1689869074
                    name: TEST
                    chainId: 5
                    strategy:
                      sponsorSchema: pay_for_user
                    deleted: false
                    enabled: true
                    object: policy
                    transactionIntents:
                    - id: tin_...
                    policyRules:
                    - createdAt: 1689869074
                      id: afu_...
                      functionName: mint
              schema:
                $ref: '#/components/schemas/PolicyResponse'
          description: Successful response.
        "401":
          description: Error response.
      security:
      - sk: []
      - user_project: []
      summary: Get a policy object.
      tags:
      - Policies
    post:
      operationId: UpdatePolicy
      parameters:
      - description: Specifies the unique policy ID (starts with pol_).
        example: pol_48eeba57-2cd5-4159-a2cb-057a23a35e65
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePolicyRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    id: pol_...
                    createdAt: 1689869074
                    name: TEST
                    chainId: 5
                    strategy:
                      sponsorSchema: pay_for_user
                    deleted: false
                    enabled: true
                    object: policy
                    transactionIntents:
                    - id: tin_...
                    policyRules:
                    - createdAt: 1689869074
                      id: afu_...
                      functionName: mint
              schema:
                $ref: '#/components/schemas/PolicyResponse'
          description: Successful response.
        "401":
          description: Error response.
        "409":
          description: Error response.
      security:
      - sk: []
      - user_project: []
      summary: Update a policy object.
      tags:
      - Policies
  /v1/policies/{id}/disable:
    put:
      operationId: DisablePolicy
      parameters:
      - description: Specifies the unique policy ID (starts with pol_).
        example: pol_48eeba57-2cd5-4159-a2cb-057a23a35e65
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    id: pol_...
                    createdAt: 1689869074
                    name: TEST
                    chainId: 5
                    strategy:
                      sponsorSchema: pay_for_user
                    deleted: false
                    enabled: true
                    object: policy
                    transactionIntents:
                    - id: tin_...
                    policyRules:
                    - createdAt: 1689869074
                      id: afu_...
                      functionName: mint
              schema:
                $ref: '#/components/schemas/PolicyResponse'
          description: Successful response.
        "401":
          description: Error response.
        "409":
          description: Error response.
      security:
      - sk: []
      - user_project: []
      summary: Disable a policy object.
      tags:
      - Policies
  /v1/policies/{id}/enable:
    put:
      operationId: EnablePolicy
      parameters:
      - description: Specifies the unique policy ID (starts with pol_).
        example: pol_48eeba57-2cd5-4159-a2cb-057a23a35e65
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    id: pol_...
                    createdAt: 1689869074
                    name: TEST
                    chainId: 5
                    strategy:
                      sponsorSchema: pay_for_user
                    deleted: false
                    enabled: true
                    object: policy
                    transactionIntents:
                    - id: tin_...
                    policyRules:
                    - createdAt: 1689869074
                      id: afu_...
                      functionName: mint
              schema:
                $ref: '#/components/schemas/PolicyResponse'
          description: Successful response.
        "401":
          description: Error response.
        "409":
          description: Error response.
      security:
      - sk: []
      - user_project: []
      summary: Enable a policy object.
      tags:
      - Policies
  /v1/policies/{id}/policy_rules:
    get:
      deprecated: true
      operationId: GetPolicyAllowFunctions
      parameters:
      - description: Specifies the unique policy ID (starts with pol_).
        example: pol_48eeba57-2cd5-4159-a2cb-057a23a35e65
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Specifies the fields to expand.
        example:
        - transactionIntents
        explode: true
        in: query
        name: expand
        required: false
        schema:
          default: []
          items:
            enum:
            - contract
            nullable: false
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    object: list
                    url: /v1/policy_rules
                    start: 0
                    end: 1
                    total: 1
                    data:
                    - createdAt: 1689869074
                      id: afu_...
                      object: policyRule
                      type: contract_functions
                      contract:
                        id: con_...
                      functionName: mint
              schema:
                $ref: '#/components/schemas/PolicyRuleListResponse'
          description: Successful response.
        "400":
          description: ""
        "404":
          description: ""
      security:
      - sk: []
      - user_project: []
      summary: List policy rules of a policy.
      tags:
      - Policies
    post:
      deprecated: true
      operationId: CreatePolicyAllowFunction
      parameters:
      - description: Specifies the unique policy ID (starts with pol_).
        example: pol_48eeba57-2cd5-4159-a2cb-057a23a35e65
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePolicyAllowFunctionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    createdAt: 1689869074
                    id: afu_...
                    object: policyRule
                    type: contract_functions
                    contract:
                      id: con_...
                    functionName: mint
              schema:
                $ref: '#/components/schemas/PolicyRuleResponse'
          description: Successful response.
        "400":
          description: ""
        "404":
          description: ""
      security:
      - sk: []
      - user_project: []
      summary: Create a policy rule object for a policy.
      tags:
      - Policies
  /v1/policies/{policy}/policy_rules/{policy_rule}:
    post:
      deprecated: true
      operationId: UpdatePolicyAllowFunction
      parameters:
      - description: Specifies the unique policy ID (starts with pol_).
        example: pol_48eeba57-2cd5-4159-a2cb-057a23a35e65
        explode: false
        in: path
        name: policy
        required: true
        schema:
          type: string
        style: simple
      - description: Specifies the unique policy rule ID (starts with afu_).
        example: afu_48eeba57-2cd5-4159-a2cb-057a23a35e65
        explode: false
        in: path
        name: policy_rule
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePolicyRuleRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    createdAt: 1689869074
                    id: afu_...
                    object: policyRule
                    type: rate_limit
                    functionName: count_per_interval
                    countLimit: 100
                    timeIntervalType: day
                    timeIntervalValue: 1
              schema:
                $ref: '#/components/schemas/PolicyRuleResponse'
          description: Successful response.
        "400":
          description: ""
        "404":
          description: ""
      security:
      - sk: []
      - user_project: []
      summary: Update a policy rule object of a policy.
      tags:
      - Policies
  /v1/policies/{id}/reports:
    get:
      operationId: GetPolicyTotalGasUsage
      parameters:
      - description: Specifies the unique policy ID (starts with pol_).
        example: pol_48eeba57-2cd5-4159-a2cb-057a23a35e65
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    data:
                    - periodNumber: 0
                      period:
                        start: 1690848000
                        end: 1693526399
                      averageTransactionFee: "0.002721745"
                      totalTransactionFee: "0.00544349"
                      totalTransactionFeeInUSD: "0.00191"
                      transactionIntents:
                      - transactionIntentId: tin_47eed6b7-273c-480e-b5eb-ce4a602c5f17
                        gasFee: "0.00421644"
                        gasPrice: "0.34918179665034244"
                        gasUsed: "0.000000000000421644"
                        gasFeeInUSD: "0.00148"
                      - transactionIntentId: tin_6d3b4a95-fb49-47b0-92f9-f63927018815
                        gasFee: "0.00122705"
                        gasPrice: "0.34918179665034244"
                        gasUsed: "0.000000000000122705"
                        gasFeeInUSD: "0.00043"
                    object: list
              schema:
                $ref: '#/components/schemas/GasReport'
          description: Successful response.
        "400":
          description: ""
        "404":
          description: ""
      security:
      - sk: []
      - user_project: []
      summary: List all gas reports of a policy.
      tags:
      - Policies
  /v1/policy_rules:
    get:
      operationId: GetPolicyRules
      parameters:
      - description: Specifies the maximum number of records to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: Specifies the offset for the first records to return.
        explode: true
        in: query
        name: skip
        required: false
        schema:
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: Specifies the order in which to sort the results.
        explode: true
        in: query
        name: order
        required: false
        schema:
          $ref: '#/components/schemas/SortOrder'
        style: form
      - description: Specifies the fields to expand in the response.
        explode: true
        in: query
        name: expand
        required: false
        schema:
          items:
            enum:
            - contract
            nullable: false
            type: string
          type: array
        style: form
      - description: Specifies the unique policy ID (starts with pol_).
        example: pol_48eeba57-2cd5-4159-a2cb-057a23a35e65
        explode: true
        in: query
        name: policy
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    object: list
                    url: /v1/policy_rules
                    start: 0
                    end: 1
                    total: 1
                    data:
                    - createdAt: 1689869074
                      id: afu_...
                      object: policyRule
                      type: contract_functions
                      contract:
                        id: con_...
                      functionName: mint
              schema:
                $ref: '#/components/schemas/PolicyRuleListResponse'
          description: Successful response.
        "401":
          description: Error response.
      security:
      - sk: []
      - user_project: []
      summary: List policy rules of a policy.
      tags:
      - PolicyRules
    post:
      operationId: CreatePolicyRules
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePolicyRuleRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Limit contract sponsorship:
                  value:
                    createdAt: 1689869074
                    id: afu_...
                    object: policyRule
                    type: contract_functions
                    contract:
                      id: con_...
                    functionName: mint
                Limit number of sponsored txns:
                  value:
                    createdAt: 1689869074
                    id: afu_...
                    object: policyRule
                    type: rate_limit
                    functionName: count_per_interval
                    countLimit: 100
                    timeIntervalType: day
                    timeIntervalValue: 1
                Limit gas sponsored in interval:
                  value:
                    createdAt: 1689869074
                    id: afu_...
                    object: policyRule
                    type: rate_limit
                    functionName: gas_per_interval
                    gasLimit: "1000000000000000000"
                    timeIntervalType: day
                    timeIntervalValue: 1
                Limit gas spent per txn:
                  value:
                    createdAt: 1689869074
                    id: afu_...
                    object: policyRule
                    type: rate_limit
                    functionName: gas_per_transaction
                    gasLimit: "1000000000000000000"
                Allow self account sponsorship:
                  value:
                    createdAt: 1689869074
                    id: afu_...
                    object: policyRule
                    type: account_functions
              schema:
                $ref: '#/components/schemas/PolicyRuleResponse'
          description: Successful response.
        "401":
          description: Error response.
        "409":
          description: Error response.
      security:
      - sk: []
      - user_project: []
      summary: Create a policy rule object.
      tags:
      - PolicyRules
  /v1/policy_rules/{id}:
    delete:
      operationId: DeletePolicyRules
      parameters:
      - description: Specifies the unique policy rule ID (starts with afu_).
        example: afu_4194ad24-c818-4e5c-b003-9cc2aa7df53b
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    id: afu_...
                    object: policyRule
                    deleted: true
              schema:
                $ref: '#/components/schemas/PolicyRuleDeleteResponse'
          description: Successful response.
        "401":
          description: Error response.
        "409":
          description: Error response.
      security:
      - sk: []
      - user_project: []
      summary: Deletes a policy rule object.
      tags:
      - PolicyRules
    post:
      operationId: UpdatePolicyRules
      parameters:
      - description: Specifies the unique policy rule ID (starts with afu_).
        example: afu_4194ad24-c818-4e5c-b003-9cc2aa7df53b
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePolicyRuleRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    createdAt: 1689869074
                    id: afu_...
                    object: policyRule
                    type: rate_limit
                    functionName: count_per_interval
                    countLimit: 100
                    timeIntervalType: day
                    timeIntervalValue: 1
              schema:
                $ref: '#/components/schemas/PolicyRuleResponse'
          description: Successful response.
        "401":
          description: Error response.
        "409":
          description: Error response.
      security:
      - sk: []
      - user_project: []
      summary: Update a policy rule object.
      tags:
      - PolicyRules
  /v1/sessions:
    get:
      operationId: GetPlayerSessions
      parameters:
      - description: Specifies the maximum number of records to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: Specifies the offset for the first records to return.
        explode: true
        in: query
        name: skip
        required: false
        schema:
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: Specifies the order in which to sort the results.
        explode: true
        in: query
        name: order
        required: false
        schema:
          $ref: '#/components/schemas/SortOrder'
        style: form
      - description: The player ID (starts with pla_)
        example: pla_48eeba57-2cd5-4159-a2cb-057a23a35e65
        explode: true
        in: query
        name: player
        required: true
        schema:
          type: string
        style: form
      - description: Specifies the fields to expand in the response.
        explode: true
        in: query
        name: expand
        required: false
        schema:
          items:
            $ref: '#/components/schemas/SessionResponseExpandable'
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    object: list
                    url: /v1/sessions
                    start: 0
                    end: 1
                    total: 1
                    data:
                    - id: ses_...
                      createdAt: 1689869074
                      address: 0x8C5cedA46A26214A52A9D7BF036Ad2F6255BdBEa
                      updatedAt: 1689869074
                      isActive: true
                      validAfter: "1650000000"
                      validUntil: "1700000000"
                      whitelist: []
                      limit: 100
                      nextAction:
                        type: sign_with_wallet
                        payload:
                          userOpHash: 0x...
                          userOp: {}
                      transactionIntents:
                      - id: tin_...
                      object: session
              schema:
                $ref: '#/components/schemas/SessionListResponse'
          description: Successful response.
        "401":
          description: Error response.
      security:
      - sk: []
      - user_project: []
      summary: List session keys of a player.
      tags:
      - Sessions
    post:
      operationId: CreateSession
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSessionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    id: ses_...
                    createdAt: 1689869074
                    address: 0x8C5cedA46A26214A52A9D7BF036Ad2F6255BdBEa
                    updatedAt: 1689869074
                    isActive: true
                    validAfter: "1650000000"
                    validUntil: "1700000000"
                    whitelist: []
                    limit: 100
                    nextAction:
                      type: sign_with_wallet
                      payload:
                        userOpHash: 0x...
                        userOp: {}
                    transactionIntents:
                    - id: tin_...
                    object: session
              schema:
                $ref: '#/components/schemas/SessionResponse'
          description: Successful response.
        "401":
          description: Error response.
        "409":
          description: Error response.
      security:
      - sk: []
      summary: Create a session key.
      tags:
      - Sessions
  /v1/sessions/revoke:
    post:
      operationId: RevokeSession
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RevokeSessionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    id: ses_...
                    createdAt: 1689869074
                    address: 0x8C5cedA46A26214A52A9D7BF036Ad2F6255BdBEa
                    updatedAt: 1689869074
                    isActive: true
                    validAfter: "1650000000"
                    validUntil: "1700000000"
                    whitelist: []
                    limit: 100
                    nextAction:
                      type: sign_with_wallet
                      payload:
                        userOpHash: 0x...
                        userOp: {}
                    transactionIntents:
                    - id: tin_...
                    object: session
              schema:
                $ref: '#/components/schemas/SessionResponse'
          description: Successful response.
        "401":
          description: Error response.
        "409":
          description: Error response.
      security:
      - sk: []
      summary: Revoke the session session key.
      tags:
      - Sessions
  /v1/sessions/{id}/signature:
    post:
      operationId: SignatureSession
      parameters:
      - description: Specifies the unique session ID (starts with ses_).
        example: ses_4194ad24-c818-4e5c-b003-9cc2aa7df53b
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignatureRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    id: ses_...
                    createdAt: 1689869074
                    address: 0x8C5cedA46A26214A52A9D7BF036Ad2F6255BdBEa
                    updatedAt: 1689869074
                    isActive: true
                    validAfter: "1650000000"
                    validUntil: "1700000000"
                    whitelist: []
                    limit: 100
                    nextAction:
                      type: sign_with_wallet
                      payload:
                        userOpHash: 0x...
                        userOp: {}
                    transactionIntents:
                    - id: tin_...
                    object: session
              schema:
                $ref: '#/components/schemas/SessionResponse'
          description: Successful response.
        "401":
          description: Error response.
        "409":
          description: Error response.
      security:
      - pk: []
      - sk: []
      summary: Send signed userOpHash to create session.
      tags:
      - Sessions
  /v1/sessions/{id}:
    get:
      operationId: GetSession
      parameters:
      - description: Specifies the unique session ID (starts with ses_).
        example: ses_4194ad24-c818-4e5c-b003-9cc2aa7df53b
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Specifies the fields to expand.
        example:
        - transactionIntents
        explode: true
        in: query
        name: expand
        required: false
        schema:
          default: []
          items:
            $ref: '#/components/schemas/SessionResponseExpandable'
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    id: ses_...
                    createdAt: 1689869074
                    address: 0x8C5cedA46A26214A52A9D7BF036Ad2F6255BdBEa
                    updatedAt: 1689869074
                    isActive: true
                    validAfter: "1650000000"
                    validUntil: "1700000000"
                    whitelist: []
                    limit: 100
                    nextAction:
                      type: sign_with_wallet
                      payload:
                        userOpHash: 0x...
                        userOp: {}
                    transactionIntents:
                    - id: tin_...
                    object: session
              schema:
                $ref: '#/components/schemas/SessionResponse'
          description: Successful response
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "404":
          description: Session not found
      security:
      - sk: []
      - user_project: []
      summary: Returns a player session by session id
      tags:
      - Sessions
  /v1/settings/developer_accounts:
    get:
      description: Retrieve the list of the developer accounts for the current project.
      operationId: GetDeveloperAccounts
      parameters: []
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    url: /v1/settings/developer_accounts
                    object: list
                    data:
                    - id: dac_00000000-0000-0000-0000-000000000000
                      address: 0x0000000000000000000000000000000000000000
                      name: Escrow Account
                      custodial: true
                      createdAt: 1609459200
                      object: developerAccount
                    - id: dac_88888888-8888-8888-8888-888888888888
                      address: 0x8888888888888888888888888888888888888888
                      name: Escrow Account 2
                      custodial: true
                      createdAt: 1609459200
                      object: developerAccount
                    start: 0
                    end: 2
                    total: 2
              schema:
                $ref: '#/components/schemas/DeveloperAccountListResponse'
          description: Successful response.
        "401":
          description: Error response.
        "409":
          description: Error response.
      security:
      - sk: []
      - user_project: []
      summary: List of developer accounts.
      tags:
      - Settings
    post:
      description: |-
        Create or add a developer account. Developer accounts can be used as for escrow, minting and transferring assets.
        To add your own external account, add a signature and the address of the account. This verified account can then be used as a verified depositor
      operationId: CreateDeveloperAccount
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeveloperAccountCreateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    id: dac_00000000-0000-0000-0000-000000000000
                    address: 0x0000000000000000000000000000000000000000
                    name: Escrow Account
                    custodial: true
                    createdAt: 1609459200
                    object: developerAccount
              schema:
                $ref: '#/components/schemas/DeveloperAccountResponse'
          description: Successful response.
        "401":
          description: Error response.
        "409":
          description: Error response.
      security:
      - sk: []
      - user_project: []
      summary: Create a developer account.
      tags:
      - Settings
  /v1/settings/developer_accounts/{id}:
    delete:
      description: Delete a developer account from the current project.
      operationId: DeleteDeveloperAccount
      parameters:
      - description: Specifies a unique developer account.
        example: dac_0cddb398-1dc6-4e6f-8726-9ec7cea85f35
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    id: dac_00000000-0000-0000-0000-000000000000
                    object: developerAccount
                    deleted: true
              schema:
                $ref: '#/components/schemas/DeveloperAccountDeleteResponse'
          description: Successful response.
        "401":
          description: Error response.
        "409":
          description: Error response.
      security:
      - sk: []
      - user_project: []
      summary: Delete a developer account.
      tags:
      - Settings
  /v1/settings/developer_accounts/message_to_sign:
    get:
      description: "Generate message, which should be signed by the account your want\
        \ to add as a developer account."
      operationId: GetVerificationPayload
      parameters:
      - description: Specifies the address
        example: 0x662D24Bf7Ea2dD6a7D0935F680a6056b94fE934d
        explode: true
        in: query
        name: address
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    message: I want to register 0x0000000000000000000000000000000000000000
                      to the project 33333333-3333-3333-3333-333333333333 for mainnets
                      on 20231231
                    address: 0x0000000000000000000000000000000000000000
              schema:
                $ref: '#/components/schemas/DeveloperAccountGetMessageResponse'
          description: Successful response.
        "401":
          description: Error response.
        "409":
          description: Error response.
      security:
      - sk: []
      - user_project: []
      summary: Generate message to sign
      tags:
      - Settings
  /v1/settings/webhook:
    delete:
      description: |-
        Updated the current project environment settings by removing the webhook address.
        After that system will stop sending events of the transaction intent state changes
      operationId: RemoveWebhook
      parameters: []
      responses:
        "200":
          description: Successful response.
        "401":
          description: Error response.
        "409":
          description: Error response.
      security:
      - sk: []
      summary: Removes webhook.
      tags:
      - Settings
    post:
      description: |-
        Updated the current project environment settings by assigning the webhook address.
        This address is used to send events about the changes of the transaction intent state.
      operationId: UpdateWebhook
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SettingsWebhookUpdateRequest'
        required: true
      responses:
        "200":
          description: Successful response.
        "401":
          description: Error response.
        "409":
          description: Error response.
      security:
      - sk: []
      summary: Update webhook.
      tags:
      - Settings
  /v1/transaction_intents:
    get:
      operationId: GetTransactionIntents
      parameters:
      - description: Specifies the maximum number of records to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: Specifies the offset for the first records to return.
        explode: true
        in: query
        name: skip
        required: false
        schema:
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: Specifies the order in which to sort the results.
        explode: true
        in: query
        name: order
        required: false
        schema:
          $ref: '#/components/schemas/SortOrder'
        style: form
      - description: Specifies the fields to expand in the response.
        explode: true
        in: query
        name: expand
        required: false
        schema:
          items:
            $ref: '#/components/schemas/TransactionIntentResponseExpandable'
          type: array
        style: form
      - description: The chain ID.
        example: 80001
        explode: true
        in: query
        name: chainId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filter by account ID.
        example:
        - acc_dc981458-a653-4539-b120-a321915b2896
        explode: true
        in: query
        name: accountId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Filter by player ID (starts with pla_).
        example:
        - pla_556166c9-77ad-4a39-aaf8-c432defa8a0f
        explode: true
        in: query
        name: playerId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Filter by policy ID (starts with pol_).
        example:
        - pol_7e07ae30-2a4d-48fa-803f-361da94905dd
        explode: true
        in: query
        name: policyId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    object: list
                    url: /v1/transaction_intents
                    start: 0
                    end: 1
                    total: 1
                    data:
                    - id: tin_c502d628-5bb3-42f2-b8f5-62ba4d71df3a
                      createdAt: 1689869074
                      object: transactionIntent
                      userOperationHash: 0x25d3...005c
                      userOperation:
                        sender: 0x63B7...484f
                        nonce: 0
                        initCode: 0x
                        callData: 0x940d...0000
                        callGasLimit:
                          type: BigNumber
                          hex: 0x0352db
                        verificationGasLimit:
                          type: BigNumber
                          hex: 0x0186a0
                        maxFeePerGas:
                          type: BigNumber
                          hex: 0x9cca659e7c
                        maxPriorityFeePerGas:
                          type: BigNumber
                          hex: 0x59682f00
                        paymasterAndData: 0x8076...931c
                        signature: 0xbdf8...e81b
                        preVerificationGas: {}
                      chainId: 5
                      updatedAt: 1689869074
                      policy:
                        id: pol_...
                      player:
                        id: pla_...
                      account:
                        id: acc_...
                      response:
                        createdAt: 1689869074
                        logs: []
                        blockNumber: 8789286
                        userOpHash: 0x25d3...005c
                        transactionHash: 0x25d3...005c
                        to: 0x0576...1B57
                        gasUsed: 336730
                        status: 1
                        error: null
                      interactions:
                      - functionName: mint
                        value: "100000000000000"
                        contract: 0x0576...1B57
                        functionArgs:
                        - 0x63B7...484f
              schema:
                $ref: '#/components/schemas/TransactionIntentListResponse'
          description: Successful response.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorResponse'
          description: Error response.
      security:
      - sk: []
      - user_project: []
      summary: List transaction intents.
      tags:
      - TransactionIntents
    post:
      description: |-
        Retrieve a transaction intent by providing their id on Openfort.
        Transaction intents that have not been processed yet, have the `response` attribute as undefined.
      operationId: CreateTransactionIntent
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTransactionIntentRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Transaction for custodial account:
                  value:
                    id: tin_c502d628-5bb3-42f2-b8f5-62ba4d71df3a
                    createdAt: 1689869074
                    object: transactionIntent
                    userOperationHash: 0x25d3...005c
                    userOperation:
                      sender: 0x63B7...484f
                      nonce: 0
                      initCode: 0x
                      callData: 0x940d...0000
                      callGasLimit:
                        type: BigNumber
                        hex: 0x0352db
                      verificationGasLimit:
                        type: BigNumber
                        hex: 0x0186a0
                      maxFeePerGas:
                        type: BigNumber
                        hex: 0x9cca659e7c
                      maxPriorityFeePerGas:
                        type: BigNumber
                        hex: 0x59682f00
                      paymasterAndData: 0x8076...931c
                      signature: 0xbdf8...e81b
                      preVerificationGas: {}
                    chainId: 5
                    updatedAt: 1689869074
                    policy:
                      id: pol_...
                    player:
                      id: pla_...
                    account:
                      id: acc_...
                    response:
                      createdAt: 1689869074
                      logs: []
                      blockNumber: 8789286
                      userOpHash: 0x25d3...005c
                      transactionHash: 0x25d3...005c
                      to: 0x0576...1B57
                      gasUsed: 336730
                      status: 1
                      error: null
                    interactions:
                    - functionName: mint
                      value: "100000000000000"
                      contract: 0x0576...1B57
                      functionArgs:
                      - 0x63B7...484f
                Transaction for non-custodial account:
                  value:
                    id: tin_c502d628-5bb3-42f2-b8f5-62ba4d71df3a
                    createdAt: 1689869074
                    object: transactionIntent
                    userOperationHash: 0x25d3...005c
                    userOperation:
                      sender: 0x63B7...484f
                      nonce: 0
                      initCode: 0x
                      callData: 0x940d...0000
                      callGasLimit:
                        type: BigNumber
                        hex: 0x0352db
                      verificationGasLimit:
                        type: BigNumber
                        hex: 0x0186a0
                      maxFeePerGas:
                        type: BigNumber
                        hex: 0x9cca659e7c
                      maxPriorityFeePerGas:
                        type: BigNumber
                        hex: 0x59682f00
                      paymasterAndData: 0x8076...931c
                      signature: 0xbdf8...e81b
                      preVerificationGas: {}
                    chainId: 5
                    updatedAt: 1689869074
                    policy:
                      id: pol_...
                    player:
                      id: pla_...
                    account:
                      id: acc_...
                    nextAction:
                      type: sign_with_wallet
                      payload:
                        userOp: {}
                        userOpHash: 0x25d3...005c
                    interactions:
                    - functionName: mint
                      value: "100000000000000"
                      contract: 0x0576...1B57
                      functionArgs:
                      - 0x63B7...484f
                Optimistic Transaction for custodial account:
                  value:
                    id: tin_c502d628-5bb3-42f2-b8f5-62ba4d71df3a
                    createdAt: 1689869074
                    object: transactionIntent
                    userOperationHash: 0x25d3...005c
                    userOperation:
                      sender: 0x63B7...484f
                      nonce: 0
                      initCode: 0x
                      callData: 0x940d...0000
                      callGasLimit:
                        type: BigNumber
                        hex: 0x0352db
                      verificationGasLimit:
                        type: BigNumber
                        hex: 0x0186a0
                      maxFeePerGas:
                        type: BigNumber
                        hex: 0x9cca659e7c
                      maxPriorityFeePerGas:
                        type: BigNumber
                        hex: 0x59682f00
                      paymasterAndData: 0x8076...931c
                      signature: 0xbdf8...e81b
                      preVerificationGas: {}
                    chainId: 5
                    updatedAt: 1689869074
                    policy:
                      id: pol_...
                    player:
                      id: pla_...
                    account:
                      id: acc_...
                    interactions:
                    - functionName: mint
                      value: "100000000000000"
                      contract: 0x0576...1B57
                      functionArgs:
                      - 0x63B7...484f
              schema:
                $ref: '#/components/schemas/TransactionIntentResponse'
          description: Successful response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorResponse'
          description: Request has invalid parameters.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorResponse'
          description: Error response.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorResponse'
          description: Error response.
      security:
      - sk: []
      summary: Create a transaction intent object.
      tags:
      - TransactionIntents
  /v1/transaction_intents/{id}:
    get:
      operationId: GetTransactionIntent
      parameters:
      - description: Specifies the unique transaction intent ID (starts with tin_).
        example: tin_48eeba57-2cd5-4159-a2cb-057a23a35e65
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Specifies the expandable fields.
        example:
        - players
        explode: true
        in: query
        name: expand
        required: false
        schema:
          default: []
          items:
            $ref: '#/components/schemas/TransactionIntentResponseExpandable'
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    id: tin_c502d628-5bb3-42f2-b8f5-62ba4d71df3a
                    createdAt: 1689869074
                    object: transactionIntent
                    userOperationHash: 0x25d3...005c
                    userOperation:
                      sender: 0x63B7...484f
                      nonce: 0
                      initCode: 0x
                      callData: 0x940d...0000
                      callGasLimit:
                        type: BigNumber
                        hex: 0x0352db
                      verificationGasLimit:
                        type: BigNumber
                        hex: 0x0186a0
                      maxFeePerGas:
                        type: BigNumber
                        hex: 0x9cca659e7c
                      maxPriorityFeePerGas:
                        type: BigNumber
                        hex: 0x59682f00
                      paymasterAndData: 0x8076...931c
                      signature: 0xbdf8...e81b
                      preVerificationGas: {}
                    chainId: 5
                    updatedAt: 1689869074
                    policy:
                      id: pol_...
                    player:
                      id: pla_...
                    account:
                      id: acc_...
                    response:
                      createdAt: 1689869074
                      logs: []
                      blockNumber: 8789286
                      userOpHash: 0x25d3...005c
                      transactionHash: 0x25d3...005c
                      to: 0x0576...1B57
                      gasUsed: 336730
                      status: 1
                      error: null
                    interactions:
                    - functionName: mint
                      value: "100000000000000"
                      contract: 0x0576...1B57
                      functionArgs:
                      - 0x63B7...484f
              schema:
                $ref: '#/components/schemas/TransactionIntentResponse'
          description: Successful response.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorResponse'
          description: Error response.
      security:
      - sk: []
      - user_project: []
      summary: Get a transaction intent object.
      tags:
      - TransactionIntents
  /v1/transaction_intents/estimate_gas_cost:
    post:
      description: |-
        Estimate the gas cost of creating a transaction intent and putting it on chain.
        If a policy that includes payment of gas in ERC-20 tokens is provided, an extra field `estimatedTXGasFeeToken` is returned with the estimated amount of tokens.
      operationId: EstimateTransactionIntentCost
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTransactionIntentRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Gas estimation:
                  value:
                    preVerificationGas: "55637"
                    verificationGas: "375974"
                    callGasLimit: "79646"
                    verificationGasLimit: "375974"
                    estimatedTXGas: "444793"
                    estimatedTXGasFee: "1162163748854053"
                    estimatedTXGasFeeUSD: "0.01"
                    gasPrice: "2612819331"
                Gas estimation with token policy:
                  value:
                    preVerificationGas: "55637"
                    verificationGas: "375974"
                    callGasLimit: "79646"
                    verificationGasLimit: "375974"
                    estimatedTXGas: "444793"
                    estimatedTXGasFee: "1162163748854053"
                    estimatedTXGasFeeUSD: "0.01"
                    gasPrice: "2612819331"
                    estimatedTXGasFeeToken: "200"
              schema:
                $ref: '#/components/schemas/EstimateTransactionIntentGasResult'
          description: Successful response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorResponse'
          description: Request has invalid parameters.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorResponse'
          description: Error response.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorResponse'
          description: Error response.
      security:
      - sk: []
      summary: Estimate gas cost of creating a transaction
      tags:
      - TransactionIntents
  /v1/transaction_intents/{id}/signature:
    post:
      description: |-
        For non-custodial smart accounts, each on chain action using their wallet, they must sign the userOperationHash
        received from the `POST` API endpoint that creates a transactionIntent.
      operationId: Signature
      parameters:
      - description: Specifies the unique transaction intent ID (starts with tin_).
        example: tin_48eeba57-2cd5-4159-a2cb-057a23a35e65
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignatureRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    id: tin_c502d628-5bb3-42f2-b8f5-62ba4d71df3a
                    createdAt: 1689869074
                    object: transactionIntent
                    userOperationHash: 0x25d3...005c
                    userOperation:
                      sender: 0x63B7...484f
                      nonce: 0
                      initCode: 0x
                      callData: 0x940d...0000
                      callGasLimit:
                        type: BigNumber
                        hex: 0x0352db
                      verificationGasLimit:
                        type: BigNumber
                        hex: 0x0186a0
                      maxFeePerGas:
                        type: BigNumber
                        hex: 0x9cca659e7c
                      maxPriorityFeePerGas:
                        type: BigNumber
                        hex: 0x59682f00
                      paymasterAndData: 0x8076...931c
                      signature: 0xbdf8...e81b
                      preVerificationGas: {}
                    chainId: 5
                    updatedAt: 1689869074
                    policy:
                      id: pol_...
                    player:
                      id: pla_...
                    account:
                      id: acc_...
                    response:
                      createdAt: 1689869074
                      logs: []
                      blockNumber: 8789286
                      userOpHash: 0x25d3...005c
                      transactionHash: 0x25d3...005c
                      to: 0x0576...1B57
                      gasUsed: 336730
                      status: 1
                      error: null
                    interactions:
                    - functionName: mint
                      value: "100000000000000"
                      contract: 0x0576...1B57
                      functionArgs:
                      - 0x63B7...484f
              schema:
                $ref: '#/components/schemas/TransactionIntentResponse'
          description: Successful response.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorResponse'
          description: Error response.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorResponse'
          description: Error response.
      security:
      - pk: []
      - sk: []
      summary: Send a signed transaction userOperationHash.
      tags:
      - TransactionIntents
  /v1/web3_connections:
    get:
      description: |-
        Returns a list of web3 connections for the given player.
        The connections are returned sorted by creation date, with the most recently created connections appearing first.
        By default, a maximum of ten connections are shown per page.
      operationId: GetWeb3Connections
      parameters:
      - description: Specifies the maximum number of records to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: Specifies the offset for the first records to return.
        explode: true
        in: query
        name: skip
        required: false
        schema:
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: Specifies the order in which to sort the results.
        explode: true
        in: query
        name: order
        required: false
        schema:
          $ref: '#/components/schemas/SortOrder'
        style: form
      - description: Specifies the unique player ID (starts with pla_)
        example: pla_6f6c9067-89fa-4fc8-ac72-c242a268c584
        explode: true
        in: query
        name: player
        required: false
        schema:
          type: string
        style: form
      - description: Specifies connection status
        example: false
        explode: true
        in: query
        name: disconnected
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    object: list
                    url: /v1/web3_connections
                    data:
                    - id: web3_c502d628-5bb3-42f2-b8f5-62ba4d71df3a
                      object: web3Connection
                      createdAt: 1689869074
                      player: pla_...
                      disconnected: false
                    start: 0
                    end: 1
                    total: 1
              schema:
                $ref: '#/components/schemas/Web3ConnectionListResponse'
          description: Successful response.
        "401":
          description: Error response.
      security:
      - sk: []
      - pk_player: []
      summary: List Web3 connections.
      tags:
      - Web3Connections
    post:
      description: |-
        This endpoint allows you to create a new web3 connection to your Openfort player.
        Together with the player ID (pla_), you need to provide a chain ID.
        The chain to use is required because Openfort needs to make sure the account is deployed, as counterfactual addresses cannot use web3 connections.
        The `uri` body parameter must contain a [WalletConnect pairing URI](https://specs.walletconnect.com/2.0/specs/clients/core/pairing/pairing-uri).
      operationId: CreateWeb3Connection
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWeb3ConnectionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    id: web3_c502d628-5bb3-42f2-b8f5-62ba4d71df3a
                    object: web3Connection
                    createdAt: 1689869074
                    player: pla_...
                    disconnected: false
              schema:
                $ref: '#/components/schemas/Web3ConnectionResponse'
          description: Successful response.
        "401":
          description: Error response.
        "409":
          description: Error response.
      security:
      - sk: []
      - pk_player: []
      summary: Create a Web3 Connection object.
      tags:
      - Web3Connections
  /v1/web3_connections/{id}:
    get:
      description: |-
        Retrieves the details of an existing web3 connection.
        Supply the unique web3 connection ID from either a web3 connection creation request or the web3 connection list.
        Openfort will return the corresponding web3 connection information.
      operationId: GetWeb3Connection
      parameters:
      - description: Specifies the unique web3Connection ID (starts with web3_).
        example: web3_48eeba57-2cd5-4159-a2cb-057a23a35e65
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Specifies the fields to expand.
        example:
        - players
        explode: true
        in: query
        name: expand
        required: false
        schema:
          default: []
          items:
            $ref: '#/components/schemas/Web3ConnectionResponseExpandable'
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    id: web3_c502d628-5bb3-42f2-b8f5-62ba4d71df3a
                    object: web3Connection
                    createdAt: 1689869074
                    player: pla_...
                    disconnected: false
              schema:
                $ref: '#/components/schemas/Web3ConnectionResponse'
          description: Successful response.
        "401":
          description: Error response.
      security:
      - sk: []
      - pk_player: []
      summary: Get a web3Connection object.
      tags:
      - Web3Connections
  /v1/web3_connections/{id}/actions:
    get:
      description: |-
        Returns a list of web3 actions for the given web3 connection.
        The actions are returned sorted by creation date, with the most recently received action appearing first.
        By default, a maximum of ten actions are shown per page.
      operationId: GetWeb3Actions
      parameters:
      - description: Specifies the web3Connection ID (starts with web3_).
        example: web3_48eeba57-2cd5-4159-a2cb-057a23a35e65
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    object: list
                    url: /v1/web3_actions
                    data:
                    - id: act_c502d628-5bb3-42f2-b8f5-62ba4d71df3a
                      object: web3Action
                      createdAt: 1689869074
                      web3Connection: web3_...
                      status: Pending
                      method: personal_sign
                      chaindId: "11155111"
                      from: 0x...
                      data: 0x...
                      hashedData: 0x...
                      decodedData: This is a decoded data...
                    start: 0
                    end: 1
                    total: 1
              schema:
                $ref: '#/components/schemas/Web3ActionListResponse'
          description: Successful response.
        "401":
          description: Error response.
      security:
      - sk: []
      - pk_player: []
      summary: List Web3 actions from a web3 connection.
      tags:
      - Web3Connections
  /v1/web3_connections/{id}/actions/{web3_action}:
    post:
      description: Approve or Reject a web3 action for the given web3 connection.
      operationId: SubmitWeb3Action
      parameters:
      - description: Specifies the web3Connection ID (starts with web3_).
        example: web3_48eeba57-2cd5-4159-a2cb-057a23a35e65
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Specifies web3_action (starts with act_).
        example: act_48eeba57-2cd5-4159-a2cb-057a23a35e65
        explode: false
        in: path
        name: web3_action
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitWeb3ActionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    id: act_c502d628-5bb3-42f2-b8f5-62ba4d71df3a
                    object: web3Action
                    createdAt: 1689869074
                    web3Connection: web3_...
                    status: Approved
                    method: personal_sign
                    chaindId: "11155111"
                    from: 0x...
                    data: 0x...
                    hashedData: 0x...
                    decodedData: This is a decoded data...
              schema:
                $ref: '#/components/schemas/Web3ActionResponse'
          description: Successful response.
        "401":
          description: Error response.
      security:
      - sk: []
      - pk_player: []
      summary: Approve or Reject a web3 action
      tags:
      - Web3Connections
components:
  examples: {}
  headers: {}
  parameters: {}
  requestBodies: {}
  responses: {}
  schemas:
    AuthResponse:
      additionalProperties: false
      example:
        playerId: playerId
        token: token
      properties:
        playerId:
          description: Player's identifier.
          type: string
        token:
          description: JWT token.
          type: string
      required:
      - playerId
      - token
      type: object
    SignupRequest:
      additionalProperties: false
      example:
        password: password
        name: John Doe
        description: I'm a developer.
        email: user@email.com
      properties:
        email:
          description: The email address of the user.
          example: user@email.com
          type: string
        password:
          description: The password of the user.
          example: password
          type: string
        name:
          description: The name of the user.
          example: John Doe
          type: string
        description:
          description: The description of the user.
          example: I'm a developer.
          type: string
      required:
      - email
      - name
      - password
      type: object
    LoginRequest:
      additionalProperties: false
      example:
        password: password
        email: user@email.com
      properties:
        email:
          description: The email address of the user.
          example: user@email.com
          type: string
        password:
          description: The password of the user.
          example: password
          type: string
      required:
      - email
      - password
      type: object
    Log:
      additionalProperties: false
      example:
        blockHash: blockHash
        address: address
        logIndex: 3.616076749251911
        removed: true
        data: data
        topics:
        - topics
        - topics
        blockNumber: 7.061401241503109
        orphaned: true
        transactionIndex: 9.301444243932576
        transactionHash: transactionHash
      properties:
        blockNumber:
          format: double
          type: number
        blockHash:
          type: string
        transactionIndex:
          format: double
          type: number
        removed:
          type: boolean
        address:
          type: string
        data:
          type: string
        topics:
          items:
            type: string
          type: array
        transactionHash:
          type: string
        logIndex:
          format: double
          type: number
        orphaned:
          type: boolean
      required:
      - address
      - blockHash
      - blockNumber
      - data
      - logIndex
      - removed
      - topics
      - transactionHash
      - transactionIndex
      type: object
    ResponseResponse:
      additionalProperties: false
      example:
        createdAt: 1
        gasUsed: 5
        l1GasUsed: l1GasUsed
        blockNumber: 5
        to: to
        userOpHash: userOpHash
        error: ""
        logs:
        - blockHash: blockHash
          address: address
          logIndex: 3.616076749251911
          removed: true
          data: data
          topics:
          - topics
          - topics
          blockNumber: 7.061401241503109
          orphaned: true
          transactionIndex: 9.301444243932576
          transactionHash: transactionHash
        - blockHash: blockHash
          address: address
          logIndex: 3.616076749251911
          removed: true
          data: data
          topics:
          - topics
          - topics
          blockNumber: 7.061401241503109
          orphaned: true
          transactionIndex: 9.301444243932576
          transactionHash: transactionHash
        transactionHash: transactionHash
        status: 2
      properties:
        createdAt:
          description: The unix timestamp in seconds when the transactionIntent was
            created.
          format: int32
          type: integer
        blockNumber:
          description: The block height (number) of the block including the transaction
            of this log.
          format: int32
          type: integer
        transactionHash:
          description: The transaction hash of the transaction of this log.
          type: string
        userOpHash:
          deprecated: true
          type: string
        l1GasUsed:
          description: The gas used by the transaction of this log.
          type: string
        gasUsed:
          description: The gas used by the transaction of this log.
          format: int64
          type: integer
        status:
          description: The status of the transaction of this log.
          format: int32
          type: integer
        logs:
          description: The logs of the transaction of this log.
          items:
            $ref: '#/components/schemas/Log'
          type: array
        to:
          description: The address of the contract of this log.
          type: string
        error:
          description: The error of the transaction of this log.
      required:
      - createdAt
      type: object
    Interaction:
      additionalProperties: false
      example:
        functionArgs:
        - 0x662D24Bf7Ea2dD6a7D0935F680a6056b94fE934d
        functionName: mint
        contract: con_0cddb398-1dc6-4e6f-8726-9ec7cea85f35
        to: to
        value: value
      properties:
        to:
          description: The address of the recipient.
          type: string
        value:
          description: The value of the transaction.
          type: string
        contract:
          description: The contract interacting with
          example: con_0cddb398-1dc6-4e6f-8726-9ec7cea85f35
          type: string
        functionName:
          description: The function name of the contract.
          example: mint
          type: string
        functionArgs:
          description: "The function arguments of the contract, in string format.\
            \ Accepts pla_, con_ and acc_ IDs."
          example:
          - 0x662D24Bf7Ea2dD6a7D0935F680a6056b94fE934d
          items: {}
          type: array
      type: object
    NextActionType:
      enum:
      - sign_with_wallet
      type: string
    NextActionPayload:
      additionalProperties: false
      example:
        userOp: ""
        userOpHash: userOpHash
      properties:
        userOp: {}
        userOpHash:
          type: string
      type: object
    NextActionResponse:
      additionalProperties: false
      example:
        payload:
          userOp: ""
          userOpHash: userOpHash
        type: null
      properties:
        type:
          $ref: '#/components/schemas/NextActionType'
        payload:
          $ref: '#/components/schemas/NextActionPayload'
      required:
      - payload
      - type
      type: object
    EntityIdResponse:
      additionalProperties: false
      properties:
        id:
          type: string
      required:
      - id
      type: object
    EntityType.TRANSACTION_INTENT:
      enum:
      - transactionIntent
      type: string
    TransactionIntent:
      additionalProperties: false
      properties:
        id:
          type: string
        object:
          $ref: '#/components/schemas/EntityType.TRANSACTION_INTENT'
        createdAt:
          format: int32
          type: integer
        updatedAt:
          description: The unix timestamp in seconds when the transactionIntent was
            created.
          format: int32
          type: integer
        chainId:
          description: The chain ID.
          example: 5
          format: int32
          type: integer
        userOperationHash:
          description: The hashed userOperation.
          type: string
        userOperation: {}
        response:
          $ref: '#/components/schemas/ResponseResponse'
        interactions:
          items:
            $ref: '#/components/schemas/Interaction'
          type: array
        nextAction:
          $ref: '#/components/schemas/NextActionResponse'
        policy:
          $ref: '#/components/schemas/EntityIdResponse'
        player:
          $ref: '#/components/schemas/EntityIdResponse'
        account:
          $ref: '#/components/schemas/EntityIdResponse'
      required:
      - account
      - chainId
      - createdAt
      - id
      - object
      - updatedAt
      type: object
    EntityType.ACCOUNT:
      enum:
      - account
      type: string
    Account:
      additionalProperties: false
      properties:
        id:
          type: string
        object:
          $ref: '#/components/schemas/EntityType.ACCOUNT'
        createdAt:
          format: int32
          type: integer
        address:
          type: string
        ownerAddress:
          type: string
        deployed:
          type: boolean
        custodial:
          type: boolean
        chainId:
          description: The chain ID.
          format: int32
          type: integer
        accountType:
          type: string
        pendingOwnerAddress:
          type: string
        transactionIntents:
          items:
            $ref: '#/components/schemas/EntityIdResponse'
          type: array
      required:
      - accountType
      - address
      - chainId
      - createdAt
      - custodial
      - deployed
      - id
      - object
      - ownerAddress
      type: object
    PlayerMetadata:
      additionalProperties:
        $ref: '#/components/schemas/PlayerMetadata_value'
      properties: {}
      type: object
    EntityType.PLAYER:
      enum:
      - player
      type: string
    PlayerResponse:
      additionalProperties: false
      example:
        createdAt: 0
        metadata:
          key: null
        name: name
        description: description
        id: id
        transactionIntents:
        - null
        - null
        accounts:
        - null
        - null
        object: null
      properties:
        id:
          type: string
        object:
          $ref: '#/components/schemas/EntityType.PLAYER'
        createdAt:
          format: int32
          type: integer
        name:
          type: string
        description:
          type: string
        metadata:
          additionalProperties:
            $ref: '#/components/schemas/PlayerMetadata_value'
          properties: {}
          type: object
        transactionIntents:
          items:
            $ref: '#/components/schemas/PlayerResponse_transactionIntents_inner'
          type: array
        accounts:
          items:
            $ref: '#/components/schemas/PlayerResponse_accounts_inner'
          type: array
      required:
      - createdAt
      - id
      - name
      - object
      type: object
    ResponseType.LIST:
      enum:
      - list
      type: string
    InputJsonObject:
      description: |-
        Matches a JSON object.
        Unlike `JsonObject`, this type allows undefined and read-only properties.
      properties: {}
      type: object
    InputJsonArray:
      additionalProperties: false
      description: |-
        Matches a JSON array.
        Unlike `JsonArray`, readonly arrays are assignable to this type.
      properties: {}
      type: object
    Prisma.InputJsonValue:
      anyOf:
      - type: string
      - format: double
        type: number
      - type: boolean
      - $ref: '#/components/schemas/InputJsonObject'
      - $ref: '#/components/schemas/InputJsonArray'
      - properties: {}
        type: object
      description: |-
        Matches any valid value that can be used as an input for operations like
        create and update as the value of a JSON field. Unlike `JsonValue`, this
        type allows read-only arrays and read-only object properties and disallows
        `null` at the top level.

        `null` cannot be used as the value of a JSON field because its meaning
        would be ambiguous. Use `Prisma.JsonNull` to store the JSON null value or
        `Prisma.DbNull` to clear the JSON value and set the field to the database
        NULL value instead.
    Pick_PlayerResponse.id_:
      description: "From T, pick a set of properties whose keys are in the union K"
      properties:
        id:
          type: string
      required:
      - id
      type: object
    AuthPlayerResponse:
      additionalProperties: false
      example:
        createdAt: 0
        metadata: null
        externalUserId: externalUserId
        provider: provider
        id: id
        email: email
        player: null
        object: null
        updatedAt: 6
      properties:
        player:
          $ref: '#/components/schemas/AuthPlayerResponse_player'
        id:
          type: string
        object:
          $ref: '#/components/schemas/EntityType.PLAYER'
        createdAt:
          format: int32
          type: integer
        email:
          type: string
        updatedAt:
          format: int32
          type: integer
        externalUserId:
          type: string
        provider:
          type: string
        metadata:
          $ref: '#/components/schemas/Prisma.InputJsonValue'
      required:
      - createdAt
      - id
      - object
      - provider
      - updatedAt
      type: object
    AuthPlayerListResponse:
      additionalProperties: false
      example:
        total: 5
        data:
        - createdAt: 0
          metadata: null
          externalUserId: externalUserId
          provider: provider
          id: id
          email: email
          player: null
          object: null
          updatedAt: 6
        - createdAt: 0
          metadata: null
          externalUserId: externalUserId
          provider: provider
          id: id
          email: email
          player: null
          object: null
          updatedAt: 6
        start: 1
        end: 5
        url: url
        object: null
      properties:
        object:
          $ref: '#/components/schemas/ResponseType.LIST'
        url:
          type: string
        data:
          items:
            $ref: '#/components/schemas/AuthPlayerResponse'
          type: array
        start:
          format: int32
          type: integer
        end:
          format: int32
          type: integer
        total:
          format: int32
          type: integer
      required:
      - data
      - end
      - object
      - start
      - total
      - url
      type: object
    SortOrder:
      enum:
      - asc
      - desc
      type: string
    AuthPlayerListQueries:
      additionalProperties: false
      properties:
        limit:
          description: Specifies the maximum number of records to return.
          format: int32
          minimum: 1
          type: integer
        skip:
          description: Specifies the offset for the first records to return.
          format: int32
          minimum: 0
          type: integer
        order:
          $ref: '#/components/schemas/SortOrder'
        email:
          description: Specifies the email address of the user.
          example: user@email.com
          type: string
      type: object
    RegisterPlayerEncryptedKeyResponse:
      additionalProperties: false
      example:
        createdAt: 0.8008281904610115
        ownerAddress: ownerAddress
        player: player
        updatedAt: 6.027456183070403
      properties:
        player:
          type: string
        ownerAddress:
          type: string
        createdAt:
          format: double
          type: number
        updatedAt:
          format: double
          type: number
      required:
      - createdAt
      - ownerAddress
      - player
      - updatedAt
      type: object
    RegisterPlayerEncryptedKeyRequest:
      additionalProperties: false
      example:
        salt: 0xe12fa94af9dac83ab16fa151043c9aa6084929898b27752e56a03173292a6e5d194455ee2e5dfa443c67d02b323a29f6b5aa0a7b538982da4b649bf7759e5c7c1c
        pk_ciphertext: 0xe12fa94af9dac83ab16fa151043c9aa6084929898b27752e56a03173292a6e5d194455ee2e5dfa443c67d02b323a29f6b5aa0a7b538982da4b649bf7759e5c7c1c
        owner_address: 0x1234567890abcdef1234567890abcdef12345678
      properties:
        pk_ciphertext:
          description: The cipher text of the key to register.
          example: 0xe12fa94af9dac83ab16fa151043c9aa6084929898b27752e56a03173292a6e5d194455ee2e5dfa443c67d02b323a29f6b5aa0a7b538982da4b649bf7759e5c7c1c
          type: string
        salt:
          description: The salt used expand the password of the user.
          example: 0xe12fa94af9dac83ab16fa151043c9aa6084929898b27752e56a03173292a6e5d194455ee2e5dfa443c67d02b323a29f6b5aa0a7b538982da4b649bf7759e5c7c1c
          type: string
        owner_address:
          description: The address of the owner.
          example: 0x1234567890abcdef1234567890abcdef12345678
          type: string
      required:
      - owner_address
      - pk_ciphertext
      - salt
      type: object
    RetrievePlayerEncryptedKeyResponse:
      additionalProperties: false
      example:
        createdAt: 0.8008281904610115
        salt: salt
        pkCiphertext: pkCiphertext
        ownerAddress: ownerAddress
        player: player
        updatedAt: 6.027456183070403
      properties:
        player:
          type: string
        ownerAddress:
          type: string
        createdAt:
          format: double
          type: number
        updatedAt:
          format: double
          type: number
        pkCiphertext:
          type: string
        salt:
          type: string
      required:
      - createdAt
      - ownerAddress
      - pkCiphertext
      - player
      - salt
      - updatedAt
      type: object
    GetSigninUrlResponse:
      additionalProperties: false
      example:
        url: url
        key: key
      properties:
        url:
          type: string
        key:
          type: string
      required:
      - key
      - url
      type: object
    OAuthProvider.ACCELBYTE:
      enum:
      - accelbyte
      type: string
    OAuthProvider:
      description: Enum of the supporting OAuth providers.
      enum:
      - accelbyte
      - firebase
      - google
      - lootlocker
      - playfab
      type: string
    AccelbyteOAuthConfig:
      additionalProperties: false
      description: Accelbyte oauth configuration
      properties:
        enabled:
          description: Enable OAuth provider.
          type: boolean
        provider:
          $ref: '#/components/schemas/OAuthProvider.ACCELBYTE'
        baseUrl:
          description: Base URI of your accelbyte gaming service environment. E.g.
            https://mygame.dev.gamingservices.accelbyte.io/
          type: string
        clientId:
          description: Client ID of your accelbyte gaming service environment.
          type: string
        clientSecret:
          description: Secret of your confidential IAM client.
          type: string
      required:
      - baseUrl
      - clientId
      - clientSecret
      - enabled
      - provider
      type: object
    OAuthProvider.GOOGLE:
      enum:
      - google
      type: string
    GoogleOAuthConfig:
      additionalProperties: false
      description: Google oauth configuration
      properties:
        enabled:
          description: Enable OAuth provider.
          type: boolean
        provider:
          $ref: '#/components/schemas/OAuthProvider.GOOGLE'
        clientId:
          description: Google API client ID.
          type: string
        clientSecret:
          description: Google API client secret.
          type: string
        redirectUri:
          description: |-
            The URI to redirect to after completing the auth request.
            You can use Openfort redirect URL: https://openfort.xyz/iam/v1/oauth/google/callback
          type: string
      required:
      - clientId
      - clientSecret
      - enabled
      - provider
      - redirectUri
      type: object
    OAuthProvider.PLAYFAB:
      enum:
      - playfab
      type: string
    PlayFabOAuthConfig:
      additionalProperties: false
      description: PlayFab oauth configuration
      properties:
        enabled:
          description: Enable OAuth provider.
          type: boolean
        provider:
          $ref: '#/components/schemas/OAuthProvider.PLAYFAB'
        titleId:
          description: Title ID of your Play Fab gaming service environment.
          type: string
      required:
      - enabled
      - provider
      - titleId
      type: object
    OAuthProvider.FIREBASE:
      enum:
      - firebase
      type: string
    FirebaseOAuthConfig:
      additionalProperties: false
      description: Firebase configuration
      properties:
        enabled:
          description: Enable OAuth provider.
          type: boolean
        provider:
          $ref: '#/components/schemas/OAuthProvider.FIREBASE'
        projectId:
          description: Project ID of your Firebase service environment.
          type: string
      required:
      - enabled
      - projectId
      - provider
      type: object
    OAuthProvider.LOOTLOCKER:
      enum:
      - lootlocker
      type: string
    LootLockerOAuthConfig:
      additionalProperties: false
      description: LootLocker oauth configuration
      properties:
        enabled:
          description: Enable OAuth provider.
          type: boolean
        provider:
          $ref: '#/components/schemas/OAuthProvider.LOOTLOCKER'
      required:
      - enabled
      - provider
      type: object
    OAuthConfig:
      anyOf:
      - $ref: '#/components/schemas/AccelbyteOAuthConfig'
      - $ref: '#/components/schemas/GoogleOAuthConfig'
      - $ref: '#/components/schemas/PlayFabOAuthConfig'
      - $ref: '#/components/schemas/FirebaseOAuthConfig'
      - $ref: '#/components/schemas/LootLockerOAuthConfig'
    OAuthConfigListResponse:
      additionalProperties: false
      description: Response for the OAuth config list method.
      example:
        data:
        - null
        - null
      properties:
        data:
          description: List of the OAuth providers configurations
          items:
            $ref: '#/components/schemas/OAuthConfig'
          type: array
      required:
      - data
      type: object
    OAuthConfigResponse:
      $ref: '#/components/schemas/OAuthConfig'
    OAuthConfigRequest:
      $ref: '#/components/schemas/OAuthConfig'
    AuthenticatedPlayerResponse:
      additionalProperties: false
      properties:
        playerId:
          description: Player's identifier.
          type: string
      required:
      - playerId
      type: object
    OAuthRequest:
      additionalProperties: false
      description: The request to verify access token
      example:
        token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9
      properties:
        token:
          description: Access token to be verified
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9
          type: string
      required:
      - token
      type: object
    AccountResponse:
      additionalProperties: false
      example:
        createdAt: 0
        pendingOwnerAddress: pendingOwnerAddress
        address: address
        chainId: 6
        custodial: true
        accountType: accountType
        deployed: true
        id: id
        ownerAddress: ownerAddress
        transactionIntents:
        - null
        - null
        object: null
      properties:
        id:
          type: string
        object:
          $ref: '#/components/schemas/EntityType.ACCOUNT'
        createdAt:
          format: int32
          type: integer
        address:
          type: string
        ownerAddress:
          type: string
        deployed:
          type: boolean
        custodial:
          type: boolean
        chainId:
          description: The chain ID.
          format: int32
          type: integer
        accountType:
          type: string
        pendingOwnerAddress:
          type: string
        transactionIntents:
          items:
            $ref: '#/components/schemas/PlayerResponse_transactionIntents_inner'
          type: array
      required:
      - accountType
      - address
      - chainId
      - createdAt
      - custodial
      - deployed
      - id
      - object
      - ownerAddress
      type: object
    AccountListResponse:
      additionalProperties: false
      example:
        total: 5
        data:
        - createdAt: 0
          pendingOwnerAddress: pendingOwnerAddress
          address: address
          chainId: 6
          custodial: true
          accountType: accountType
          deployed: true
          id: id
          ownerAddress: ownerAddress
          transactionIntents:
          - null
          - null
          object: null
        - createdAt: 0
          pendingOwnerAddress: pendingOwnerAddress
          address: address
          chainId: 6
          custodial: true
          accountType: accountType
          deployed: true
          id: id
          ownerAddress: ownerAddress
          transactionIntents:
          - null
          - null
          object: null
        start: 1
        end: 5
        url: url
        object: null
      properties:
        object:
          $ref: '#/components/schemas/ResponseType.LIST'
        url:
          type: string
        data:
          items:
            $ref: '#/components/schemas/AccountResponse'
          type: array
        start:
          format: int32
          type: integer
        end:
          format: int32
          type: integer
        total:
          format: int32
          type: integer
      required:
      - data
      - end
      - object
      - start
      - total
      - url
      type: object
    AccountResponseExpandable:
      enum:
      - transactionIntents
      nullable: false
      type: string
    AccountListQueries:
      additionalProperties: false
      properties:
        limit:
          description: Specifies the maximum number of records to return.
          format: int32
          minimum: 1
          type: integer
        skip:
          description: Specifies the offset for the first records to return.
          format: int32
          minimum: 0
          type: integer
        order:
          $ref: '#/components/schemas/SortOrder'
        expand:
          description: Specifies the fields to expand in the response.
          example:
          - transactionIntents
          items:
            $ref: '#/components/schemas/AccountResponseExpandable'
          type: array
        player:
          description: Specifies the unique player ID (starts with pla_)
          example: pla_6f6c9067-89fa-4fc8-ac72-c242a268c584
          type: string
      required:
      - player
      type: object
    CreateAccountRequest:
      additionalProperties: false
      example:
        externalOwnerAddress: 0x662D24Bf7Ea2dD6a7D0935F680a6056b94fE934d
        tokenId: 1
        chainId: 80001
        tokenContract: 0x662D24Bf7Ea2dD6a7D0135F680a6056b94fE934d
        accountType: UpgradeableV5
        player: pla_e0b84653-1741-4a3d-9e91-2b0fd2942f60
      properties:
        chainId:
          description: The chain id
          example: 80001
          format: int32
          type: integer
        externalOwnerAddress:
          description: The address of the external owner
          example: 0x662D24Bf7Ea2dD6a7D0935F680a6056b94fE934d
          type: string
        accountType:
          description: "The type of smart account that will be created (e.g. ERC6551V1,\
            \ ManagedV5, UpgradeableV5). Defaults to UpgradeableV5."
          example: UpgradeableV5
          type: string
        tokenContract:
          description: "If ERC6551, the NFT contract to use"
          example: 0x662D24Bf7Ea2dD6a7D0135F680a6056b94fE934d
          type: string
        tokenId:
          description: "If ERC6551, the tokenID to serve as owner"
          example: 1
          format: int64
          type: integer
        player:
          description: The player ID (starts with pla_)
          example: pla_e0b84653-1741-4a3d-9e91-2b0fd2942f60
          type: string
      required:
      - chainId
      - player
      type: object
    SponsorSchema.PAY_FOR_USER:
      enum:
      - pay_for_user
      type: string
    SponsorSchema:
      enum:
      - pay_for_user
      - charge_custom_tokens
      - fixed_rate
      type: string
    PayForUserPolicyStrategy:
      additionalProperties: false
      properties:
        sponsorSchema:
          $ref: '#/components/schemas/SponsorSchema.PAY_FOR_USER'
        depositor:
          nullable: true
          type: string
      required:
      - sponsorSchema
      type: object
    SponsorSchema.CHARGE_CUSTOM_TOKENS:
      enum:
      - charge_custom_tokens
      type: string
    ChargeCustomTokenPolicyStrategy:
      additionalProperties: false
      properties:
        sponsorSchema:
          $ref: '#/components/schemas/SponsorSchema.CHARGE_CUSTOM_TOKENS'
        depositor:
          nullable: true
          type: string
        tokenContract:
          type: string
        tokenContractAmount:
          type: string
      required:
      - sponsorSchema
      - tokenContract
      - tokenContractAmount
      type: object
    SponsorSchema.FIXED_RATE:
      enum:
      - fixed_rate
      type: string
    FixedRateTokenPolicyStrategy:
      additionalProperties: false
      properties:
        sponsorSchema:
          $ref: '#/components/schemas/SponsorSchema.FIXED_RATE'
        depositor:
          nullable: true
          type: string
        tokenContract:
          type: string
        tokenContractAmount:
          type: string
      required:
      - sponsorSchema
      - tokenContract
      - tokenContractAmount
      type: object
    PolicyStrategy:
      anyOf:
      - $ref: '#/components/schemas/PayForUserPolicyStrategy'
      - $ref: '#/components/schemas/ChargeCustomTokenPolicyStrategy'
      - $ref: '#/components/schemas/FixedRateTokenPolicyStrategy'
    EntityType.POLICY:
      enum:
      - policy
      type: string
    Policy:
      additionalProperties: false
      properties:
        id:
          type: string
        object:
          $ref: '#/components/schemas/EntityType.POLICY'
        createdAt:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        deleted:
          type: boolean
        enabled:
          type: boolean
        chainId:
          description: The chain ID.
          format: int32
          type: integer
        strategy:
          $ref: '#/components/schemas/PolicyStrategy'
        transactionIntents:
          items:
            $ref: '#/components/schemas/EntityIdResponse'
          type: array
        policyRules:
          items:
            $ref: '#/components/schemas/EntityIdResponse'
          type: array
      required:
      - chainId
      - createdAt
      - deleted
      - enabled
      - id
      - name
      - object
      - policyRules
      - strategy
      - transactionIntents
      type: object
    Player:
      additionalProperties: false
      properties:
        id:
          type: string
        object:
          $ref: '#/components/schemas/EntityType.PLAYER'
        createdAt:
          format: int32
          type: integer
        name:
          type: string
        description:
          type: string
        metadata:
          additionalProperties:
            $ref: '#/components/schemas/PlayerMetadata_value'
          properties: {}
          type: object
        transactionIntents:
          items:
            $ref: '#/components/schemas/EntityIdResponse'
          type: array
        accounts:
          items:
            $ref: '#/components/schemas/EntityIdResponse'
          type: array
      required:
      - createdAt
      - id
      - name
      - object
      type: object
    TransactionIntentResponse:
      additionalProperties: false
      example:
        nextAction:
          payload:
            userOp: ""
            userOpHash: userOpHash
          type: null
        interactions:
        - functionArgs:
          - 0x662D24Bf7Ea2dD6a7D0935F680a6056b94fE934d
          functionName: mint
          contract: con_0cddb398-1dc6-4e6f-8726-9ec7cea85f35
          to: to
          value: value
        - functionArgs:
          - 0x662D24Bf7Ea2dD6a7D0935F680a6056b94fE934d
          functionName: mint
          contract: con_0cddb398-1dc6-4e6f-8726-9ec7cea85f35
          to: to
          value: value
        createdAt: 0
        chainId: 5
        response:
          createdAt: 1
          gasUsed: 5
          l1GasUsed: l1GasUsed
          blockNumber: 5
          to: to
          userOpHash: userOpHash
          error: ""
          logs:
          - blockHash: blockHash
            address: address
            logIndex: 3.616076749251911
            removed: true
            data: data
            topics:
            - topics
            - topics
            blockNumber: 7.061401241503109
            orphaned: true
            transactionIndex: 9.301444243932576
            transactionHash: transactionHash
          - blockHash: blockHash
            address: address
            logIndex: 3.616076749251911
            removed: true
            data: data
            topics:
            - topics
            - topics
            blockNumber: 7.061401241503109
            orphaned: true
            transactionIndex: 9.301444243932576
            transactionHash: transactionHash
          transactionHash: transactionHash
          status: 2
        userOperation: ""
        userOperationHash: userOperationHash
        id: id
        account: acc_...
        object: null
        updatedAt: 6
        policy: pol_...
        player: pla_...
      properties:
        id:
          type: string
        object:
          $ref: '#/components/schemas/EntityType.TRANSACTION_INTENT'
        createdAt:
          format: int32
          type: integer
        updatedAt:
          description: The unix timestamp in seconds when the transactionIntent was
            created.
          format: int32
          type: integer
        chainId:
          description: The chain ID.
          example: 5
          format: int32
          type: integer
        userOperationHash:
          description: The hashed userOperation.
          type: string
        userOperation: {}
        response:
          $ref: '#/components/schemas/ResponseResponse'
        interactions:
          items:
            $ref: '#/components/schemas/Interaction'
          type: array
        nextAction:
          $ref: '#/components/schemas/NextActionResponse'
        policy:
          $ref: '#/components/schemas/TransactionIntentResponse_policy'
        player:
          $ref: '#/components/schemas/TransactionIntentResponse_player'
        account:
          $ref: '#/components/schemas/TransactionIntentResponse_account'
      required:
      - account
      - chainId
      - createdAt
      - id
      - object
      - updatedAt
      type: object
    TransferOwnershipRequest:
      additionalProperties: false
      example:
        newOwnerAddress: 0x1234567890abcdef1234567890abcdef12345678
        policy: pol_7e07ae30-2a4d-48fa-803f-361da94905dd
      properties:
        newOwnerAddress:
          description: The address of the new owner
          example: 0x1234567890abcdef1234567890abcdef12345678
          type: string
        policy:
          description: The policy ID (starts with pol_)
          example: pol_7e07ae30-2a4d-48fa-803f-361da94905dd
          type: string
      required:
      - newOwnerAddress
      - policy
      type: object
    CancelTransferOwnershipRequest:
      additionalProperties: false
      example:
        policy: pol_7e07ae30-2a4d-48fa-803f-361da94905dd
      properties:
        policy:
          description: The policy ID (starts with pol_)
          example: pol_7e07ae30-2a4d-48fa-803f-361da94905dd
          type: string
      required:
      - policy
      type: object
    EntityType.SIGNATURE:
      enum:
      - signature
      type: string
    SignPayloadResponse:
      additionalProperties: false
      example:
        address: address
        signature: signature
        account: account
        hash: hash
        object: null
      properties:
        object:
          $ref: '#/components/schemas/EntityType.SIGNATURE'
        account:
          type: string
        address:
          type: string
        hash:
          type: string
        signature:
          type: string
      required:
      - account
      - address
      - hash
      - object
      - signature
      type: object
    DomainData:
      additionalProperties: false
      example:
        chainId: 80001
        name: name
        version: version
        verifyingContract: verifyingContract
      properties:
        chainId:
          description: The chain ID.
          example: 80001
          format: int32
          type: integer
        name:
          type: string
        version:
          type: string
        verifyingContract:
          type: string
      required:
      - chainId
      type: object
    TypedDataField:
      additionalProperties: false
      example:
        name: name
        type: type
      properties:
        name:
          type: string
        type:
          type: string
      required:
      - name
      - type
      type: object
    SignPayloadRequest:
      additionalProperties: false
      example:
        types:
          key:
          - name: name
            type: type
          - name: name
            type: type
        primaryType: OrderComponents
        domain:
          chainId: 80001
          name: name
          version: version
          verifyingContract: verifyingContract
        value:
          key: ""
        hash: 0xa8ef67af8361fc7f8cf9ba962074418e8cd9233a78237e1c83b1305405d92858
      properties:
        domain:
          $ref: '#/components/schemas/DomainData'
        types:
          additionalProperties:
            items:
              $ref: '#/components/schemas/TypedDataField'
            type: array
          properties: {}
          type: object
        primaryType:
          example: OrderComponents
          type: string
        value:
          additionalProperties: {}
          properties: {}
          type: object
        hash:
          description: Hash to verify and that will be signed
          example: 0xa8ef67af8361fc7f8cf9ba962074418e8cd9233a78237e1c83b1305405d92858
          type: string
      required:
      - domain
      - hash
      - primaryType
      - types
      - value
      type: object
    DeployRequest:
      additionalProperties: false
      example:
        policy: pol_7e07ae30-2a4d-48fa-803f-361da94905dd
      properties:
        policy:
          description: The policy ID (starts with pol_)
          example: pol_7e07ae30-2a4d-48fa-803f-361da94905dd
          type: string
      required:
      - policy
      type: object
    StartRecoveryRequest:
      additionalProperties: false
      example:
        newOwnerAddress: 0x662D24Bf7Ea2dD6a7D0935F680a6056b94fE934d
        policy: pol_7e07ae30-2a4d-48fa-803f-361da94905dd
      properties:
        newOwnerAddress:
          description: Address of the new owner
          example: 0x662D24Bf7Ea2dD6a7D0935F680a6056b94fE934d
          type: string
        policy:
          description: The policy ID (starts with pol_)
          example: pol_7e07ae30-2a4d-48fa-803f-361da94905dd
          type: string
      required:
      - newOwnerAddress
      - policy
      type: object
    CompleteRecoveryRequest:
      additionalProperties: false
      example:
        newOwnerAddress: 0x662D24Bf7Ea2dD6a7D0935F680a6056b94fE934d
        signatures:
        - 0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef
        - 0x1223567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef
        policy: pol_7e07ae30-2a4d-48fa-803f-361da94905dd
      properties:
        newOwnerAddress:
          description: Address of the new owner
          example: 0x662D24Bf7Ea2dD6a7D0935F680a6056b94fE934d
          type: string
        signatures:
          description: Signatures by the guardians
          example:
          - 0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef
          - 0x1223567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef
          items:
            type: string
          type: array
        policy:
          description: The policy ID (starts with pol_)
          example: pol_7e07ae30-2a4d-48fa-803f-361da94905dd
          type: string
      required:
      - newOwnerAddress
      - policy
      type: object
    ApiAuthorizedNetworkResponse:
      additionalProperties: false
      properties:
        id:
          format: int32
          type: integer
        createdAt:
          format: int32
          type: integer
        name:
          maxLength: 256
          minLength: 1
          type: string
        network:
          maxLength: 45
          minLength: 1
          type: string
      required:
      - createdAt
      - id
      - name
      - network
      type: object
    ApiAuthorizedNetworkListResponse:
      additionalProperties: false
      properties:
        object:
          $ref: '#/components/schemas/ResponseType.LIST'
        url:
          type: string
        data:
          items:
            $ref: '#/components/schemas/ApiAuthorizedNetworkResponse'
          type: array
        start:
          format: int32
          type: integer
        end:
          format: int32
          type: integer
        total:
          format: int32
          type: integer
      required:
      - data
      - end
      - object
      - start
      - total
      - url
      type: object
    CreateApiAuthorizedNetworkRequest:
      additionalProperties: false
      properties:
        name:
          description: The name of the authorized network.
          example: My Authorized Network
          maxLength: 256
          minLength: 1
          type: string
        network:
          description: The network address.
          maxLength: 45
          minLength: 1
          type: string
      required:
      - name
      - network
      type: object
    ApiKeyResponse:
      additionalProperties: false
      properties:
        id:
          format: int32
          type: integer
        createdAt:
          format: int32
          type: integer
        token:
          type: string
        name:
          type: string
        livemode:
          type: boolean
      required:
      - createdAt
      - id
      - livemode
      - name
      - token
      type: object
    WebhookResponse:
      additionalProperties: false
      properties:
        webhook:
          nullable: true
          type: string
        livemode:
          type: boolean
      required:
      - livemode
      - webhook
      type: object
    EntityType.PROJECT:
      enum:
      - project
      type: string
    ProjectResponse:
      additionalProperties: false
      properties:
        id:
          type: string
        object:
          $ref: '#/components/schemas/EntityType.PROJECT'
        createdAt:
          format: int32
          type: integer
        updatedAt:
          format: int32
          type: integer
        name:
          type: string
        apikeys:
          items:
            $ref: '#/components/schemas/ApiKeyResponse'
          type: array
        webhook:
          items:
            $ref: '#/components/schemas/WebhookResponse'
          type: array
      required:
      - createdAt
      - id
      - name
      - object
      - updatedAt
      type: object
    ApiKeyType:
      enum:
      - pk
      - sk
      type: string
    CreateProjectApiKeyRequest:
      additionalProperties: false
      properties:
        type:
          $ref: '#/components/schemas/ApiKeyType'
      required:
      - type
      type: object
    UpdateProjectApiKeyRequest:
      additionalProperties: false
      properties:
        type:
          $ref: '#/components/schemas/ApiKeyType'
        uuid:
          description: The API key to update.
          example: 1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef
          type: string
      required:
      - type
      - uuid
      type: object
    ProjectListResponse:
      additionalProperties: false
      properties:
        object:
          $ref: '#/components/schemas/ResponseType.LIST'
        url:
          type: string
        data:
          items:
            $ref: '#/components/schemas/ProjectResponse'
          type: array
        start:
          format: int32
          type: integer
        end:
          format: int32
          type: integer
        total:
          format: int32
          type: integer
      required:
      - data
      - end
      - object
      - start
      - total
      - url
      type: object
    Stat:
      additionalProperties: false
      properties:
        timestamp:
          type: string
        total:
          format: int32
          type: integer
        successful:
          format: int32
          type: integer
        gasUsed:
          type: string
      required:
      - gasUsed
      - successful
      - timestamp
      - total
      type: object
    ProjectStatsResponse:
      additionalProperties: false
      properties:
        transactionIntents:
          items:
            $ref: '#/components/schemas/Stat'
          type: array
      required:
      - transactionIntents
      type: object
    ProjectStatsRequest:
      additionalProperties: false
      properties:
        timeFrame:
          enum:
          - day
          - week
          - month
          - all
          type: string
      required:
      - timeFrame
      type: object
    PrivateKeyPolicy:
      enum:
      - INDIVIDUAL
      - PROJECT
      type: string
    CreateProjectRequest:
      additionalProperties: false
      properties:
        name:
          description: Name of the project.
          example: My Project
          maxLength: 256
          minLength: 1
          type: string
        pkPolicy:
          $ref: '#/components/schemas/PrivateKeyPolicy'
      required:
      - name
      type: object
    UpdateProjectRequest:
      additionalProperties: false
      properties:
        name:
          description: Name of the project.
          example: My Project
          maxLength: 256
          minLength: 1
          type: string
      required:
      - name
      type: object
    ProjectWebhookRequest:
      additionalProperties: false
      properties:
        url:
          description: The webhook url.
          example: https://example.com
          maxLength: 255
          minLength: 1
          type: string
        apiKey:
          type: string
      type: object
    UserProjectRole:
      enum:
      - OWNER
      - ADMIN
      - MEMBER
      type: string
    EntityType.USER:
      enum:
      - user
      type: string
    UserProjectResponse:
      additionalProperties: false
      properties:
        id:
          type: string
        object:
          $ref: '#/components/schemas/EntityType.USER'
        createdAt:
          format: int32
          type: integer
        updatedAt:
          format: int32
          type: integer
        firstName:
          type: string
        lastName:
          type: string
        role:
          $ref: '#/components/schemas/UserProjectRole'
        email:
          type: string
      required:
      - createdAt
      - email
      - firstName
      - id
      - lastName
      - object
      - role
      - updatedAt
      type: object
    UserProjectListResponse:
      additionalProperties: false
      properties:
        object:
          $ref: '#/components/schemas/ResponseType.LIST'
        url:
          type: string
        data:
          items:
            $ref: '#/components/schemas/UserProjectResponse'
          type: array
        start:
          format: int32
          type: integer
        end:
          format: int32
          type: integer
        total:
          format: int32
          type: integer
      required:
      - data
      - end
      - object
      - start
      - total
      - url
      type: object
    UserProjectRole.MEMBER:
      enum:
      - MEMBER
      type: string
    UserProjectRole.ADMIN:
      enum:
      - ADMIN
      type: string
    UserProjectCreateRequest:
      additionalProperties: false
      properties:
        role:
          $ref: '#/components/schemas/UserProjectCreateRequest_role'
        email:
          description: The email of the user to add.
          example: name@company.com
          type: string
      required:
      - email
      type: object
    UserProjectUpdateRequest:
      additionalProperties: false
      properties:
        role:
          $ref: '#/components/schemas/UserProjectCreateRequest_role'
      required:
      - role
      type: object
    UserProjectDeleteResponse:
      additionalProperties: false
      properties:
        id:
          type: string
        object:
          $ref: '#/components/schemas/EntityType.USER'
        deleted:
          type: boolean
      required:
      - deleted
      - id
      - object
      type: object
    AbiType:
      additionalProperties: false
      example:
        components:
        - null
        - null
        indexed: true
        name: name
        internalType: ""
        type: type
      properties:
        name:
          type: string
        type:
          type: string
        indexed:
          type: boolean
        internalType: {}
        components:
          items:
            $ref: '#/components/schemas/AbiType'
          type: array
      type: object
    Abi:
      additionalProperties: false
      example:
        outputs:
        - components:
          - null
          - null
          indexed: true
          name: name
          internalType: ""
          type: type
        - components:
          - null
          - null
          indexed: true
          name: name
          internalType: ""
          type: type
        constant: true
        payable: true
        inputs:
        - components:
          - null
          - null
          indexed: true
          name: name
          internalType: ""
          type: type
        - components:
          - null
          - null
          indexed: true
          name: name
          internalType: ""
          type: type
        name: name
        gas: gas
        anonymous: true
        stateMutability: stateMutability
        type: type
      properties:
        name:
          type: string
        type:
          type: string
        anonymous:
          type: boolean
        payable:
          type: boolean
        constant:
          type: boolean
        stateMutability:
          type: string
        gas:
          type: string
        inputs:
          items:
            $ref: '#/components/schemas/AbiType'
          type: array
        outputs:
          items:
            $ref: '#/components/schemas/AbiType'
          type: array
      type: object
    EntityType.CONTRACT:
      enum:
      - contract
      type: string
    ContractResponse:
      additionalProperties: false
      example:
        createdAt: 0
        address: address
        deleted: true
        chainId: 6
        publicVerification: true
        name: name
        abi:
        - outputs:
          - components:
            - null
            - null
            indexed: true
            name: name
            internalType: ""
            type: type
          - components:
            - null
            - null
            indexed: true
            name: name
            internalType: ""
            type: type
          constant: true
          payable: true
          inputs:
          - components:
            - null
            - null
            indexed: true
            name: name
            internalType: ""
            type: type
          - components:
            - null
            - null
            indexed: true
            name: name
            internalType: ""
            type: type
          name: name
          gas: gas
          anonymous: true
          stateMutability: stateMutability
          type: type
        - outputs:
          - components:
            - null
            - null
            indexed: true
            name: name
            internalType: ""
            type: type
          - components:
            - null
            - null
            indexed: true
            name: name
            internalType: ""
            type: type
          constant: true
          payable: true
          inputs:
          - components:
            - null
            - null
            indexed: true
            name: name
            internalType: ""
            type: type
          - components:
            - null
            - null
            indexed: true
            name: name
            internalType: ""
            type: type
          name: name
          gas: gas
          anonymous: true
          stateMutability: stateMutability
          type: type
        id: id
        object: null
      properties:
        id:
          type: string
        object:
          $ref: '#/components/schemas/EntityType.CONTRACT'
        createdAt:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        chainId:
          description: The chain ID.
          format: int32
          type: integer
        address:
          type: string
        deleted:
          type: boolean
        abi:
          items:
            $ref: '#/components/schemas/Abi'
          type: array
        publicVerification:
          type: boolean
      required:
      - abi
      - address
      - chainId
      - createdAt
      - deleted
      - id
      - name
      - object
      - publicVerification
      type: object
    ContractListResponse:
      additionalProperties: false
      example:
        total: 5
        data:
        - createdAt: 0
          address: address
          deleted: true
          chainId: 6
          publicVerification: true
          name: name
          abi:
          - outputs:
            - components:
              - null
              - null
              indexed: true
              name: name
              internalType: ""
              type: type
            - components:
              - null
              - null
              indexed: true
              name: name
              internalType: ""
              type: type
            constant: true
            payable: true
            inputs:
            - components:
              - null
              - null
              indexed: true
              name: name
              internalType: ""
              type: type
            - components:
              - null
              - null
              indexed: true
              name: name
              internalType: ""
              type: type
            name: name
            gas: gas
            anonymous: true
            stateMutability: stateMutability
            type: type
          - outputs:
            - components:
              - null
              - null
              indexed: true
              name: name
              internalType: ""
              type: type
            - components:
              - null
              - null
              indexed: true
              name: name
              internalType: ""
              type: type
            constant: true
            payable: true
            inputs:
            - components:
              - null
              - null
              indexed: true
              name: name
              internalType: ""
              type: type
            - components:
              - null
              - null
              indexed: true
              name: name
              internalType: ""
              type: type
            name: name
            gas: gas
            anonymous: true
            stateMutability: stateMutability
            type: type
          id: id
          object: null
        - createdAt: 0
          address: address
          deleted: true
          chainId: 6
          publicVerification: true
          name: name
          abi:
          - outputs:
            - components:
              - null
              - null
              indexed: true
              name: name
              internalType: ""
              type: type
            - components:
              - null
              - null
              indexed: true
              name: name
              internalType: ""
              type: type
            constant: true
            payable: true
            inputs:
            - components:
              - null
              - null
              indexed: true
              name: name
              internalType: ""
              type: type
            - components:
              - null
              - null
              indexed: true
              name: name
              internalType: ""
              type: type
            name: name
            gas: gas
            anonymous: true
            stateMutability: stateMutability
            type: type
          - outputs:
            - components:
              - null
              - null
              indexed: true
              name: name
              internalType: ""
              type: type
            - components:
              - null
              - null
              indexed: true
              name: name
              internalType: ""
              type: type
            constant: true
            payable: true
            inputs:
            - components:
              - null
              - null
              indexed: true
              name: name
              internalType: ""
              type: type
            - components:
              - null
              - null
              indexed: true
              name: name
              internalType: ""
              type: type
            name: name
            gas: gas
            anonymous: true
            stateMutability: stateMutability
            type: type
          id: id
          object: null
        start: 1
        end: 5
        url: url
        object: null
      properties:
        object:
          $ref: '#/components/schemas/ResponseType.LIST'
        url:
          type: string
        data:
          items:
            $ref: '#/components/schemas/ContractResponse'
          type: array
        start:
          format: int32
          type: integer
        end:
          format: int32
          type: integer
        total:
          format: int32
          type: integer
      required:
      - data
      - end
      - object
      - start
      - total
      - url
      type: object
    ContractListQueries:
      additionalProperties: false
      properties:
        limit:
          description: Specifies the maximum number of records to return.
          format: int32
          minimum: 1
          type: integer
        skip:
          description: Specifies the offset for the first records to return.
          format: int32
          minimum: 0
          type: integer
        order:
          $ref: '#/components/schemas/SortOrder'
        name:
          description: Specifies the name of the contract.
          example: NFT Contract
          type: string
        deleted:
          description: Specifies whether to include deleted contracts.
          example: false
          type: boolean
        chainId:
          description: The chain ID of the contract.
          example: 80001
          format: int32
          type: integer
        address:
          description: Specifies the address of the contract.
          example: 0x742e6e61d760164d56f44801054bcf40fa821d97
          type: string
      type: object
    CreateContractRequest:
      additionalProperties: false
      example:
        address: 0x742e6e61d760164d56f44801054bcf40fa821d97
        chainId: 80001
        publicVerification: false
        name: NFT Contract
        abi:
        - inputs:
          - internalType: address
            name: _owner
            type: address
          stateMutability: nonpayable
          type: constructor
        - inputs: []
          name: owner
          outputs:
          - internalType: address
            name: ""
            type: address
          stateMutability: view
          type: function
      properties:
        name:
          description: Specifies the name of the contract (Only for display purposes).
          example: NFT Contract
          type: string
        chainId:
          description: Specifies the chain ID of the contract.
          example: 80001
          format: int32
          type: integer
        address:
          description: Specifies the address of the contract.
          example: 0x742e6e61d760164d56f44801054bcf40fa821d97
          type: string
        abi:
          description: Specifies the ABI of the contract.
          example:
          - inputs:
            - internalType: address
              name: _owner
              type: address
            stateMutability: nonpayable
            type: constructor
          - inputs: []
            name: owner
            outputs:
            - internalType: address
              name: ""
              type: address
            stateMutability: view
            type: function
          items:
            $ref: '#/components/schemas/Abi'
          type: array
        publicVerification:
          description: Specifies whether to verify the contract publicly.
          example: false
          type: boolean
      required:
      - address
      - chainId
      - name
      type: object
    UpdateContractRequest:
      additionalProperties: false
      example:
        deleted: false
        address: 0x1234567890abcdef1234567890abcdef12345678
        chainId: 80001
        publicVerification: false
        name: NFT Contract
        abi:
        - inputs:
          - internalType: address
            name: _owner
            type: address
          stateMutability: nonpayable
          type: constructor
        - inputs: []
          name: owner
          outputs:
          - internalType: address
            name: ""
            type: address
          stateMutability: view
          type: function
      properties:
        name:
          description: Specifies the name of the contract (Only for display purposes).
          example: NFT Contract
          type: string
        chainId:
          description: Specifies the chain ID of the contract.
          example: 80001
          format: int32
          type: integer
        deleted:
          description: Specifies whether to delete the contract.
          example: false
          type: boolean
        address:
          description: Specifies the address of the contract.
          example: 0x1234567890abcdef1234567890abcdef12345678
          type: string
        abi:
          description: Specifies the ABI of the contract.
          example:
          - inputs:
            - internalType: address
              name: _owner
              type: address
            stateMutability: nonpayable
            type: constructor
          - inputs: []
            name: owner
            outputs:
            - internalType: address
              name: ""
              type: address
            stateMutability: view
            type: function
          items:
            $ref: '#/components/schemas/Abi'
          type: array
        publicVerification:
          description: Specifies whether to verify the contract publicly.
          example: false
          type: boolean
      type: object
    EntityType.READCONTRACT:
      enum:
      - readContract
      type: string
    ContractReadResponse:
      additionalProperties: false
      example:
        result: ""
        createdAt: 0
        functionName: functionName
        id: id
        object: null
      properties:
        id:
          type: string
        object:
          $ref: '#/components/schemas/EntityType.READCONTRACT'
        createdAt:
          format: int32
          type: integer
        functionName:
          type: string
        result: {}
      required:
      - createdAt
      - functionName
      - id
      - object
      - result
      type: object
    ContractReadQueries:
      additionalProperties: false
      properties:
        functionName:
          description: The function name of the contract.
          example: mint
          type: string
        functionArgs:
          description: "The function arguments of the contract, in string format.\
            \ Accepts pla_, con_ and acc_ IDs."
          example:
          - 0x662D24Bf7Ea2dD6a7D0935F680a6056b94fE934d
          items: {}
          type: array
      required:
      - functionName
      type: object
    ContractDeleteResponse:
      additionalProperties: false
      example:
        deleted: true
        id: id
        object: null
      properties:
        id:
          type: string
        object:
          $ref: '#/components/schemas/EntityType.CONTRACT'
        deleted:
          type: boolean
      required:
      - deleted
      - id
      - object
      type: object
    EntityType.INVENTORY:
      enum:
      - inventory
      type: string
    ObsoleteAssetType:
      deprecated: true
      enum:
      - 1
      - 2
      - 3
      - 4
      type: number
    ObsoleteAssetInventory:
      additionalProperties: false
      deprecated: true
      example:
        amount: amount
        address: address
        tokenId: 0.8008281904610115
        lastTransferredAt: 6
        assetType: null
      properties:
        assetType:
          $ref: '#/components/schemas/ObsoleteAssetType'
        address:
          type: string
        tokenId:
          format: double
          type: number
        amount:
          description: amount in Wei
          type: string
        lastTransferredAt:
          format: int32
          type: integer
      required:
      - assetType
      type: object
    ObsoleteInventoryResponse:
      additionalProperties: false
      deprecated: true
      example:
        nativeAsset:
          amount: amount
          address: address
          tokenId: 0.8008281904610115
          lastTransferredAt: 6
          assetType: null
        tokenAssets:
        - amount: amount
          address: address
          tokenId: 0.8008281904610115
          lastTransferredAt: 6
          assetType: null
        - amount: amount
          address: address
          tokenId: 0.8008281904610115
          lastTransferredAt: 6
          assetType: null
        nftAssets:
        - amount: amount
          address: address
          tokenId: 0.8008281904610115
          lastTransferredAt: 6
          assetType: null
        - amount: amount
          address: address
          tokenId: 0.8008281904610115
          lastTransferredAt: 6
          assetType: null
        object: null
      properties:
        object:
          $ref: '#/components/schemas/EntityType.INVENTORY'
        nftAssets:
          items:
            $ref: '#/components/schemas/ObsoleteAssetInventory'
          type: array
        nativeAsset:
          $ref: '#/components/schemas/ObsoleteAssetInventory'
        tokenAssets:
          items:
            $ref: '#/components/schemas/ObsoleteAssetInventory'
          type: array
      required:
      - object
      type: object
    PlayerInventoryQueries:
      additionalProperties: false
      properties:
        chainId:
          description: Filter by chain id.
          example: 80001
          format: int32
          type: integer
      required:
      - chainId
      type: object
    AssetType:
      enum:
      - ETH
      - ERC20
      - ERC721
      - ERC1155
      type: string
    AssetInventory:
      additionalProperties: false
      example:
        amount: amount
        address: address
        tokenId: 0
        lastTransferredAt: 6
        assetType: null
      properties:
        assetType:
          $ref: '#/components/schemas/AssetType'
        address:
          type: string
        tokenId:
          format: int64
          type: integer
        amount:
          description: amount in Wei
          type: string
        lastTransferredAt:
          format: int32
          type: integer
      required:
      - assetType
      type: object
    InventoryListResponse:
      additionalProperties: false
      example:
        total: 5
        data:
        - amount: amount
          address: address
          tokenId: 0
          lastTransferredAt: 6
          assetType: null
        - amount: amount
          address: address
          tokenId: 0
          lastTransferredAt: 6
          assetType: null
        start: 1
        end: 5
        url: url
        object: null
      properties:
        object:
          $ref: '#/components/schemas/ResponseType.LIST'
        url:
          type: string
        data:
          items:
            $ref: '#/components/schemas/AssetInventory'
          type: array
        start:
          format: int32
          type: integer
        end:
          format: int32
          type: integer
        total:
          format: int32
          type: integer
      required:
      - data
      - end
      - object
      - start
      - total
      - url
      type: object
    PlayerInventoryListQueries:
      additionalProperties: false
      properties:
        limit:
          description: Specifies the maximum number of records to return.
          format: int32
          minimum: 1
          type: integer
        skip:
          description: Specifies the offset for the first records to return.
          format: int32
          minimum: 0
          type: integer
        order:
          $ref: '#/components/schemas/SortOrder'
        contractId:
          description: Filter by contract ID (starts with con_).
          example: 0x1234567890abcdef1234567890abcdef12345678
          items:
            type: string
          type: array
        chainId:
          description: Filter by chain id.
          example: 80001
          format: int32
          type: integer
      required:
      - chainId
      type: object
    InventoryResponse:
      additionalProperties: false
      example:
        data:
          amount: amount
          address: address
          tokenId: 0
          lastTransferredAt: 6
          assetType: null
        url: url
        object: null
      properties:
        object:
          $ref: '#/components/schemas/EntityType.INVENTORY'
        url:
          type: string
        data:
          $ref: '#/components/schemas/AssetInventory'
      required:
      - data
      - object
      - url
      type: object
    AccountInventoryListQueries:
      additionalProperties: false
      properties:
        limit:
          description: Specifies the maximum number of records to return.
          format: int32
          minimum: 1
          type: integer
        skip:
          description: Specifies the offset for the first records to return.
          format: int32
          minimum: 0
          type: integer
        order:
          $ref: '#/components/schemas/SortOrder'
        contractId:
          items:
            type: string
          type: array
      type: object
    ProjectLogs:
      additionalProperties: false
      properties:
        object:
          $ref: '#/components/schemas/ResponseType.LIST'
        url:
          type: string
        data:
          items:
            $ref: '#/components/schemas/Log'
          type: array
        start:
          format: int32
          type: integer
        end:
          format: int32
          type: integer
        total:
          format: int32
          type: integer
      required:
      - data
      - end
      - object
      - start
      - total
      - url
      type: object
    PlayerListResponse:
      additionalProperties: false
      example:
        total: 1
        data:
        - createdAt: 0
          metadata:
            key: null
          name: name
          description: description
          id: id
          transactionIntents:
          - null
          - null
          accounts:
          - null
          - null
          object: null
        - createdAt: 0
          metadata:
            key: null
          name: name
          description: description
          id: id
          transactionIntents:
          - null
          - null
          accounts:
          - null
          - null
          object: null
        start: 0
        end: 6
        url: url
        object: null
      properties:
        object:
          $ref: '#/components/schemas/ResponseType.LIST'
        url:
          type: string
        data:
          items:
            $ref: '#/components/schemas/PlayerResponse'
          type: array
        start:
          format: int32
          type: integer
        end:
          format: int32
          type: integer
        total:
          format: int32
          type: integer
      required:
      - data
      - end
      - object
      - start
      - total
      - url
      type: object
    PlayerResponseExpandable:
      enum:
      - transactionIntents
      - accounts
      nullable: false
      type: string
    PlayerListQueries:
      additionalProperties: false
      properties:
        limit:
          description: Specifies the maximum number of records to return.
          format: int32
          minimum: 1
          type: integer
        skip:
          description: Specifies the offset for the first records to return.
          format: int32
          minimum: 0
          type: integer
        order:
          $ref: '#/components/schemas/SortOrder'
        expand:
          description: Specifies the fields to expand in the response.
          items:
            $ref: '#/components/schemas/PlayerResponseExpandable'
          type: array
        name:
          description: Filter by player name.
          example: John
          type: string
      type: object
    PlayerCreateRequest:
      additionalProperties: false
      example:
        metadata:
          key: null
        name: John
        description: a useful description
      properties:
        name:
          description: Specifies the player name.
          example: John
          maxLength: 256
          minLength: 1
          type: string
        description:
          description: Specifies the player description.
          example: a useful description
          type: string
        metadata:
          additionalProperties:
            $ref: '#/components/schemas/PlayerMetadata_value'
          properties: {}
          type: object
      required:
      - name
      type: object
    PlayerUpdateRequest:
      additionalProperties: false
      example:
        metadata:
          key: null
        name: John
        description: a useful description
      properties:
        name:
          description: Specifies the player name.
          example: John
          maxLength: 256
          minLength: 1
          type: string
        description:
          description: Specifies the player description.
          example: a useful description
          type: string
        metadata:
          additionalProperties:
            $ref: '#/components/schemas/PlayerMetadata_value'
          properties: {}
          type: object
      type: object
    PlayerDeleteResponse:
      additionalProperties: false
      example:
        deleted: true
        id: id
        object: null
      properties:
        id:
          type: string
        object:
          $ref: '#/components/schemas/EntityType.PLAYER'
        deleted:
          type: boolean
      required:
      - deleted
      - id
      - object
      type: object
    PlayerTransferOwnershipRequest:
      additionalProperties: false
      example:
        newOwnerAddress: 0x1234567890abcdef1234567890abcdef12345678
        chainId: 80001
        policy: pol_7e07ae30-2a4d-48fa-803f-361da94905dd
        player: pla_e0b84653-1741-4a3d-9e91-2b0fd2942f60
      properties:
        policy:
          description: The policy ID (starts with pol_)
          example: pol_7e07ae30-2a4d-48fa-803f-361da94905dd
          type: string
        chainId:
          description: The chain id where the account is.
          example: 80001
          format: int32
          type: integer
        newOwnerAddress:
          description: The address of the new owner
          example: 0x1234567890abcdef1234567890abcdef12345678
          type: string
        player:
          description: The player ID (starts with pla_)
          example: pla_e0b84653-1741-4a3d-9e91-2b0fd2942f60
          type: string
      required:
      - chainId
      - newOwnerAddress
      - policy
      type: object
    PlayerCancelTransferOwnershipRequest:
      additionalProperties: false
      example:
        chainId: 80001
        policy: pol_7e07ae30-2a4d-48fa-803f-361da94905dd
      properties:
        policy:
          description: The policy ID (starts with pol_)
          example: pol_7e07ae30-2a4d-48fa-803f-361da94905dd
          type: string
        chainId:
          description: The chain id where the account is.
          example: 80001
          format: int32
          type: integer
      required:
      - chainId
      - policy
      type: object
    EntityType.SESSION:
      enum:
      - session
      type: string
    SessionResponse:
      additionalProperties: false
      example:
        createdAt: 0
        address: address
        limit: 1
        validUntil: validUntil
        id: id
        whitelist:
        - whitelist
        - whitelist
        nextAction:
          payload:
            userOp: ""
            userOpHash: userOpHash
          type: null
        transactionIntents:
        - null
        - null
        isActive: true
        validAfter: validAfter
        object: null
        updatedAt: 6
      properties:
        id:
          type: string
        object:
          $ref: '#/components/schemas/EntityType.SESSION'
        createdAt:
          format: int32
          type: integer
        updatedAt:
          format: int32
          type: integer
        isActive:
          type: boolean
        address:
          type: string
        validAfter:
          type: string
        validUntil:
          type: string
        whitelist:
          items:
            type: string
          type: array
        limit:
          format: int32
          type: integer
        nextAction:
          $ref: '#/components/schemas/NextActionResponse'
        transactionIntents:
          items:
            $ref: '#/components/schemas/PlayerResponse_transactionIntents_inner'
          type: array
      required:
      - address
      - createdAt
      - id
      - object
      - updatedAt
      type: object
    CreatePlayerSessionRequest:
      additionalProperties: false
      example:
        optimistic: true
        address: 0x1234567890abcdef1234567890abcdef12345678
        externalOwnerAddress: 0x1234567890abcdef1234567890abcdef12345678
        chainId: 80001
        limit: 1000
        validUntil: 12351235123
        whitelist:
        - 0x1234567890abcdef1234567890abcdef12345678
        validAfter: 10
        policy: pol_7e07ae30-2a4d-48fa-803f-361da94905dd
      properties:
        address:
          description: The address of the session key.
          example: 0x1234567890abcdef1234567890abcdef12345678
          type: string
        chainId:
          description: The chain ID.
          example: 80001
          format: int32
          type: integer
        externalOwnerAddress:
          description: "If no account exists for a given player, create one with this\
            \ address."
          example: 0x1234567890abcdef1234567890abcdef12345678
          type: string
        limit:
          description: Maximum number of times the session key can be used.
          example: 1000
          format: int32
          minimum: 1
          type: integer
        optimistic:
          description: Whether the transactionIntent is optimistic (resolve before
            it arrives on chain) or not.
          example: true
          type: boolean
        policy:
          description: The policy ID (starts with pol_).
          example: pol_7e07ae30-2a4d-48fa-803f-361da94905dd
          type: string
        validAfter:
          description: The unix timestamp in seconds when the session key becomes
            valid.
          example: 10
          format: int32
          type: integer
        validUntil:
          description: The unix timestamp in seconds when the session key expires.
          example: 12351235123
          format: int32
          type: integer
        whitelist:
          description: The list of whitelisted addresses (contracts the session key
            can interact with).
          example:
          - 0x1234567890abcdef1234567890abcdef12345678
          items:
            type: string
          type: array
      required:
      - address
      - chainId
      - validAfter
      - validUntil
      type: object
    RevokeSessionPlayerRequest:
      additionalProperties: false
      example:
        optimistic: true
        address: 0x1234567890abcdef1234567890abcdef12345678
        chainId: 80001
        policy: pol_7e07ae30-2a4d-48fa-803f-361da94905dd
      properties:
        address:
          description: The address of the session key to revoke.
          example: 0x1234567890abcdef1234567890abcdef12345678
          type: string
        policy:
          description: The policy ID (starts with pol_)
          example: pol_7e07ae30-2a4d-48fa-803f-361da94905dd
          type: string
        optimistic:
          description: Whether the transactionIntent is optimistic (resolve before
            it arrives on chain) or not.
          example: true
          type: boolean
        chainId:
          description: The chain ID.
          example: 80001
          format: int32
          type: integer
      required:
      - address
      - chainId
      type: object
    CreatePlayerAccountRequest:
      additionalProperties: false
      example:
        externalOwnerAddress: 0x662D24Bf7Ea2dD6a7D0935F680a6056b94fE934d
        tokenId: 1
        chainId: 80001
        tokenContract: 0x662D24Bf7Ea2dD6a7D0135F680a6056b94fE934d
        accountType: UpgradeableV5
      properties:
        chainId:
          description: The chain id
          example: 80001
          format: int32
          type: integer
        externalOwnerAddress:
          description: The address of the external owner
          example: 0x662D24Bf7Ea2dD6a7D0935F680a6056b94fE934d
          type: string
        accountType:
          description: "The type of smart account that will be created (e.g. ERC6551V1,\
            \ ManagedV5, UpgradeableV5). Defaults to UpgradeableV5."
          example: UpgradeableV5
          type: string
        tokenContract:
          description: "If ERC6551, the NFT contract to use"
          example: 0x662D24Bf7Ea2dD6a7D0135F680a6056b94fE934d
          type: string
        tokenId:
          description: "If ERC6551, the tokenID to serve as owner"
          example: 1
          format: int64
          type: integer
      required:
      - chainId
      type: object
    PolicyRuleType.CONTRACT:
      enum:
      - contract_functions
      type: string
    PolicyRuleType:
      enum:
      - contract_functions
      - account_functions
      - rate_limit
      type: string
    EntityType.POLICY_RULE:
      enum:
      - policyRule
      type: string
    Pick_ContractResponse.id_:
      description: "From T, pick a set of properties whose keys are in the union K"
      properties:
        id:
          type: string
      required:
      - id
      type: object
    ContractPolicyRuleResponse:
      additionalProperties: false
      properties:
        id:
          type: string
        object:
          $ref: '#/components/schemas/EntityType.POLICY_RULE'
        createdAt:
          format: int32
          type: integer
        type:
          $ref: '#/components/schemas/PolicyRuleType.CONTRACT'
        contract:
          $ref: '#/components/schemas/ContractPolicyRuleResponse_contract'
        functionName:
          type: string
      required:
      - contract
      - createdAt
      - functionName
      - id
      - object
      - type
      type: object
    PolicyRuleType.ACCOUNT:
      enum:
      - account_functions
      type: string
    AccountPolicyRuleResponse:
      additionalProperties: false
      properties:
        id:
          type: string
        object:
          $ref: '#/components/schemas/EntityType.POLICY_RULE'
        createdAt:
          format: int32
          type: integer
        type:
          $ref: '#/components/schemas/PolicyRuleType.ACCOUNT'
      required:
      - createdAt
      - id
      - object
      - type
      type: object
    PolicyRateLimit.GAS_PER_TRANSACTION:
      enum:
      - gas_per_transaction
      type: string
    PolicyRuleType.RATE_LIMIT:
      enum:
      - rate_limit
      type: string
    PolicyRateLimit:
      enum:
      - gas_per_transaction
      - gas_per_interval
      - count_per_interval
      type: string
    GasPerTransactionLimitPolicyRuleResponse:
      additionalProperties: false
      properties:
        id:
          type: string
        object:
          $ref: '#/components/schemas/EntityType.POLICY_RULE'
        createdAt:
          format: int32
          type: integer
        type:
          $ref: '#/components/schemas/PolicyRuleType.RATE_LIMIT'
        functionName:
          $ref: '#/components/schemas/PolicyRateLimit.GAS_PER_TRANSACTION'
        gasLimit:
          type: string
      required:
      - createdAt
      - functionName
      - gasLimit
      - id
      - object
      - type
      type: object
    PolicyRateLimit.GAS_PER_INTERVAL:
      enum:
      - gas_per_interval
      type: string
    TimeIntervalType:
      enum:
      - minute
      - hour
      - day
      - week
      - month
      type: string
    GasPerIntervalLimitPolicyRuleResponse:
      additionalProperties: false
      properties:
        id:
          type: string
        object:
          $ref: '#/components/schemas/EntityType.POLICY_RULE'
        createdAt:
          format: int32
          type: integer
        type:
          $ref: '#/components/schemas/PolicyRuleType.RATE_LIMIT'
        functionName:
          $ref: '#/components/schemas/PolicyRateLimit.GAS_PER_INTERVAL'
        gasLimit:
          type: string
        timeIntervalType:
          $ref: '#/components/schemas/TimeIntervalType'
        timeIntervalValue:
          format: int32
          type: integer
      required:
      - createdAt
      - functionName
      - gasLimit
      - id
      - object
      - timeIntervalType
      - timeIntervalValue
      - type
      type: object
    PolicyRateLimit.COUNT_PER_INTERVAL:
      enum:
      - count_per_interval
      type: string
    CountPerIntervalLimitPolicyRuleResponse:
      additionalProperties: false
      properties:
        id:
          type: string
        object:
          $ref: '#/components/schemas/EntityType.POLICY_RULE'
        createdAt:
          format: int32
          type: integer
        type:
          $ref: '#/components/schemas/PolicyRuleType.RATE_LIMIT'
        functionName:
          $ref: '#/components/schemas/PolicyRateLimit.COUNT_PER_INTERVAL'
        countLimit:
          format: int32
          type: integer
        timeIntervalType:
          $ref: '#/components/schemas/TimeIntervalType'
        timeIntervalValue:
          format: int32
          type: integer
      required:
      - countLimit
      - createdAt
      - functionName
      - id
      - object
      - timeIntervalType
      - timeIntervalValue
      - type
      type: object
    PolicyRuleResponse:
      anyOf:
      - $ref: '#/components/schemas/ContractPolicyRuleResponse'
      - $ref: '#/components/schemas/AccountPolicyRuleResponse'
      - $ref: '#/components/schemas/GasPerTransactionLimitPolicyRuleResponse'
      - $ref: '#/components/schemas/GasPerIntervalLimitPolicyRuleResponse'
      - $ref: '#/components/schemas/CountPerIntervalLimitPolicyRuleResponse'
    PolicyResponse:
      additionalProperties: false
      example:
        createdAt: 0
        deleted: true
        chainId: 6
        name: name
        id: id
        transactionIntents:
        - null
        - null
        policyRules:
        - null
        - null
        strategy: null
        enabled: true
        object: null
      properties:
        id:
          type: string
        object:
          $ref: '#/components/schemas/EntityType.POLICY'
        createdAt:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        deleted:
          type: boolean
        enabled:
          type: boolean
        chainId:
          description: The chain ID.
          format: int32
          type: integer
        strategy:
          $ref: '#/components/schemas/PolicyStrategy'
        transactionIntents:
          items:
            $ref: '#/components/schemas/PlayerResponse_transactionIntents_inner'
          type: array
        policyRules:
          items:
            $ref: '#/components/schemas/PolicyResponse_policyRules_inner'
          type: array
      required:
      - chainId
      - createdAt
      - deleted
      - enabled
      - id
      - name
      - object
      - policyRules
      - strategy
      - transactionIntents
      type: object
    PolicyListResponse:
      additionalProperties: false
      example:
        total: 5
        data:
        - createdAt: 0
          deleted: true
          chainId: 6
          name: name
          id: id
          transactionIntents:
          - null
          - null
          policyRules:
          - null
          - null
          strategy: null
          enabled: true
          object: null
        - createdAt: 0
          deleted: true
          chainId: 6
          name: name
          id: id
          transactionIntents:
          - null
          - null
          policyRules:
          - null
          - null
          strategy: null
          enabled: true
          object: null
        start: 1
        end: 5
        url: url
        object: null
      properties:
        object:
          $ref: '#/components/schemas/ResponseType.LIST'
        url:
          type: string
        data:
          items:
            $ref: '#/components/schemas/PolicyResponse'
          type: array
        start:
          format: int32
          type: integer
        end:
          format: int32
          type: integer
        total:
          format: int32
          type: integer
      required:
      - data
      - end
      - object
      - start
      - total
      - url
      type: object
    PolicyResponseExpandable:
      enum:
      - transactionIntents
      - policyRules
      nullable: false
      type: string
    PolicyListQueries:
      additionalProperties: false
      properties:
        limit:
          description: Specifies the maximum number of records to return.
          format: int32
          minimum: 1
          type: integer
        skip:
          description: Specifies the offset for the first records to return.
          format: int32
          minimum: 0
          type: integer
        order:
          $ref: '#/components/schemas/SortOrder'
        expand:
          description: Specifies the fields to expand in the response.
          items:
            $ref: '#/components/schemas/PolicyResponseExpandable'
          type: array
        name:
          description: Specifies the name of the policy.
          example: MyPolicy
          type: string
        deleted:
          description: Specifies whether to include deleted contracts.
          example: true
          type: boolean
        chainId:
          description: The chain ID of the policy.
          example: 80001
          format: int32
          type: integer
        enabled:
          description: Specifies whether to include enabled contracts.
          example: true
          type: boolean
      type: object
    PolicyStrategyRequest:
      additionalProperties: false
      example:
        tokenContractAmount: "1000000000000000000"
        sponsorSchema: null
        tokenContract: con_0cddb398-1dc6-4e6f-8726-9ec7cea85f35
        depositor: depositor
      properties:
        sponsorSchema:
          $ref: '#/components/schemas/SponsorSchema'
        tokenContract:
          description: "If the user pays in custom tokens, the contract ID (starts\
            \ with con_) of the token contract."
          example: con_0cddb398-1dc6-4e6f-8726-9ec7cea85f35
          type: string
        tokenContractAmount:
          description: "If the user pays in ERC20 tokens, this reflects either the\
            \ exchange rate or the amount in WEI."
          example: "1000000000000000000"
          type: string
        depositor:
          description: "If the you want to use your own native tokens to pay for gas,\
            \ specify the developer account ID (starts with dac_)"
          type: string
      required:
      - sponsorSchema
      type: object
    CreatePolicyRequest:
      additionalProperties: false
      example:
        chainId: 80001
        name: My Policy
        strategy:
          tokenContractAmount: "1000000000000000000"
          sponsorSchema: null
          tokenContract: con_0cddb398-1dc6-4e6f-8726-9ec7cea85f35
          depositor: depositor
      properties:
        name:
          description: Specifies the name of the policy.
          example: My Policy
          type: string
        chainId:
          description: The chain ID of the policy.
          example: 80001
          format: int32
          type: integer
        strategy:
          $ref: '#/components/schemas/PolicyStrategyRequest'
      required:
      - chainId
      - name
      - strategy
      type: object
    UpdatePolicyRequest:
      additionalProperties: false
      example:
        deleted: false
        chainId: 80001
        name: My Policy
        strategy:
          tokenContractAmount: "1000000000000000000"
          sponsorSchema: null
          tokenContract: con_0cddb398-1dc6-4e6f-8726-9ec7cea85f35
          depositor: depositor
      properties:
        name:
          description: Specifies the name of the policy.
          example: My Policy
          type: string
        chainId:
          description: The chain ID of the policy.
          example: 80001
          format: int32
          type: integer
        strategy:
          $ref: '#/components/schemas/PolicyStrategyRequest'
        deleted:
          description: Specifies whether to delete the policy.
          example: false
          type: boolean
      type: object
    PolicyDeleteResponse:
      additionalProperties: false
      example:
        deleted: true
        id: id
        object: null
      properties:
        id:
          type: string
        object:
          $ref: '#/components/schemas/EntityType.POLICY'
        deleted:
          type: boolean
      required:
      - deleted
      - id
      - object
      type: object
    PolicyRuleListResponse:
      additionalProperties: false
      example:
        total: 1
        data:
        - null
        - null
        start: 0
        end: 6
        url: url
        object: null
      properties:
        object:
          $ref: '#/components/schemas/ResponseType.LIST'
        url:
          type: string
        data:
          items:
            $ref: '#/components/schemas/PolicyRuleResponse'
          type: array
        start:
          format: int32
          type: integer
        end:
          format: int32
          type: integer
        total:
          format: int32
          type: integer
      required:
      - data
      - end
      - object
      - start
      - total
      - url
      type: object
    CreatePolicyAllowFunctionRequest:
      additionalProperties: false
      example:
        countLimit: 1
        gasLimit: "1000000000000000000"
        timeIntervalValue: 1
        functionName: All functions
        contract: con_0cddb398-1dc6-4e6f-8726-9ec7cea85f35
        type: null
        timeIntervalType: null
      properties:
        type:
          $ref: '#/components/schemas/PolicyRuleType'
        functionName:
          description: "Name of the function in the contract to allow. If you want\
            \ to allow all functions, use the wildcard 'All functions'."
          example: All functions
          nullable: true
          type: string
        contract:
          description: The contract ID (starts with con_).
          example: con_0cddb398-1dc6-4e6f-8726-9ec7cea85f35
          nullable: true
          type: string
        gasLimit:
          description: Gas limit in WEI.
          example: "1000000000000000000"
          type: string
        countLimit:
          description: Number of times the function will be sponsored.
          example: 1
          format: int32
          type: integer
        timeIntervalType:
          $ref: '#/components/schemas/TimeIntervalType'
        timeIntervalValue:
          description: Time interval value.
          example: 1
          format: int32
          type: integer
      required:
      - type
      type: object
    UpdatePolicyRuleRequest:
      additionalProperties: false
      example:
        countLimit: 1
        gasLimit: "1000000000000000000"
        timeIntervalValue: 1
        functionName: All functions
        contract: con_0cddb398-1dc6-4e6f-8726-9ec7cea85f35
        type: null
        timeIntervalType: null
      properties:
        type:
          $ref: '#/components/schemas/PolicyRuleType'
        functionName:
          description: "Name of the function in the contract to allow. If you want\
            \ to allow all functions, use the wildcard 'All functions'."
          example: All functions
          nullable: true
          type: string
        contract:
          description: The contract ID (starts with con_).
          example: con_0cddb398-1dc6-4e6f-8726-9ec7cea85f35
          nullable: true
          type: string
        gasLimit:
          description: Gas limit in WEI.
          example: "1000000000000000000"
          type: string
        countLimit:
          description: Number of times the function will be sponsored.
          example: 1
          format: int32
          type: integer
        timeIntervalType:
          $ref: '#/components/schemas/TimeIntervalType'
        timeIntervalValue:
          description: Time interval value.
          example: 1
          format: int32
          type: integer
      required:
      - type
      type: object
    GasReport:
      additionalProperties: false
      example:
        data:
        - period:
            start: 6
            end: 0
          periodNumber: 1
          totalTransactionFee: totalTransactionFee
          transactionIntents:
          - gasUsed: gasUsed
            gasFee: gasFee
            gasFeeInUSD: gasFeeInUSD
            transactionIntentId: transactionIntentId
            gasPrice: gasPrice
          - gasUsed: gasUsed
            gasFee: gasFee
            gasFeeInUSD: gasFeeInUSD
            transactionIntentId: transactionIntentId
            gasPrice: gasPrice
          totalTransactionFeeInUSD: totalTransactionFeeInUSD
          averageTransactionFee: averageTransactionFee
        - period:
            start: 6
            end: 0
          periodNumber: 1
          totalTransactionFee: totalTransactionFee
          transactionIntents:
          - gasUsed: gasUsed
            gasFee: gasFee
            gasFeeInUSD: gasFeeInUSD
            transactionIntentId: transactionIntentId
            gasPrice: gasPrice
          - gasUsed: gasUsed
            gasFee: gasFee
            gasFeeInUSD: gasFeeInUSD
            transactionIntentId: transactionIntentId
            gasPrice: gasPrice
          totalTransactionFeeInUSD: totalTransactionFeeInUSD
          averageTransactionFee: averageTransactionFee
        object: null
      properties:
        object:
          $ref: '#/components/schemas/ResponseType.LIST'
        data:
          items:
            $ref: '#/components/schemas/GasReport_data_inner'
          type: array
      required:
      - data
      - object
      type: object
    PolicyRuleListQueries:
      additionalProperties: false
      properties:
        limit:
          description: Specifies the maximum number of records to return.
          format: int32
          minimum: 1
          type: integer
        skip:
          description: Specifies the offset for the first records to return.
          format: int32
          minimum: 0
          type: integer
        order:
          $ref: '#/components/schemas/SortOrder'
        expand:
          description: Specifies the fields to expand in the response.
          items:
            enum:
            - contract
            nullable: false
            type: string
          type: array
        policy:
          description: Specifies the unique policy ID (starts with pol_).
          example: pol_48eeba57-2cd5-4159-a2cb-057a23a35e65
          type: string
      required:
      - policy
      type: object
    CreatePolicyRuleRequest:
      additionalProperties: false
      example:
        countLimit: 1
        gasLimit: "1000000000000000000"
        timeIntervalValue: 1
        functionName: All functions
        contract: con_0cddb398-1dc6-4e6f-8726-9ec7cea85f35
        type: null
        timeIntervalType: null
        policy: pol_7e07ae30-2a4d-48fa-803f-361da94905dd
      properties:
        type:
          $ref: '#/components/schemas/PolicyRuleType'
        functionName:
          description: "Name of the function in the contract to allow. If you want\
            \ to allow all functions, use the wildcard 'All functions'."
          example: All functions
          nullable: true
          type: string
        contract:
          description: The contract ID (starts with con_).
          example: con_0cddb398-1dc6-4e6f-8726-9ec7cea85f35
          nullable: true
          type: string
        gasLimit:
          description: Gas limit in WEI.
          example: "1000000000000000000"
          type: string
        countLimit:
          description: Number of times the function will be sponsored.
          example: 1
          format: int32
          type: integer
        timeIntervalType:
          $ref: '#/components/schemas/TimeIntervalType'
        timeIntervalValue:
          description: Time interval value.
          example: 1
          format: int32
          type: integer
        policy:
          description: The unique Policy ID to add the rule to (starts with pol_).
          example: pol_7e07ae30-2a4d-48fa-803f-361da94905dd
          type: string
      required:
      - policy
      - type
      type: object
    PolicyRuleDeleteResponse:
      additionalProperties: false
      example:
        deleted: true
        id: id
        object: null
      properties:
        id:
          type: string
        object:
          $ref: '#/components/schemas/EntityType.POLICY_RULE'
        deleted:
          type: boolean
      required:
      - deleted
      - id
      - object
      type: object
    CreateSessionRequest:
      additionalProperties: false
      example:
        optimistic: true
        address: 0x1234567890abcdef1234567890abcdef12345678
        externalOwnerAddress: 0x1234567890abcdef1234567890abcdef12345678
        chainId: 80001
        limit: 1000
        validUntil: 12351235123
        whitelist:
        - 0x1234567890abcdef1234567890abcdef12345678
        validAfter: 10
        policy: pol_7e07ae30-2a4d-48fa-803f-361da94905dd
        player: pla_e0b84653-1741-4a3d-9e91-2b0fd2942f60
      properties:
        address:
          description: The address of the session key.
          example: 0x1234567890abcdef1234567890abcdef12345678
          type: string
        chainId:
          description: The chain ID.
          example: 80001
          format: int32
          type: integer
        externalOwnerAddress:
          description: "If no account exists for a given player, create one with this\
            \ address."
          example: 0x1234567890abcdef1234567890abcdef12345678
          type: string
        limit:
          description: Maximum number of times the session key can be used.
          example: 1000
          format: int32
          minimum: 1
          type: integer
        optimistic:
          description: Whether the transactionIntent is optimistic (resolve before
            it arrives on chain) or not.
          example: true
          type: boolean
        policy:
          description: The policy ID (starts with pol_).
          example: pol_7e07ae30-2a4d-48fa-803f-361da94905dd
          type: string
        validAfter:
          description: The unix timestamp in seconds when the session key becomes
            valid.
          example: 10
          format: int32
          type: integer
        validUntil:
          description: The unix timestamp in seconds when the session key expires.
          example: 12351235123
          format: int32
          type: integer
        whitelist:
          description: The list of whitelisted addresses (contracts the session key
            can interact with).
          example:
          - 0x1234567890abcdef1234567890abcdef12345678
          items:
            type: string
          type: array
        player:
          description: The player ID (starts with pla_).
          example: pla_e0b84653-1741-4a3d-9e91-2b0fd2942f60
          type: string
      required:
      - address
      - chainId
      - player
      - validAfter
      - validUntil
      type: object
    RevokeSessionRequest:
      additionalProperties: false
      example:
        optimistic: true
        address: 0x1234567890abcdef1234567890abcdef12345678
        chainId: 80001
        policy: pol_7e07ae30-2a4d-48fa-803f-361da94905dd
        player: pla_e0b84653-1741-4a3d-9e91-2b0fd2942f60
      properties:
        address:
          description: The address of the session key to revoke.
          example: 0x1234567890abcdef1234567890abcdef12345678
          type: string
        policy:
          description: The policy ID (starts with pol_)
          example: pol_7e07ae30-2a4d-48fa-803f-361da94905dd
          type: string
        optimistic:
          description: Whether the transactionIntent is optimistic (resolve before
            it arrives on chain) or not.
          example: true
          type: boolean
        chainId:
          description: The chain ID.
          example: 80001
          format: int32
          type: integer
        player:
          description: The player ID (starts with pla_).
          example: pla_e0b84653-1741-4a3d-9e91-2b0fd2942f60
          type: string
      required:
      - address
      - chainId
      - player
      type: object
    SessionListResponse:
      additionalProperties: false
      example:
        total: 1
        data:
        - createdAt: 0
          address: address
          limit: 1
          validUntil: validUntil
          id: id
          whitelist:
          - whitelist
          - whitelist
          nextAction:
            payload:
              userOp: ""
              userOpHash: userOpHash
            type: null
          transactionIntents:
          - null
          - null
          isActive: true
          validAfter: validAfter
          object: null
          updatedAt: 6
        - createdAt: 0
          address: address
          limit: 1
          validUntil: validUntil
          id: id
          whitelist:
          - whitelist
          - whitelist
          nextAction:
            payload:
              userOp: ""
              userOpHash: userOpHash
            type: null
          transactionIntents:
          - null
          - null
          isActive: true
          validAfter: validAfter
          object: null
          updatedAt: 6
        start: 0
        end: 6
        url: url
        object: null
      properties:
        object:
          $ref: '#/components/schemas/ResponseType.LIST'
        url:
          type: string
        data:
          items:
            $ref: '#/components/schemas/SessionResponse'
          type: array
        start:
          format: int32
          type: integer
        end:
          format: int32
          type: integer
        total:
          format: int32
          type: integer
      required:
      - data
      - end
      - object
      - start
      - total
      - url
      type: object
    SessionResponseExpandable:
      description: Contains list of the expandable fields for the session response
      enum:
      - transactionIntents
      nullable: false
      type: string
    SessionListQueries:
      additionalProperties: false
      properties:
        limit:
          description: Specifies the maximum number of records to return.
          format: int32
          minimum: 1
          type: integer
        skip:
          description: Specifies the offset for the first records to return.
          format: int32
          minimum: 0
          type: integer
        order:
          $ref: '#/components/schemas/SortOrder'
        player:
          description: The player ID (starts with pla_)
          example: pla_48eeba57-2cd5-4159-a2cb-057a23a35e65
          type: string
        expand:
          description: Specifies the fields to expand in the response.
          items:
            $ref: '#/components/schemas/SessionResponseExpandable'
          type: array
      required:
      - player
      type: object
    SignatureRequest:
      additionalProperties: false
      example:
        optimistic: true
        signature: 0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef
      properties:
        signature:
          description: signed userOperationHash by the owner or valid session key
          example: 0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef
          type: string
        optimistic:
          description: Whether the transactionIntent is optimistic (resolve before
            it arrives on chain) or not.
          example: true
          type: boolean
      required:
      - signature
      type: object
    EntityType.DEVELOPER_ACCOUNT:
      enum:
      - developerAccount
      type: string
    DeveloperAccountResponse:
      additionalProperties: false
      example:
        createdAt: 0.8008281904610115
        address: address
        custodial: true
        name: name
        id: id
        object: null
      properties:
        object:
          $ref: '#/components/schemas/EntityType.DEVELOPER_ACCOUNT'
        createdAt:
          format: double
          type: number
        id:
          type: string
        address:
          type: string
        custodial:
          type: boolean
        name:
          type: string
      required:
      - address
      - createdAt
      - custodial
      - id
      - object
      type: object
    DeveloperAccountCreateRequest:
      additionalProperties: false
      example:
        address: 0x662D24Bf7Ea2dD6a7D0935F680a6056b94fE934d
        signature: 0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef
        name: Escrow account
      properties:
        address:
          description: The address of the wallet that has deposited funds in the paymaster.
          example: 0x662D24Bf7Ea2dD6a7D0935F680a6056b94fE934d
          type: string
        signature:
          description: Signature to verify the account ownership.
          example: 0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef
          type: string
        name:
          description: The name of the account.
          example: Escrow account
          type: string
      type: object
    DeveloperAccountListResponse:
      additionalProperties: false
      example:
        total: 5
        data:
        - createdAt: 0.8008281904610115
          address: address
          custodial: true
          name: name
          id: id
          object: null
        - createdAt: 0.8008281904610115
          address: address
          custodial: true
          name: name
          id: id
          object: null
        start: 6
        end: 1
        url: url
        object: null
      properties:
        object:
          $ref: '#/components/schemas/ResponseType.LIST'
        url:
          type: string
        data:
          items:
            $ref: '#/components/schemas/DeveloperAccountResponse'
          type: array
        start:
          format: int32
          type: integer
        end:
          format: int32
          type: integer
        total:
          format: int32
          type: integer
      required:
      - data
      - end
      - object
      - start
      - total
      - url
      type: object
    DeveloperAccountDeleteResponse:
      additionalProperties: false
      example:
        deleted: true
        id: id
        object: null
      properties:
        id:
          type: string
        object:
          $ref: '#/components/schemas/EntityType.DEVELOPER_ACCOUNT'
        deleted:
          type: boolean
      required:
      - deleted
      - id
      - object
      type: object
    DeveloperAccountGetMessageResponse:
      additionalProperties: false
      example:
        address: address
        message: message
      properties:
        message:
          type: string
        address:
          type: string
      required:
      - address
      - message
      type: object
    SettingsWebhookUpdateRequest:
      additionalProperties: false
      example:
        url: https://example.com
      properties:
        url:
          description: The webhook url.
          example: https://example.com
          maxLength: 255
          minLength: 1
          type: string
      required:
      - url
      type: object
    TransactionIntentListResponse:
      additionalProperties: false
      example:
        total: 1
        data:
        - nextAction:
            payload:
              userOp: ""
              userOpHash: userOpHash
            type: null
          interactions:
          - functionArgs:
            - 0x662D24Bf7Ea2dD6a7D0935F680a6056b94fE934d
            functionName: mint
            contract: con_0cddb398-1dc6-4e6f-8726-9ec7cea85f35
            to: to
            value: value
          - functionArgs:
            - 0x662D24Bf7Ea2dD6a7D0935F680a6056b94fE934d
            functionName: mint
            contract: con_0cddb398-1dc6-4e6f-8726-9ec7cea85f35
            to: to
            value: value
          createdAt: 0
          chainId: 5
          response:
            createdAt: 1
            gasUsed: 5
            l1GasUsed: l1GasUsed
            blockNumber: 5
            to: to
            userOpHash: userOpHash
            error: ""
            logs:
            - blockHash: blockHash
              address: address
              logIndex: 3.616076749251911
              removed: true
              data: data
              topics:
              - topics
              - topics
              blockNumber: 7.061401241503109
              orphaned: true
              transactionIndex: 9.301444243932576
              transactionHash: transactionHash
            - blockHash: blockHash
              address: address
              logIndex: 3.616076749251911
              removed: true
              data: data
              topics:
              - topics
              - topics
              blockNumber: 7.061401241503109
              orphaned: true
              transactionIndex: 9.301444243932576
              transactionHash: transactionHash
            transactionHash: transactionHash
            status: 2
          userOperation: ""
          userOperationHash: userOperationHash
          id: id
          account: acc_...
          object: null
          updatedAt: 6
          policy: pol_...
          player: pla_...
        - nextAction:
            payload:
              userOp: ""
              userOpHash: userOpHash
            type: null
          interactions:
          - functionArgs:
            - 0x662D24Bf7Ea2dD6a7D0935F680a6056b94fE934d
            functionName: mint
            contract: con_0cddb398-1dc6-4e6f-8726-9ec7cea85f35
            to: to
            value: value
          - functionArgs:
            - 0x662D24Bf7Ea2dD6a7D0935F680a6056b94fE934d
            functionName: mint
            contract: con_0cddb398-1dc6-4e6f-8726-9ec7cea85f35
            to: to
            value: value
          createdAt: 0
          chainId: 5
          response:
            createdAt: 1
            gasUsed: 5
            l1GasUsed: l1GasUsed
            blockNumber: 5
            to: to
            userOpHash: userOpHash
            error: ""
            logs:
            - blockHash: blockHash
              address: address
              logIndex: 3.616076749251911
              removed: true
              data: data
              topics:
              - topics
              - topics
              blockNumber: 7.061401241503109
              orphaned: true
              transactionIndex: 9.301444243932576
              transactionHash: transactionHash
            - blockHash: blockHash
              address: address
              logIndex: 3.616076749251911
              removed: true
              data: data
              topics:
              - topics
              - topics
              blockNumber: 7.061401241503109
              orphaned: true
              transactionIndex: 9.301444243932576
              transactionHash: transactionHash
            transactionHash: transactionHash
            status: 2
          userOperation: ""
          userOperationHash: userOperationHash
          id: id
          account: acc_...
          object: null
          updatedAt: 6
          policy: pol_...
          player: pla_...
        start: 0
        end: 6
        url: url
        object: null
      properties:
        object:
          $ref: '#/components/schemas/ResponseType.LIST'
        url:
          type: string
        data:
          items:
            $ref: '#/components/schemas/TransactionIntentResponse'
          type: array
        start:
          format: int32
          type: integer
        end:
          format: int32
          type: integer
        total:
          format: int32
          type: integer
      required:
      - data
      - end
      - object
      - start
      - total
      - url
      type: object
    ErrorType.INVALID_REQUEST_ERROR:
      enum:
      - invalid_request_error
      type: string
    FieldErrors:
      additionalProperties:
        $ref: '#/components/schemas/FieldErrors_value'
      properties: {}
      type: object
    InvalidRequestError:
      additionalProperties: false
      properties:
        type:
          $ref: '#/components/schemas/ErrorType.INVALID_REQUEST_ERROR'
        message:
          type: string
        details:
          additionalProperties:
            $ref: '#/components/schemas/FieldErrors_value'
          properties: {}
          type: object
      required:
      - message
      - type
      type: object
    InvalidRequestErrorResponse:
      additionalProperties: false
      properties:
        error:
          $ref: '#/components/schemas/InvalidRequestError'
      required:
      - error
      type: object
    TransactionIntentResponseExpandable:
      enum:
      - policy
      - player
      - account
      nullable: false
      type: string
    TransactionIntentListQueries:
      additionalProperties: false
      properties:
        limit:
          description: Specifies the maximum number of records to return.
          format: int32
          minimum: 1
          type: integer
        skip:
          description: Specifies the offset for the first records to return.
          format: int32
          minimum: 0
          type: integer
        order:
          $ref: '#/components/schemas/SortOrder'
        expand:
          description: Specifies the fields to expand in the response.
          items:
            $ref: '#/components/schemas/TransactionIntentResponseExpandable'
          type: array
        chainId:
          description: The chain ID.
          example: 80001
          format: int32
          type: integer
        accountId:
          description: Filter by account ID.
          example:
          - acc_dc981458-a653-4539-b120-a321915b2896
          items:
            type: string
          type: array
        playerId:
          description: Filter by player ID (starts with pla_).
          example:
          - pla_556166c9-77ad-4a39-aaf8-c432defa8a0f
          items:
            type: string
          type: array
        policyId:
          description: Filter by policy ID (starts with pol_).
          example:
          - pol_7e07ae30-2a4d-48fa-803f-361da94905dd
          items:
            type: string
          type: array
      type: object
    CreateTransactionIntentRequest:
      additionalProperties: false
      example:
        optimistic: true
        externalOwnerAddress: 0x1234567890abcdef1234567890abcdef12345678
        chainId: 80001
        account: acc_e1b24353-1741-4a3d-9e91-2b0fd2942f60
        confirmationBlocks: 5
        player: pla_e0b84653-1741-4a3d-9e91-2b0fd2942f60
        policy: pol_7e07ae30-2a4d-48fa-803f-361da94905dd
        interactions:
        - functionArgs:
          - 0x662D24Bf7Ea2dD6a7D0935F680a6056b94fE934d
          functionName: mint
          contract: con_0cddb398-1dc6-4e6f-8726-9ec7cea85f35
          to: to
          value: value
        - functionArgs:
          - 0x662D24Bf7Ea2dD6a7D0935F680a6056b94fE934d
          functionName: mint
          contract: con_0cddb398-1dc6-4e6f-8726-9ec7cea85f35
          to: to
          value: value
      properties:
        chainId:
          description: The chain ID.
          example: 80001
          format: int32
          type: integer
        player:
          description: The player ID (starts with pla_).
          example: pla_e0b84653-1741-4a3d-9e91-2b0fd2942f60
          type: string
        account:
          description: The account ID (starts with acc_ or dac_).
          example: acc_e1b24353-1741-4a3d-9e91-2b0fd2942f60
          type: string
        policy:
          description: The policy ID (starts with pol_).
          example: pol_7e07ae30-2a4d-48fa-803f-361da94905dd
          type: string
        externalOwnerAddress:
          description: "If no account exists for a given player, create one with this\
            \ address."
          example: 0x1234567890abcdef1234567890abcdef12345678
          type: string
        optimistic:
          description: Whether the transactionIntent is optimistic (resolve before
            it arrives on chain) or not.
          example: true
          type: boolean
        confirmationBlocks:
          description: Specify the number of confirmation blocks after which the confirmation
            webhook will be sent.
          example: 5
          format: int32
          minimum: 1
          type: integer
        interactions:
          items:
            $ref: '#/components/schemas/Interaction'
          type: array
      required:
      - chainId
      - interactions
      - optimistic
      type: object
    EstimateTransactionIntentGasResult:
      additionalProperties: false
      description: return value from estimateTransactionIntentCost
      example:
        verificationGas: verificationGas
        callGasLimit: callGasLimit
        estimatedTXGasFee: estimatedTXGasFee
        estimatedTXGasFeeToken: estimatedTXGasFeeToken
        verificationGasLimit: verificationGasLimit
        validUntil: validUntil
        estimatedTXGasFeeUSD: estimatedTXGasFeeUSD
        preVerificationGas: preVerificationGas
        validAfter: validAfter
        estimatedTXGas: estimatedTXGas
        gasPrice: gasPrice
      properties:
        preVerificationGas:
          description: the preVerification gas used by this UserOperation.
          type: string
        verificationGas:
          description: "gas used for validation of this UserOperation, including account\
            \ creation"
          type: string
        validUntil:
          description: "the deadline after which this UserOperation is invalid (not\
            \ a gas estimation parameter, but returned by validation"
          type: string
        validAfter:
          description: "the deadline after which this UserOperation is valid (not\
            \ a gas estimation parameter, but returned by validation"
          type: string
        callGasLimit:
          description: estimated cost of calling the account with the given callData
          type: string
        verificationGasLimit:
          description: returned by some bundlers (e.g. Biconomy's)
          type: string
        estimatedTXGas:
          description: estimated TX gas cost
          type: string
        estimatedTXGasFee:
          description: estimated TX gas cost in the chain native token (WEI)
          type: string
        estimatedTXGasFeeUSD:
          description: estimated TX gas cost in USD
          type: string
        estimatedTXGasFeeToken:
          description: "when using a policy, the estimated TX gas cost in the ERC-20\
            \ token defined in the strategy (WEI)"
          type: string
        gasPrice:
          description: gas price used for the estimation
          type: string
      required:
      - callGasLimit
      - estimatedTXGas
      - estimatedTXGasFee
      - estimatedTXGasFeeUSD
      - gasPrice
      - preVerificationGas
      - verificationGas
      type: object
    EntityType.WEB3_CONNECTION:
      enum:
      - web3Connection
      type: string
    Web3ConnectionResponse:
      additionalProperties: false
      example:
        createdAt: 0
        disconnected: true
        id: id
        object: null
        player: pla_...
      properties:
        id:
          type: string
        object:
          $ref: '#/components/schemas/EntityType.WEB3_CONNECTION'
        createdAt:
          format: int32
          type: integer
        disconnected:
          type: boolean
        player:
          $ref: '#/components/schemas/Web3ConnectionResponse_player'
      required:
      - createdAt
      - disconnected
      - id
      - object
      - player
      type: object
    Web3ConnectionListResponse:
      additionalProperties: false
      example:
        total: 5
        data:
        - createdAt: 0
          disconnected: true
          id: id
          object: null
          player: pla_...
        - createdAt: 0
          disconnected: true
          id: id
          object: null
          player: pla_...
        start: 6
        end: 1
        url: url
        object: null
      properties:
        object:
          $ref: '#/components/schemas/ResponseType.LIST'
        url:
          type: string
        data:
          items:
            $ref: '#/components/schemas/Web3ConnectionResponse'
          type: array
        start:
          format: int32
          type: integer
        end:
          format: int32
          type: integer
        total:
          format: int32
          type: integer
      required:
      - data
      - end
      - object
      - start
      - total
      - url
      type: object
    Web3ConnectionListQueries:
      additionalProperties: false
      properties:
        limit:
          description: Specifies the maximum number of records to return.
          format: int32
          minimum: 1
          type: integer
        skip:
          description: Specifies the offset for the first records to return.
          format: int32
          minimum: 0
          type: integer
        order:
          $ref: '#/components/schemas/SortOrder'
        player:
          description: Specifies the unique player ID (starts with pla_)
          example: pla_6f6c9067-89fa-4fc8-ac72-c242a268c584
          type: string
        disconnected:
          description: Specifies connection status
          example: false
          type: boolean
      type: object
    Web3ConnectionResponseExpandable:
      enum:
      - player
      nullable: false
      type: string
    CreateWeb3ConnectionRequest:
      additionalProperties: false
      example:
        chainId: 80001
        uri: wc:f6b98f7d78c5233413aacc7cbe9ff6035eec3611d36eb311051429a83af419a1@2?relay-protocol=irn&symKey=e8b33b4b969dc952ba6d28bd58f0ddb7ec1106a3c9610961218061a7813f11a6
        player: pla_e0b84653-1741-4a3d-9e91-2b0fd2942f60
      properties:
        player:
          description: The player ID (starts with pla_).
          example: pla_e0b84653-1741-4a3d-9e91-2b0fd2942f60
          type: string
        chainId:
          description: The chain ID.
          example: 80001
          format: int32
          type: integer
        uri:
          description: Specifies the URI of WalletConnect.
          example: wc:f6b98f7d78c5233413aacc7cbe9ff6035eec3611d36eb311051429a83af419a1@2?relay-protocol=irn&symKey=e8b33b4b969dc952ba6d28bd58f0ddb7ec1106a3c9610961218061a7813f11a6
          type: string
      required:
      - chainId
      - player
      - uri
      type: object
    Web3ActionStatusEnum:
      enum:
      - Pending
      - Approved
      - Rejected
      - Expired
      - Failed
      type: string
    EntityType.WEB3_ACTION:
      enum:
      - web3Action
      type: string
    Web3ActionResponse:
      additionalProperties: false
      example:
        chaindId: chaindId
        method: method
        data: data
        web3Connection: web3_...
        createdAt: 0
        decodedData: decodedData
        gas: gas
        hashedData: hashedData
        from: from
        id: id
        to: to
        value: value
        object: null
        status: null
      properties:
        id:
          type: string
        object:
          $ref: '#/components/schemas/EntityType.WEB3_ACTION'
        createdAt:
          format: int32
          type: integer
        web3Connection:
          description: The web3_connection ID (starts with web3_).
          example: web3_...
          type: string
        status:
          $ref: '#/components/schemas/Web3ActionStatusEnum'
        chaindId:
          type: string
        method:
          type: string
        from:
          type: string
        to:
          type: string
        data:
          type: string
        decodedData:
          type: string
        hashedData:
          type: string
        value:
          type: string
        gas:
          type: string
      required:
      - chaindId
      - createdAt
      - data
      - decodedData
      - from
      - hashedData
      - id
      - method
      - object
      - status
      - web3Connection
      type: object
    Web3ActionListResponse:
      additionalProperties: false
      example:
        total: 5
        data:
        - chaindId: chaindId
          method: method
          data: data
          web3Connection: web3_...
          createdAt: 0
          decodedData: decodedData
          gas: gas
          hashedData: hashedData
          from: from
          id: id
          to: to
          value: value
          object: null
          status: null
        - chaindId: chaindId
          method: method
          data: data
          web3Connection: web3_...
          createdAt: 0
          decodedData: decodedData
          gas: gas
          hashedData: hashedData
          from: from
          id: id
          to: to
          value: value
          object: null
          status: null
        start: 6
        end: 1
        url: url
        object: null
      properties:
        object:
          $ref: '#/components/schemas/ResponseType.LIST'
        url:
          type: string
        data:
          items:
            $ref: '#/components/schemas/Web3ActionResponse'
          type: array
        start:
          format: int32
          type: integer
        end:
          format: int32
          type: integer
        total:
          format: int32
          type: integer
      required:
      - data
      - end
      - object
      - start
      - total
      - url
      type: object
    SubmitWeb3ActionRequest:
      additionalProperties: false
      example:
        signature: 0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef
        approve: true
        policy: pol_7e07ae30-2a4d-48fa-803f-361da94905dd
      properties:
        approve:
          description: "True to approve the action, false to reject it."
          example: true
          type: boolean
        policy:
          description: The policy ID (starts with pol_)
          example: pol_7e07ae30-2a4d-48fa-803f-361da94905dd
          type: string
        signature:
          description: signed data by the owner
          example: 0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef
          type: string
      required:
      - approve
      type: object
    Currency:
      enum:
      - usd
      type: string
    Money:
      additionalProperties: false
      properties:
        amount:
          description: Amount in cents
          format: int64
          minimum: 1
          type: integer
        currency:
          $ref: '#/components/schemas/Currency'
      required:
      - amount
      - currency
      type: object
    BalanceResponse:
      additionalProperties: false
      properties:
        balance:
          $ref: '#/components/schemas/Money'
        expenses:
          $ref: '#/components/schemas/Money'
        payments:
          $ref: '#/components/schemas/Money'
      required:
      - balance
      - expenses
      - payments
      type: object
    CheckoutResponse:
      additionalProperties: false
      properties:
        url:
          type: string
      required:
      - url
      type: object
    CheckoutRequest:
      additionalProperties: false
      properties:
        amount:
          description: Amount in cents
          format: int64
          minimum: 1
          type: integer
        currency:
          $ref: '#/components/schemas/Currency'
        cancelUrl:
          type: string
        successUrl:
          type: string
      required:
      - amount
      - currency
      type: object
    AuthorizeWithOAuthToken_200_response:
      anyOf:
      - $ref: '#/components/schemas/AuthResponse'
      - $ref: '#/components/schemas/AuthenticatedPlayerResponse'
    PlayerMetadata_value:
      anyOf:
      - type: string
      - format: double
        type: number
    PlayerResponse_transactionIntents_inner:
      anyOf:
      - $ref: '#/components/schemas/TransactionIntent'
      - $ref: '#/components/schemas/EntityIdResponse'
    PlayerResponse_accounts_inner:
      anyOf:
      - $ref: '#/components/schemas/Account'
      - $ref: '#/components/schemas/EntityIdResponse'
    AuthPlayerResponse_player:
      anyOf:
      - $ref: '#/components/schemas/PlayerResponse'
      - $ref: '#/components/schemas/Pick_PlayerResponse.id_'
    TransactionIntentResponse_policy:
      anyOf:
      - $ref: '#/components/schemas/Policy'
      - $ref: '#/components/schemas/EntityIdResponse'
      description: The policy ID (starts with pol_).
      example: pol_...
    TransactionIntentResponse_player:
      anyOf:
      - $ref: '#/components/schemas/Player'
      - $ref: '#/components/schemas/EntityIdResponse'
      description: The player ID (starts with pla_).
      example: pla_...
    TransactionIntentResponse_account:
      anyOf:
      - $ref: '#/components/schemas/Account'
      - $ref: '#/components/schemas/EntityIdResponse'
      description: The account ID.
      example: acc_...
    UserProjectCreateRequest_role:
      anyOf:
      - $ref: '#/components/schemas/UserProjectRole.MEMBER'
      - $ref: '#/components/schemas/UserProjectRole.ADMIN'
      description: The role of the user.
      example: MEMBER
    ContractPolicyRuleResponse_contract:
      anyOf:
      - $ref: '#/components/schemas/ContractResponse'
      - $ref: '#/components/schemas/Pick_ContractResponse.id_'
    PolicyResponse_policyRules_inner:
      anyOf:
      - $ref: '#/components/schemas/PolicyRuleResponse'
      - $ref: '#/components/schemas/EntityIdResponse'
    GasReport_data_inner_transactionIntents_inner:
      example:
        gasUsed: gasUsed
        gasFee: gasFee
        gasFeeInUSD: gasFeeInUSD
        transactionIntentId: transactionIntentId
        gasPrice: gasPrice
      properties:
        gasFeeInUSD:
          type: string
        gasUsed:
          type: string
        gasPrice:
          type: string
        gasFee:
          type: string
        transactionIntentId:
          type: string
      required:
      - gasFee
      - gasFeeInUSD
      - gasPrice
      - gasUsed
      - transactionIntentId
      type: object
    GasReport_data_inner_period:
      example:
        start: 6
        end: 0
      properties:
        end:
          format: int32
          type: integer
        start:
          format: int32
          type: integer
      required:
      - end
      - start
      type: object
    GasReport_data_inner:
      example:
        period:
          start: 6
          end: 0
        periodNumber: 1
        totalTransactionFee: totalTransactionFee
        transactionIntents:
        - gasUsed: gasUsed
          gasFee: gasFee
          gasFeeInUSD: gasFeeInUSD
          transactionIntentId: transactionIntentId
          gasPrice: gasPrice
        - gasUsed: gasUsed
          gasFee: gasFee
          gasFeeInUSD: gasFeeInUSD
          transactionIntentId: transactionIntentId
          gasPrice: gasPrice
        totalTransactionFeeInUSD: totalTransactionFeeInUSD
        averageTransactionFee: averageTransactionFee
      properties:
        transactionIntents:
          items:
            $ref: '#/components/schemas/GasReport_data_inner_transactionIntents_inner'
          type: array
        totalTransactionFeeInUSD:
          type: string
        totalTransactionFee:
          type: string
        averageTransactionFee:
          type: string
        period:
          $ref: '#/components/schemas/GasReport_data_inner_period'
        periodNumber:
          format: int32
          type: integer
      required:
      - averageTransactionFee
      - period
      - periodNumber
      - totalTransactionFee
      - totalTransactionFeeInUSD
      - transactionIntents
      type: object
    FieldErrors_value:
      properties:
        value: {}
        message:
          type: string
      required:
      - message
      type: object
    Web3ConnectionResponse_player:
      anyOf:
      - $ref: '#/components/schemas/Player'
      - type: string
      description: The player ID (starts with pla_).
      example: pla_...
  securitySchemes:
    pk:
      scheme: bearer
      type: http
    sk:
      scheme: bearer
      type: http

